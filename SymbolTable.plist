{
	"/usr/lib/libSystem.B.dylib" = {
		// decl for __crashreporter_info__ not found
		// decl for libSystem_atfork_child not found
		// decl for libSystem_atfork_parent not found
		// decl for libSystem_atfork_prepare not found
		// decl for mach_init_routine not found
		// decl for _cache_handle_memory_pressure_event not found
		"cache_create" = "i*^{cache_attributes_s=}^?";
		"cache_destroy" = "i^{cache_s=}";
		"cache_get_and_retain" = "i^{cache_s=}^v^?";
		// decl for cache_get_cost_hint not found
		// decl for cache_get_count_hint not found
		// decl for cache_get_info not found
		// decl for cache_get_info_for_key not found
		// decl for cache_get_info_for_keys not found
		// decl for cache_get_minimum_values_hint not found
		// decl for cache_get_name not found
		"cache_hash_byte_string" = "Q*Q";
		// decl for cache_invoke not found
		"cache_key_hash_cb_cstring" = "Q^v^v";
		"cache_key_hash_cb_integer" = "Q^v^v";
		"cache_key_is_equal_cb_cstring" = "B^v^v^v";
		"cache_key_is_equal_cb_integer" = "B^v^v^v";
		// decl for cache_print not found
		// decl for cache_print_stats not found
		"cache_release_cb_free" = "v^v^v";
		"cache_release_value" = "i^{cache_s=}^v";
		"cache_remove" = "i^{cache_s=}^v";
		"cache_remove_all" = "i^{cache_s=}";
		// decl for cache_remove_with_block not found
		"cache_set_and_retain" = "i^{cache_s=}^v^vQ";
		// decl for cache_set_cost_hint not found
		// decl for cache_set_count_hint not found
		// decl for cache_set_minimum_values_hint not found
		// decl for cache_set_name not found
		// decl for cache_simulate_memory_warning_event not found
		"cache_value_make_nonpurgeable_cb" = "B^v^v";
		"cache_value_make_purgeable_cb" = "v^v^v";
		// decl for CCAESCmac not found
		// decl for CCAESCmacCreate not found
		// decl for CCAESCmacDestroy not found
		// decl for CCAESCmacFinal not found
		// decl for CCAESCmacOutputSizeFromContext not found
		// decl for CCAESCmacUpdate not found
		// decl for CCBigNumAdd not found
		// decl for CCBigNumAddI not found
		// decl for CCBigNumBitCount not found
		// decl for CCBigNumByteCount not found
		// decl for CCBigNumClear not found
		// decl for CCBigNumCompare not found
		// decl for CCBigNumCompareI not found
		// decl for CCBigNumCopy not found
		// decl for CCBigNumCreateRandom not found
		// decl for CCBigNumDiv not found
		// decl for CCBigNumDiv2 not found
		// decl for CCBigNumFree not found
		// decl for CCBigNumFromData not found
		// decl for CCBigNumFromDecimalString not found
		// decl for CCBigNumFromHexString not found
		// decl for CCBigNumGCD not found
		// decl for CCBigNumGetI not found
		// decl for CCBigNumInverseMod not found
		// decl for CCBigNumIsNegative not found
		// decl for CCBigNumIsOdd not found
		// decl for CCBigNumIsPrime not found
		// decl for CCBigNumIsZero not found
		// decl for CCBigNumLCM not found
		// decl for CCBigNumLeftShift not found
		// decl for CCBigNumMod not found
		// decl for CCBigNumModExp not found
		// decl for CCBigNumModI not found
		// decl for CCBigNumMontgomeryNormalization not found
		// decl for CCBigNumMontgomeryReduce not found
		// decl for CCBigNumMontgomerySetup not found
		// decl for CCBigNumMul not found
		// decl for CCBigNumMulI not found
		// decl for CCBigNumMulMod not found
		// decl for CCBigNumRightShift not found
		// decl for CCBigNumSetI not found
		// decl for CCBigNumSetNegative not found
		// decl for CCBigNumSquare not found
		// decl for CCBigNumSquareMod not found
		// decl for CCBigNumSub not found
		// decl for CCBigNumSubI not found
		// decl for CCBigNumToData not found
		// decl for CCBigNumToDecimalString not found
		// decl for CCBigNumToHexString not found
		// decl for CCBigNumZeroLSBCount not found
		"CCCalibratePBKDF" = "IIQQIQI";
		// decl for CCCreateBigNum not found
		"CCCrypt" = "iIII^vQ^v^vQ^vQ^Q";
		// decl for CCCryptorAddParameter not found
		"CCCryptorCreate" = "iIII^vQ^v^^{_CCCryptor=}";
		"CCCryptorCreateFromData" = "iIII^vQ^v^vQ^^{_CCCryptor=}^Q";
		// decl for CCCryptorCreateFromDataWithMode not found
		"CCCryptorCreateWithMode" = "iIIII^v^vQ^vQiI^^{_CCCryptor=}";
		// decl for CCCryptorDecryptDataBlock not found
		// decl for CCCryptorEncryptDataBlock not found
		"CCCryptorFinal" = "i^{_CCCryptor=}^vQ^Q";
		// decl for CCCryptorGCM not found
		// decl for CCCryptorGCMAddAAD not found
		// decl for CCCryptorGCMAddADD not found
		// decl for CCCryptorGCMAddIV not found
		// decl for CCCryptorGCMDecrypt not found
		// decl for CCCryptorGCMEncrypt not found
		// decl for CCCryptorGCMFinal not found
		// decl for CCCryptorGCMFinalize not found
		// decl for CCCryptorGCMOneshotDecrypt not found
		// decl for CCCryptorGCMOneshotEncrypt not found
		// decl for CCCryptorGCMReset not found
		// decl for CCCryptorGCMSetIV not found
		// decl for CCCryptorGCMaddAAD not found
		// decl for CCCryptorGetIV not found
		"CCCryptorGetOutputLength" = "Q^{_CCCryptor=}QB";
		// decl for CCCryptorGetParameter not found
		"CCCryptorRelease" = "i^{_CCCryptor=}";
		"CCCryptorReset" = "i^{_CCCryptor=}^v";
		// decl for CCCryptorReset_binary_compatibility not found
		"CCCryptorUpdate" = "i^{_CCCryptor=}^vQ^vQ^Q";
		// decl for CCDHComputeKey not found
		// decl for CCDHCreate not found
		// decl for CCDHGenerateKey not found
		// decl for CCDHParametersCreateFromData not found
		// decl for CCDHParametersCreateFromPKCS3 not found
		// decl for CCDHParametersPKCS3Encode not found
		// decl for CCDHParametersPKCS3EncodeLength not found
		// decl for CCDHParametersRelease not found
		// decl for CCDHRelease not found
		// decl for CCDesCBCCksum not found
		// decl for CCDesIsWeakKey not found
		// decl for CCDesSetOddParity not found
		// decl for CCDigest not found
		// decl for CCDigestBlockSize not found
		// decl for CCDigestCreate not found
		// decl for CCDigestCreateByOID not found
		// decl for CCDigestDestroy not found
		// decl for CCDigestFinal not found
		// decl for CCDigestGetBlockSize not found
		// decl for CCDigestGetBlockSizeFromRef not found
		// decl for CCDigestGetOutputSize not found
		// decl for CCDigestGetOutputSizeFromRef not found
		// decl for CCDigestInit not found
		// decl for CCDigestOID not found
		// decl for CCDigestOIDLen not found
		// decl for CCDigestOutputSize not found
		// decl for CCDigestReset not found
		// decl for CCDigestUpdate not found
		// decl for CCECCryptorComputeSharedSecret not found
		// decl for CCECCryptorCreateFromData not found
		// decl for CCECCryptorExportKey not found
		// decl for CCECCryptorExportPublicKey not found
		// decl for CCECCryptorGeneratePair not found
		// decl for CCECCryptorGetKeyComponents not found
		// decl for CCECCryptorGetPublicKeyFromPrivateKey not found
		// decl for CCECCryptorImportKey not found
		// decl for CCECCryptorImportPublicKey not found
		// decl for CCECCryptorRelease not found
		// decl for CCECCryptorSignHash not found
		// decl for CCECCryptorUnwrapKey not found
		// decl for CCECCryptorVerifyHash not found
		// decl for CCECCryptorWrapKey not found
		// decl for CCECGetKeySize not found
		// decl for CCECGetKeyType not found
		"CCHmac" = "vI^vQ^vQ^v";
		// decl for CCHmacClone not found
		// decl for CCHmacCreate not found
		// decl for CCHmacDestroy not found
		"CCHmacFinal" = "v^{?=}^v";
		"CCHmacInit" = "v^{?=}I^vQ";
		// decl for CCHmacOneShot not found
		// decl for CCHmacOutputSize not found
		// decl for CCHmacOutputSizeFromRef not found
		"CCHmacUpdate" = "v^{?=}^vQ";
		// decl for CCKeyDerivationHMac not found
		"CCKeyDerivationPBKDF" = "iI*Q^CQII^CQ";
		// decl for CCRNGCreate not found
		// decl for CCRNGRelease not found
		// decl for CCRSACryptorCreateFromData not found
		// decl for CCRSACryptorCreatePairFromData not found
		// decl for CCRSACryptorCrypt not found
		// decl for CCRSACryptorDecrypt not found
		// decl for CCRSACryptorEncrypt not found
		// decl for CCRSACryptorExport not found
		// decl for CCRSACryptorGeneratePair not found
		// decl for CCRSACryptorGetPublicKeyFromPrivateKey not found
		// decl for CCRSACryptorImport not found
		// decl for CCRSACryptorRelease not found
		// decl for CCRSACryptorSign not found
		// decl for CCRSACryptorVerify not found
		// decl for CCRSAGetCRTComponents not found
		// decl for CCRSAGetCRTComponentsSizes not found
		// decl for CCRSAGetKeyComponents not found
		// decl for CCRSAGetKeySize not found
		// decl for CCRSAGetKeyType not found
		// decl for CCRandomCopyBytes not found
		// decl for CCRandomGenerateBytes not found
		"CCSymmetricKeyUnwrap" = "iI^CQ^CQ^CQ^C^Q";
		"CCSymmetricKeyWrap" = "iI^CQ^CQ^CQ^C^Q";
		"CCSymmetricUnwrappedSize" = "QIQ";
		"CCSymmetricWrappedSize" = "QIQ";
		"CC_MD2" = "^C^vI^C";
		"CC_MD2_Final" = "i^C^{CC_MD2state_st=}";
		"CC_MD2_Init" = "i^{CC_MD2state_st=}";
		"CC_MD2_Update" = "i^{CC_MD2state_st=}^vI";
		"CC_MD4" = "^C^vI^C";
		"CC_MD4_Final" = "i^C^{CC_MD4state_st=}";
		"CC_MD4_Init" = "i^{CC_MD4state_st=}";
		"CC_MD4_Update" = "i^{CC_MD4state_st=}^vI";
		"CC_MD5" = "^C^vI^C";
		"CC_MD5_Final" = "i^C^{CC_MD5state_st=}";
		"CC_MD5_Init" = "i^{CC_MD5state_st=}";
		"CC_MD5_Update" = "i^{CC_MD5state_st=}^vI";
		// decl for CC_RC4 not found
		// decl for CC_RC4_set_key not found
		"CC_SHA1" = "^C^vI^C";
		"CC_SHA1_Final" = "i^C^{CC_SHA1state_st=}";
		"CC_SHA1_Init" = "i^{CC_SHA1state_st=}";
		"CC_SHA1_Update" = "i^{CC_SHA1state_st=}^vI";
		"CC_SHA224" = "^C^vI^C";
		"CC_SHA224_Final" = "i^C^{CC_SHA256state_st=}";
		"CC_SHA224_Init" = "i^{CC_SHA256state_st=}";
		"CC_SHA224_Update" = "i^{CC_SHA256state_st=}^vI";
		"CC_SHA256" = "^C^vI^C";
		"CC_SHA256_Final" = "i^C^{CC_SHA256state_st=}";
		"CC_SHA256_Init" = "i^{CC_SHA256state_st=}";
		"CC_SHA256_Update" = "i^{CC_SHA256state_st=}^vI";
		"CC_SHA384" = "^C^vI^C";
		"CC_SHA384_Final" = "i^C^{CC_SHA512state_st=}";
		"CC_SHA384_Init" = "i^{CC_SHA512state_st=}";
		"CC_SHA384_Update" = "i^{CC_SHA512state_st=}^vI";
		"CC_SHA512" = "^C^vI^C";
		"CC_SHA512_Final" = "i^C^{CC_SHA512state_st=}";
		"CC_SHA512_Init" = "i^{CC_SHA512state_st=}";
		"CC_SHA512_Update" = "i^{CC_SHA512state_st=}^vI";
		// decl for CCrfc3394_iv not found
		// decl for CCrfc3394_ivQen not found
		// decl for CNCRC not found
		// decl for CNCRCDumpTable not found
		// decl for CNCRCFinal not found
		// decl for CNCRCInit not found
		// decl for CNCRCRelease not found
		// decl for CNCRCUpdate not found
		// decl for CNCRCWeakTest not found
		// decl for CNEncode not found
		// decl for CNEncoderBlocksize not found
		// decl for CNEncoderBlocksizeFromRef not found
		// decl for CNEncoderCreate not found
		// decl for CNEncoderCreateCustom not found
		// decl for CNEncoderFinal not found
		// decl for CNEncoderGetOutputLength not found
		// decl for CNEncoderGetOutputLengthFromEncoding not found
		// decl for CNEncoderRelease not found
		// decl for CNEncoderUpdate not found
		// decl for MD5Final not found
		// decl for ccDRBGGetRngState not found
		// decl for ccDevRandomGetRngState not found
		// decl for __clzti2 not found
		// decl for __divti3 not found
		// decl for __fixdfti not found
		// decl for __fixsfti not found
		// decl for __fixunsdfti not found
		// decl for __fixunssfti not found
		// decl for __floattidf not found
		// decl for __floattisf not found
		// decl for __floatuntidf not found
		// decl for __floatuntisf not found
		// decl for __gcc_personality_v0 not found
		// decl for __modti3 not found
		// decl for __udivmodti4 not found
		// decl for __udivti3 not found
		// decl for __umodti3 not found
		// decl for ld$hide$os7.0$___extendhfsf2 not found
		// decl for ld$hide$os7.0$___truncdfhf2 not found
		// decl for ld$hide$os7.0$___truncsfhf2 not found
		// decl for ld$hide$os7.0$_atomic_flag_clear not found
		// decl for ld$hide$os7.0$_atomic_flag_clear_explicit not found
		// decl for ld$hide$os7.0$_atomic_flag_test_and_set not found
		// decl for ld$hide$os7.0$_atomic_flag_test_and_set_explicit not found
		// decl for ld$hide$os7.0$_atomic_signal_fence not found
		// decl for ld$hide$os7.0$_atomic_thread_fence not found
		// decl for ld$hide$os7.1$___extendhfsf2 not found
		// decl for ld$hide$os7.1$___truncdfhf2 not found
		// decl for ld$hide$os7.1$___truncsfhf2 not found
		// decl for ld$hide$os7.1$_atomic_flag_clear not found
		// decl for ld$hide$os7.1$_atomic_flag_clear_explicit not found
		// decl for ld$hide$os7.1$_atomic_flag_test_and_set not found
		// decl for ld$hide$os7.1$_atomic_flag_test_and_set_explicit not found
		// decl for ld$hide$os7.1$_atomic_signal_fence not found
		// decl for ld$hide$os7.1$_atomic_thread_fence not found
		// decl for ld$hide$os8.0$___extendhfsf2 not found
		// decl for ld$hide$os8.0$___truncdfhf2 not found
		// decl for ld$hide$os8.0$___truncsfhf2 not found
		// decl for ld$hide$os8.0$_atomic_flag_clear not found
		// decl for ld$hide$os8.0$_atomic_flag_clear_explicit not found
		// decl for ld$hide$os8.0$_atomic_flag_test_and_set not found
		// decl for ld$hide$os8.0$_atomic_flag_test_and_set_explicit not found
		// decl for ld$hide$os8.0$_atomic_signal_fence not found
		// decl for ld$hide$os8.0$_atomic_thread_fence not found
		// decl for ld$hide$os8.1$___extendhfsf2 not found
		// decl for ld$hide$os8.1$___truncdfhf2 not found
		// decl for ld$hide$os8.1$___truncsfhf2 not found
		// decl for ld$hide$os8.1$_atomic_flag_clear not found
		// decl for ld$hide$os8.1$_atomic_flag_clear_explicit not found
		// decl for ld$hide$os8.1$_atomic_flag_test_and_set not found
		// decl for ld$hide$os8.1$_atomic_flag_test_and_set_explicit not found
		// decl for ld$hide$os8.1$_atomic_signal_fence not found
		// decl for ld$hide$os8.1$_atomic_thread_fence not found
		// decl for ld$hide$os8.2$___extendhfsf2 not found
		// decl for ld$hide$os8.2$___truncdfhf2 not found
		// decl for ld$hide$os8.2$___truncsfhf2 not found
		// decl for ld$hide$os8.2$_atomic_flag_clear not found
		// decl for ld$hide$os8.2$_atomic_flag_clear_explicit not found
		// decl for ld$hide$os8.2$_atomic_flag_test_and_set not found
		// decl for ld$hide$os8.2$_atomic_flag_test_and_set_explicit not found
		// decl for ld$hide$os8.2$_atomic_signal_fence not found
		// decl for ld$hide$os8.2$_atomic_thread_fence not found
		// decl for ld$hide$os8.3$___extendhfsf2 not found
		// decl for ld$hide$os8.3$___truncdfhf2 not found
		// decl for ld$hide$os8.3$___truncsfhf2 not found
		// decl for ld$hide$os8.3$_atomic_flag_clear not found
		// decl for ld$hide$os8.3$_atomic_flag_clear_explicit not found
		// decl for ld$hide$os8.3$_atomic_flag_test_and_set not found
		// decl for ld$hide$os8.3$_atomic_flag_test_and_set_explicit not found
		// decl for ld$hide$os8.3$_atomic_signal_fence not found
		// decl for ld$hide$os8.3$_atomic_thread_fence not found
		// decl for __atomic_compare_exchange not found
		// decl for __atomic_compare_exchange_1 not found
		// decl for __atomic_compare_exchange_2 not found
		// decl for __atomic_compare_exchange_4 not found
		// decl for __atomic_compare_exchange_8 not found
		// decl for __atomic_exchange not found
		// decl for __atomic_exchange_1 not found
		// decl for __atomic_exchange_2 not found
		// decl for __atomic_exchange_4 not found
		// decl for __atomic_exchange_8 not found
		// decl for __atomic_fetch_add_1 not found
		// decl for __atomic_fetch_add_2 not found
		// decl for __atomic_fetch_add_4 not found
		// decl for __atomic_fetch_add_8 not found
		// decl for __atomic_fetch_and_1 not found
		// decl for __atomic_fetch_and_2 not found
		// decl for __atomic_fetch_and_4 not found
		// decl for __atomic_fetch_and_8 not found
		// decl for __atomic_fetch_or_1 not found
		// decl for __atomic_fetch_or_2 not found
		// decl for __atomic_fetch_or_4 not found
		// decl for __atomic_fetch_or_8 not found
		// decl for __atomic_fetch_sub_1 not found
		// decl for __atomic_fetch_sub_2 not found
		// decl for __atomic_fetch_sub_4 not found
		// decl for __atomic_fetch_sub_8 not found
		// decl for __atomic_fetch_xor_1 not found
		// decl for __atomic_fetch_xor_2 not found
		// decl for __atomic_fetch_xor_4 not found
		// decl for __atomic_fetch_xor_8 not found
		// decl for __atomic_load not found
		// decl for __atomic_load_1 not found
		// decl for __atomic_load_2 not found
		// decl for __atomic_load_4 not found
		// decl for __atomic_load_8 not found
		// decl for __atomic_store not found
		// decl for __atomic_store_1 not found
		// decl for __atomic_store_2 not found
		// decl for __atomic_store_4 not found
		// decl for __atomic_store_8 not found
		// decl for __extendhfsf2 not found
		// decl for __gnu_f2h_ieee not found
		// decl for __gnu_h2f_ieee not found
		// decl for __muldc3 not found
		// decl for __mulsc3 not found
		// decl for __powidf2 not found
		// decl for __powisf2 not found
		// decl for __truncdfhf2 not found
		// decl for __truncsfhf2 not found
		// decl for atomic_flag_clear not found
		// decl for atomic_flag_clear_explicit not found
		// decl for atomic_flag_test_and_set not found
		// decl for atomic_flag_test_and_set_explicit not found
		// decl for atomic_signal_fence not found
		// decl for atomic_thread_fence not found
		// decl for vers not found
		"copyfile" = "i**^{_copyfile_state=}I";
		"copyfile_state_alloc" = "^{_copyfile_state=}";
		"copyfile_state_free" = "i^{_copyfile_state=}";
		"copyfile_state_get" = "i^{_copyfile_state=}I^v";
		"copyfile_state_set" = "i^{_copyfile_state=}I^v";
		"fcopyfile" = "iii^{_copyfile_state=}I";
		"xattr_flags_from_name" = "Q*";
		"xattr_intent_with_flags" = "iIQ";
		"xattr_name_with_flags" = "**Q";
		"xattr_name_without_flags" = "**";
		"xattr_preserve_for_intent" = "i*I";
		// decl for cc_clear not found
		// decl for cc_cmp_safe not found
		// decl for cc_mux2p not found
		// decl for cc_muxp not found
		// decl for cc_try_abort not found
		// decl for ccaes_arm_cbc_decrypt_mode not found
		// decl for ccaes_arm_cbc_encrypt_mode not found
		// decl for ccaes_arm_cfb_decrypt_mode not found
		// decl for ccaes_arm_cfb_encrypt_mode not found
		// decl for ccaes_arm_ecb_decrypt_mode not found
		// decl for ccaes_arm_ecb_encrypt_mode not found
		// decl for ccaes_arm_ofb_crypt_mode not found
		// decl for ccaes_arm_xts_decrypt_mode not found
		// decl for ccaes_arm_xts_encrypt_mode not found
		// decl for ccaes_cbc_decrypt_mode not found
		// decl for ccaes_cbc_encrypt_mode not found
		// decl for ccaes_ccm_decrypt_mode not found
		// decl for ccaes_ccm_encrypt_mode not found
		// decl for ccaes_cfb8_decrypt_mode not found
		// decl for ccaes_cfb8_encrypt_mode not found
		// decl for ccaes_cfb_decrypt_mode not found
		// decl for ccaes_cfb_encrypt_mode not found
		// decl for ccaes_ctr_crypt_mode not found
		// decl for ccaes_ecb_decrypt_mode not found
		// decl for ccaes_ecb_encrypt_mode not found
		// decl for ccaes_gcm_decrypt_mode not found
		// decl for ccaes_gcm_encrypt_mode not found
		// decl for ccaes_gladman_cbc_decrypt_mode not found
		// decl for ccaes_gladman_cbc_encrypt_mode not found
		// decl for ccaes_ltc_ecb_decrypt_mode not found
		// decl for ccaes_ltc_ecb_encrypt_mode not found
		// decl for ccaes_ofb_crypt_mode not found
		// decl for ccaes_siv_decrypt_mode not found
		// decl for ccaes_siv_encrypt_mode not found
		// decl for ccaes_xts_decrypt_mode not found
		// decl for ccaes_xts_encrypt_mode not found
		// decl for ccansikdf_x963 not found
		// decl for ccblowfish_cbc_decrypt_mode not found
		// decl for ccblowfish_cbc_encrypt_mode not found
		// decl for ccblowfish_cfb8_decrypt_mode not found
		// decl for ccblowfish_cfb8_encrypt_mode not found
		// decl for ccblowfish_cfb_decrypt_mode not found
		// decl for ccblowfish_cfb_encrypt_mode not found
		// decl for ccblowfish_ctr_crypt_mode not found
		// decl for ccblowfish_ecb_decrypt_mode not found
		// decl for ccblowfish_ecb_encrypt_mode not found
		// decl for ccblowfish_ofb_crypt_mode not found
		// decl for cccast_cbc_decrypt_mode not found
		// decl for cccast_cbc_encrypt_mode not found
		// decl for cccast_cfb8_decrypt_mode not found
		// decl for cccast_cfb8_encrypt_mode not found
		// decl for cccast_cfb_decrypt_mode not found
		// decl for cccast_cfb_encrypt_mode not found
		// decl for cccast_ctr_crypt_mode not found
		// decl for cccast_ecb_decrypt_mode not found
		// decl for cccast_ecb_encrypt_mode not found
		// decl for cccast_ofb_crypt_mode not found
		// decl for cccbc_one_shot not found
		// decl for ccchacha20 not found
		// decl for ccchacha20_final not found
		// decl for ccchacha20_init not found
		// decl for ccchacha20_reset not found
		// decl for ccchacha20_setcounter not found
		// decl for ccchacha20_setnonce not found
		// decl for ccchacha20_update not found
		// decl for ccchacha20poly1305_aad not found
		// decl for ccchacha20poly1305_decrypt not found
		// decl for ccchacha20poly1305_decrypt_oneshot not found
		// decl for ccchacha20poly1305_encrypt not found
		// decl for ccchacha20poly1305_encrypt_oneshot not found
		// decl for ccchacha20poly1305_finalize not found
		// decl for ccchacha20poly1305_incnonce not found
		// decl for ccchacha20poly1305_info not found
		// decl for ccchacha20poly1305_init not found
		// decl for ccchacha20poly1305_reset not found
		// decl for ccchacha20poly1305_setnonce not found
		// decl for ccchacha20poly1305_verify not found
		// decl for cccmac_final_generate not found
		// decl for cccmac_final_verify not found
		// decl for cccmac_init not found
		// decl for cccmac_one_shot_generate not found
		// decl for cccmac_one_shot_verify not found
		// decl for cccmac_update not found
		// decl for cccurve25519 not found
		// decl for ccder_decode_bitstring not found
		// decl for ccder_decode_constructed_tl not found
		// decl for ccder_decode_dhparam_n not found
		// decl for ccder_decode_dhparams not found
		// decl for ccder_decode_eckey not found
		// decl for ccder_decode_len not found
		// decl for ccder_decode_oid not found
		// decl for ccder_decode_rsa_priv not found
		// decl for ccder_decode_rsa_priv_n not found
		// decl for ccder_decode_rsa_pub not found
		// decl for ccder_decode_rsa_pub_n not found
		// decl for ccder_decode_rsa_pub_x509 not found
		// decl for ccder_decode_rsa_pub_x509_n not found
		// decl for ccder_decode_seqii not found
		// decl for ccder_decode_sequence_tl not found
		// decl for ccder_decode_tag not found
		// decl for ccder_decode_tl not found
		// decl for ccder_decode_uint not found
		// decl for ccder_decode_uint64 not found
		// decl for ccder_decode_uint_n not found
		// decl for ccder_encode_body not found
		// decl for ccder_encode_body_nocopy not found
		// decl for ccder_encode_constructed_tl not found
		// decl for ccder_encode_dhparams not found
		// decl for ccder_encode_dhparams_size not found
		// decl for ccder_encode_eckey not found
		// decl for ccder_encode_eckey_size not found
		// decl for ccder_encode_implicit_integer not found
		// decl for ccder_encode_implicit_octet_string not found
		// decl for ccder_encode_implicit_raw_octet_string not found
		// decl for ccder_encode_implicit_uint64 not found
		// decl for ccder_encode_integer not found
		// decl for ccder_encode_len not found
		// decl for ccder_encode_octet_string not found
		// decl for ccder_encode_oid not found
		// decl for ccder_encode_raw_octet_string not found
		// decl for ccder_encode_rsa_priv not found
		// decl for ccder_encode_rsa_priv_size not found
		// decl for ccder_encode_rsa_pub not found
		// decl for ccder_encode_rsa_pub_size not found
		// decl for ccder_encode_tag not found
		// decl for ccder_encode_tl not found
		// decl for ccder_encode_uint64 not found
		// decl for ccder_sizeof not found
		// decl for ccder_sizeof_implicit_integer not found
		// decl for ccder_sizeof_implicit_octet_string not found
		// decl for ccder_sizeof_implicit_raw_octet_string not found
		// decl for ccder_sizeof_implicit_uint64 not found
		// decl for ccder_sizeof_integer not found
		// decl for ccder_sizeof_len not found
		// decl for ccder_sizeof_octet_string not found
		// decl for ccder_sizeof_oid not found
		// decl for ccder_sizeof_raw_octet_string not found
		// decl for ccder_sizeof_tag not found
		// decl for ccder_sizeof_uint64 not found
		// decl for ccdes3_cbc_decrypt_mode not found
		// decl for ccdes3_cbc_encrypt_mode not found
		// decl for ccdes3_cfb8_decrypt_mode not found
		// decl for ccdes3_cfb8_encrypt_mode not found
		// decl for ccdes3_cfb_decrypt_mode not found
		// decl for ccdes3_cfb_encrypt_mode not found
		// decl for ccdes3_ctr_crypt_mode not found
		// decl for ccdes3_ecb_decrypt_mode not found
		// decl for ccdes3_ecb_encrypt_mode not found
		// decl for ccdes3_ltc_ecb_decrypt_mode not found
		// decl for ccdes3_ltc_ecb_encrypt_mode not found
		// decl for ccdes3_ofb_crypt_mode not found
		// decl for ccdes_cbc_cksum not found
		// decl for ccdes_cbc_decrypt_mode not found
		// decl for ccdes_cbc_encrypt_mode not found
		// decl for ccdes_cfb8_decrypt_mode not found
		// decl for ccdes_cfb8_encrypt_mode not found
		// decl for ccdes_cfb_decrypt_mode not found
		// decl for ccdes_cfb_encrypt_mode not found
		// decl for ccdes_ctr_crypt_mode not found
		// decl for ccdes_ecb_decrypt_mode not found
		// decl for ccdes_ecb_encrypt_mode not found
		// decl for ccdes_key_is_weak not found
		// decl for ccdes_key_set_odd_parity not found
		// decl for ccdes_ofb_crypt_mode not found
		// decl for ccdh_ccn_lookup_gp not found
		// decl for ccdh_compute_key not found
		// decl for ccdh_compute_shared_secret not found
		// decl for ccdh_copy_gp not found
		// decl for ccdh_export_pub not found
		// decl for ccdh_generate_key not found
		// decl for ccdh_gp_apple768 not found
		// decl for ccdh_gp_rfc2409group02 not found
		// decl for ccdh_gp_rfc3526group05 not found
		// decl for ccdh_gp_rfc3526group14 not found
		// decl for ccdh_gp_rfc3526group15 not found
		// decl for ccdh_gp_rfc3526group16 not found
		// decl for ccdh_gp_rfc3526group17 not found
		// decl for ccdh_gp_rfc3526group18 not found
		// decl for ccdh_gp_rfc5114_MODP_1024_160 not found
		// decl for ccdh_gp_rfc5114_MODP_2048_224 not found
		// decl for ccdh_gp_rfc5114_MODP_2048_256 not found
		// decl for ccdh_import_full not found
		// decl for ccdh_import_priv not found
		// decl for ccdh_import_pub not found
		// decl for ccdh_init_gp not found
		// decl for ccdh_init_gp_from_bytes not found
		// decl for ccdh_init_gp_with_order not found
		// decl for ccdh_lookup_gp not found
		// decl for ccdh_ramp_gp_exponent not found
		// decl for ccdigest not found
		// decl for ccdigest_init not found
		// decl for ccdigest_oid_lookup not found
		// decl for ccdigest_update not found
		// decl for ccdrbg_factory_nistctr not found
		// decl for ccdrbg_factory_nisthmac not found
		// decl for ccec_compact_export not found
		// decl for ccec_compact_generate_key not found
		// decl for ccec_compact_import_priv not found
		// decl for ccec_compact_import_priv_size not found
		// decl for ccec_compact_import_pub not found
		// decl for ccec_compact_import_pub_size not found
		// decl for ccec_compact_transform_key not found
		// decl for ccec_compute_key not found
		// decl for ccec_cp_192 not found
		// decl for ccec_cp_224 not found
		// decl for ccec_cp_256 not found
		// decl for ccec_cp_384 not found
		// decl for ccec_cp_521 not found
		// decl for ccec_curve_for_length_lookup not found
		// decl for ccec_der_export_diversified_pub not found
		// decl for ccec_der_export_diversified_pub_size not found
		// decl for ccec_der_export_priv not found
		// decl for ccec_der_export_priv_size not found
		// decl for ccec_der_import_diversified_pub not found
		// decl for ccec_der_import_priv not found
		// decl for ccec_der_import_priv_keytype not found
		// decl for ccec_diversify_min_entropy_len not found
		// decl for ccec_diversify_pub not found
		// decl for ccec_export_pub not found
		// decl for ccec_generate_key not found
		// decl for ccec_generate_key_deterministic not found
		// decl for ccec_generate_key_fips not found
		// decl for ccec_generate_key_internal_fips not found
		// decl for ccec_generate_key_legacy not found
		// decl for ccec_get_cp not found
		// decl for ccec_get_fullkey_components not found
		// decl for ccec_get_pubkey_components not found
		// decl for ccec_import_pub not found
		// decl for ccec_keysize_is_supported not found
		// decl for ccec_make_priv not found
		// decl for ccec_make_pub not found
		// decl for ccec_pairwise_consistency_check not found
		// decl for ccec_print_full_key not found
		// decl for ccec_print_public_key not found
		// decl for ccec_raw_import_priv_only not found
		// decl for ccec_raw_import_pub not found
		// decl for ccec_rfc6637_dh_curve_p256 not found
		// decl for ccec_rfc6637_dh_curve_p521 not found
		// decl for ccec_rfc6637_unwrap_key not found
		// decl for ccec_rfc6637_unwrap_sha256_kek_aes128 not found
		// decl for ccec_rfc6637_unwrap_sha512_kek_aes256 not found
		// decl for ccec_rfc6637_wrap_key not found
		// decl for ccec_rfc6637_wrap_key_diversified not found
		// decl for ccec_rfc6637_wrap_key_size not found
		// decl for ccec_rfc6637_wrap_sha256_kek_aes128 not found
		// decl for ccec_rfc6637_wrap_sha512_kek_aes256 not found
		// decl for ccec_sign not found
		// decl for ccec_sign_composite not found
		// decl for ccec_signature_r_s_size not found
		// decl for ccec_validate_pub not found
		// decl for ccec_verify not found
		// decl for ccec_verify_composite not found
		// decl for ccec_x963_export not found
		// decl for ccec_x963_import_priv not found
		// decl for ccec_x963_import_priv_size not found
		// decl for ccec_x963_import_pub not found
		// decl for ccec_x963_import_pub_size not found
		// decl for ccecdh_compute_shared_secret not found
		// decl for ccecdh_generate_key not found
		// decl for ccecies_decrypt_gcm not found
		// decl for ccecies_decrypt_gcm_composite not found
		// decl for ccecies_decrypt_gcm_from_shared_secret not found
		// decl for ccecies_decrypt_gcm_plaintext_size not found
		// decl for ccecies_decrypt_gcm_plaintext_size_cp not found
		// decl for ccecies_decrypt_gcm_setup not found
		// decl for ccecies_encrypt_gcm not found
		// decl for ccecies_encrypt_gcm_ciphertext_size not found
		// decl for ccecies_encrypt_gcm_composite not found
		// decl for ccecies_encrypt_gcm_from_shared_secret not found
		// decl for ccecies_encrypt_gcm_setup not found
		// decl for ccecies_import_eph_pub not found
		// decl for ccecies_pub_key_size not found
		// decl for ccecies_pub_key_size_cp not found
		// decl for cced25519_make_key_pair not found
		// decl for cced25519_make_pub not found
		// decl for cced25519_sign not found
		// decl for cced25519_verify not found
		// decl for ccgcm_inc_iv not found
		// decl for ccgcm_init_with_iv not found
		// decl for ccgcm_one_shot not found
		// decl for ccgcm_one_shot_legacy not found
		// decl for ccgcm_set_iv_legacy not found
		// decl for cchkdf not found
		// decl for cchkdf_expand not found
		// decl for cchkdf_extract not found
		// decl for cchmac not found
		// decl for cchmac_final not found
		// decl for cchmac_init not found
		// decl for cchmac_update not found
		// decl for ccmd2_ltc_di not found
		// decl for ccmd4_ltc_di not found
		// decl for ccmd5_di not found
		// decl for ccmd5_ltc_di not found
		// decl for ccmgf not found
		// decl for ccmode_factory_cbc_decrypt not found
		// decl for ccmode_factory_cbc_encrypt not found
		// decl for ccmode_factory_ccm_decrypt not found
		// decl for ccmode_factory_ccm_encrypt not found
		// decl for ccmode_factory_cfb8_decrypt not found
		// decl for ccmode_factory_cfb8_encrypt not found
		// decl for ccmode_factory_cfb_decrypt not found
		// decl for ccmode_factory_cfb_encrypt not found
		// decl for ccmode_factory_ctr_crypt not found
		// decl for ccmode_factory_gcm_decrypt not found
		// decl for ccmode_factory_gcm_encrypt not found
		// decl for ccmode_factory_ofb_crypt not found
		// decl for ccmode_factory_omac_decrypt not found
		// decl for ccmode_factory_omac_encrypt not found
		// decl for ccmode_factory_siv_decrypt not found
		// decl for ccmode_factory_siv_encrypt not found
		// decl for ccmode_factory_xts_decrypt not found
		// decl for ccmode_factory_xts_encrypt not found
		// decl for ccn_add not found
		// decl for ccn_add1 not found
		// decl for ccn_addmul1 not found
		// decl for ccn_bitlen not found
		// decl for ccn_cmp not found
		// decl for ccn_div_equal_size_ws not found
		// decl for ccn_div_euclid not found
		// decl for ccn_div_euclid_ws not found
		// decl for ccn_lprint not found
		// decl for ccn_mul not found
		// decl for ccn_mul1 not found
		// decl for ccn_n not found
		// decl for ccn_print not found
		// decl for ccn_random_bits not found
		// decl for ccn_read_uint not found
		// decl for ccn_set not found
		// decl for ccn_shift_right not found
		// decl for ccn_sub not found
		// decl for ccn_sub1 not found
		// decl for ccn_write_int not found
		// decl for ccn_write_int_size not found
		// decl for ccn_write_uint not found
		// decl for ccn_write_uint_padded_ct not found
		// decl for ccn_write_uint_size not found
		// decl for ccn_zero_multi not found
		// decl for ccnistkdf_ctr_cmac not found
		// decl for ccnistkdf_ctr_cmac_fixed not found
		// decl for ccnistkdf_ctr_hmac not found
		// decl for ccnistkdf_ctr_hmac_fixed not found
		// decl for ccnistkdf_fb_hmac not found
		// decl for ccnistkdf_fb_hmac_fixed not found
		// decl for ccpad_cts1_decrypt not found
		// decl for ccpad_cts1_encrypt not found
		// decl for ccpad_cts2_decrypt not found
		// decl for ccpad_cts2_encrypt not found
		// decl for ccpad_cts3_decrypt not found
		// decl for ccpad_cts3_encrypt not found
		// decl for ccpad_pkcs7_decode not found
		// decl for ccpad_pkcs7_decrypt not found
		// decl for ccpad_pkcs7_ecb_decrypt not found
		// decl for ccpad_pkcs7_ecb_encrypt not found
		// decl for ccpad_pkcs7_encrypt not found
		// decl for ccpad_xts_decrypt not found
		// decl for ccpad_xts_encrypt not found
		// decl for ccpbkdf2_hmac not found
		// decl for ccpoly1305 not found
		// decl for ccpoly1305_final not found
		// decl for ccpoly1305_init not found
		// decl for ccpoly1305_update not found
		// decl for ccprime_rabin_miller not found
		// decl for ccrc2_cbc_decrypt_mode not found
		// decl for ccrc2_cbc_encrypt_mode not found
		// decl for ccrc2_cfb8_decrypt_mode not found
		// decl for ccrc2_cfb8_encrypt_mode not found
		// decl for ccrc2_cfb_decrypt_mode not found
		// decl for ccrc2_cfb_encrypt_mode not found
		// decl for ccrc2_ctr_crypt_mode not found
		// decl for ccrc2_ecb_decrypt_mode not found
		// decl for ccrc2_ecb_encrypt_mode not found
		// decl for ccrc2_ofb_crypt_mode not found
		// decl for ccrc4 not found
		// decl for ccrc4_eay not found
		// decl for ccrmd128_ltc_di not found
		// decl for ccrmd160_ltc_di not found
		// decl for ccrmd256_ltc_di not found
		// decl for ccrmd320_ltc_di not found
		// decl for ccrng not found
		// decl for ccrng_drbg_done not found
		// decl for ccrng_drbg_init not found
		// decl for ccrng_drbg_reseed not found
		// decl for ccrng_ecfips_test_init not found
		// decl for ccrng_pbkdf2_prng_init not found
		// decl for ccrng_rsafips_test_init not found
		// decl for ccrng_rsafips_test_set_next not found
		// decl for ccrng_sequence_init not found
		// decl for ccrng_system_done not found
		// decl for ccrng_system_init not found
		// decl for ccrng_test_done not found
		// decl for ccrng_test_init not found
		// decl for ccrsa_crt_makekey not found
		// decl for ccrsa_decrypt_eme_pkcs1v15 not found
		// decl for ccrsa_decrypt_eme_pkcs1v15_blinded not found
		// decl for ccrsa_decrypt_oaep not found
		// decl for ccrsa_decrypt_oaep_blinded not found
		// decl for ccrsa_dump_full_key not found
		// decl for ccrsa_dump_public_key not found
		// decl for ccrsa_eme_pkcs1v15_decode not found
		// decl for ccrsa_eme_pkcs1v15_encode not found
		// decl for ccrsa_emsa_pkcs1v15_encode not found
		// decl for ccrsa_emsa_pkcs1v15_verify not found
		// decl for ccrsa_emsa_pss_decode not found
		// decl for ccrsa_emsa_pss_encode not found
		// decl for ccrsa_encrypt_eme_pkcs1v15 not found
		// decl for ccrsa_encrypt_oaep not found
		// decl for ccrsa_export_pub not found
		// decl for ccrsa_generate_fips186_key not found
		// decl for ccrsa_generate_fips186_key_trace not found
		// decl for ccrsa_generate_key not found
		// decl for ccrsa_get_fullkey_components not found
		// decl for ccrsa_get_pubkey_components not found
		// decl for ccrsa_import_pub not found
		// decl for ccrsa_init_pub not found
		// decl for ccrsa_make_fips186_key not found
		// decl for ccrsa_make_fips186_key_trace not found
		// decl for ccrsa_make_pub not found
		// decl for ccrsa_oaep_decode_parameter not found
		// decl for ccrsa_oaep_encode_parameter not found
		// decl for ccrsa_priv_crypt not found
		// decl for ccrsa_priv_crypt_blinded not found
		// decl for ccrsa_pub_crypt not found
		// decl for ccrsa_sign_pkcs1v15 not found
		// decl for ccrsa_sign_pkcs1v15_blinded not found
		// decl for ccrsa_sign_pss not found
		// decl for ccrsa_sign_pss_blinded not found
		// decl for ccrsa_verify_pkcs1v15 not found
		// decl for ccrsa_verify_pkcs1v15_allowshortsigs not found
		// decl for ccrsa_verify_pss not found
		// decl for ccsha1_di not found
		// decl for ccsha1_eay_di not found
		// decl for ccsha1_ltc_di not found
		// decl for ccsha1_vng_arm_di not found
		// decl for ccsha224_di not found
		// decl for ccsha224_ltc_di not found
		// decl for ccsha224_vng_arm_di not found
		// decl for ccsha256_di not found
		// decl for ccsha256_ltc_di not found
		// decl for ccsha256_vng_arm_di not found
		// decl for ccsha384_di not found
		// decl for ccsha384_ltc_di not found
		// decl for ccsha384_vng_arm_di not found
		// decl for ccsha512_di not found
		// decl for ccsha512_ltc_di not found
		// decl for ccsha512_vng_arm_di not found
		// decl for ccsrp_client_process_challenge not found
		// decl for ccsrp_client_start_authentication not found
		// decl for ccsrp_client_verify_session not found
		// decl for ccsrp_generate_salt_and_verification not found
		// decl for ccsrp_generate_verifier not found
		// decl for ccsrp_gp_rfc5054_1024 not found
		// decl for ccsrp_gp_rfc5054_2048 not found
		// decl for ccsrp_gp_rfc5054_3072 not found
		// decl for ccsrp_gp_rfc5054_4096 not found
		// decl for ccsrp_gp_rfc5054_8192 not found
		// decl for ccsrp_server_compute_session not found
		// decl for ccsrp_server_generate_public_key not found
		// decl for ccsrp_server_start_authentication not found
		// decl for ccsrp_server_verify_session not found
		// decl for ccsrp_test_calculations not found
		// decl for ccwrap_auth_decrypt not found
		// decl for ccwrap_auth_decrypt_withiv not found
		// decl for ccwrap_auth_encrypt not found
		// decl for ccwrap_auth_encrypt_withiv not found
		// decl for ccwrap_unwrapped_size not found
		// decl for ccwrap_wrapped_size not found
		// decl for ccxts_one_shot not found
		// decl for ccz_add not found
		// decl for ccz_addi not found
		// decl for ccz_bit not found
		// decl for ccz_bitlen not found
		// decl for ccz_cmp not found
		// decl for ccz_cmpi not found
		// decl for ccz_divmod not found
		// decl for ccz_expmod not found
		// decl for ccz_free not found
		// decl for ccz_gcd not found
		// decl for ccz_init not found
		// decl for ccz_invmod not found
		// decl for ccz_is_negative not found
		// decl for ccz_is_one not found
		// decl for ccz_is_prime not found
		// decl for ccz_is_zero not found
		// decl for ccz_lcm not found
		// decl for ccz_lprint not found
		// decl for ccz_lsl not found
		// decl for ccz_lsr not found
		// decl for ccz_mod not found
		// decl for ccz_mul not found
		// decl for ccz_muli not found
		// decl for ccz_mulmod not found
		// decl for ccz_neg not found
		// decl for ccz_print not found
		// decl for ccz_random_bits not found
		// decl for ccz_read_radix not found
		// decl for ccz_read_uint not found
		// decl for ccz_set not found
		// decl for ccz_set_bit not found
		// decl for ccz_seti not found
		// decl for ccz_size not found
		// decl for ccz_sqr not found
		// decl for ccz_sqrmod not found
		// decl for ccz_sub not found
		// decl for ccz_subi not found
		// decl for ccz_trailing_zeros not found
		// decl for ccz_write_int not found
		// decl for ccz_write_int_size not found
		// decl for ccz_write_radix not found
		// decl for ccz_write_radix_size not found
		// decl for ccz_write_uint not found
		// decl for ccz_write_uint_size not found
		// decl for ccz_zero not found
		// decl for cczp_init not found
		// decl for cczp_inv not found
		// decl for cczp_inv_field not found
		// decl for cczp_inv_odd not found
		// decl for cczp_mod not found
		// decl for cczp_modn not found
		// decl for cczp_mul not found
		// decl for cczp_power not found
		// decl for cczp_power_fast not found
		// decl for cczp_power_ssma not found
		// decl for fipspost_post not found
		// decl for fipspost_trace_vtable not found
		// decl for voucher_get_activity_id_and_creator not found
		// decl for ld$hide$os10.0$_dispatch_assert_queue not found
		// decl for ld$hide$os10.0$_dispatch_assert_queue_not not found
		// decl for ld$hide$os10.0$_dispatch_queue_create_with_target not found
		// decl for _dispatch_begin_NSAutoReleasePool not found
		// decl for _dispatch_bug not found
		// decl for _dispatch_data_destructor_free not found
		// decl for _dispatch_data_destructor_munmap not found
		// decl for _dispatch_data_destructor_none not found
		// decl for _dispatch_data_destructor_vm_deallocate not found
		// decl for _dispatch_data_empty not found
		// decl for _dispatch_data_format_type_base32 not found
		// decl for _dispatch_data_format_type_base32hex not found
		// decl for _dispatch_data_format_type_base64 not found
		// decl for _dispatch_data_format_type_none not found
		// decl for _dispatch_data_format_type_utf16be not found
		// decl for _dispatch_data_format_type_utf16le not found
		// decl for _dispatch_data_format_type_utf8 not found
		// decl for _dispatch_data_format_type_utf_any not found
		// decl for _dispatch_end_NSAutoReleasePool not found
		// decl for _dispatch_get_main_queue_handle_4CF not found
		// decl for _dispatch_get_main_queue_port_4CF not found
		// decl for _dispatch_iocntl not found
		// decl for _dispatch_is_fork_of_multithreaded_parent not found
		// decl for _dispatch_is_multithreaded not found
		// decl for _dispatch_log not found
		// decl for _dispatch_mach_hooks_install_default not found
		// decl for _dispatch_main_q not found
		// decl for _dispatch_main_queue_callback_4CF not found
		// decl for _dispatch_poll_for_events_4launchd not found
		// decl for _dispatch_prohibit_transition_to_multithreaded not found
		// decl for _dispatch_pthread_root_queue_create_with_observer_hooks_4IOHID not found
		// decl for _dispatch_queue_attr_concurrent not found
		// decl for _dispatch_queue_is_exclusively_owned_by_current_thread_4IOHID not found
		// decl for _dispatch_runloop_root_queue_create_4CF not found
		// decl for _dispatch_runloop_root_queue_get_port_4CF not found
		// decl for _dispatch_runloop_root_queue_perform_4CF not found
		// decl for _dispatch_runloop_root_queue_wakeup_4CF not found
		// decl for _dispatch_source_set_runloop_timer_4CF not found
		// decl for _dispatch_source_type_data_add not found
		// decl for _dispatch_source_type_data_or not found
		// decl for _dispatch_source_type_data_replace not found
		// decl for _dispatch_source_type_interval not found
		// decl for _dispatch_source_type_mach_recv not found
		// decl for _dispatch_source_type_mach_send not found
		// decl for _dispatch_source_type_memorypressure not found
		// decl for _dispatch_source_type_memorystatus not found
		// decl for _dispatch_source_type_nw_channel not found
		// decl for _dispatch_source_type_proc not found
		// decl for _dispatch_source_type_read not found
		// decl for _dispatch_source_type_signal not found
		// decl for _dispatch_source_type_sock not found
		// decl for _dispatch_source_type_timer not found
		// decl for _dispatch_source_type_vfs not found
		// decl for _dispatch_source_type_vm not found
		// decl for _dispatch_source_type_vnode not found
		// decl for _dispatch_source_type_write not found
		// decl for _dispatch_source_will_reenable_kevent_4NW not found
		// decl for _dispatch_workloop_should_yield_4NW not found
		// decl for _firehose_spi_version not found
		// decl for _os_object_alloc not found
		// decl for _os_object_alloc_realized not found
		// decl for _os_object_dealloc not found
		// decl for _os_object_release not found
		// decl for _os_object_release_internal not found
		// decl for _os_object_release_internal_n not found
		// decl for _os_object_retain not found
		// decl for _os_object_retain_internal not found
		// decl for _os_object_retain_internal_n not found
		// decl for _os_object_retain_with_resurrect not found
		"default_zone_size" = "Q^?^?";
		"dispatch_activate" = "v^?";
		"dispatch_after" = "vQ^{dispatch_queue_s=}^?";
		"dispatch_after_f" = "vQ^{dispatch_queue_s=}^v^?";
		// decl for dispatch_allocator_layout not found
		"dispatch_apply" = "vQ^{dispatch_queue_s=}^?";
		"dispatch_apply_f" = "vQ^{dispatch_queue_s=}^v^?";
		"dispatch_assert_queue" = "v^{dispatch_queue_s=}";
		// decl for dispatch_assert_queue$V2 not found
		"dispatch_assert_queue_barrier" = "v^{dispatch_queue_s=}";
		"dispatch_assert_queue_not" = "v^{dispatch_queue_s=}";
		// decl for dispatch_assert_queue_not$V2 not found
		"dispatch_async" = "<v^{dispatch_queue_s=}^?>dispatch_block_1";
		// decl for dispatch_async_and_wait not found
		// decl for dispatch_async_and_wait_f not found
		// decl for dispatch_async_enforce_qos_class_f not found
		"dispatch_async_f" = "<v^{dispatch_queue_s=}^v^?>dispatch_async_f";
		// decl for dispatch_atfork_child not found
		// decl for dispatch_atfork_parent not found
		// decl for dispatch_atfork_prepare not found
		"dispatch_barrier_async" = "v^{dispatch_queue_s=}^?";
		// decl for dispatch_barrier_async_and_wait not found
		// decl for dispatch_barrier_async_and_wait_f not found
		"dispatch_barrier_async_f" = "v^{dispatch_queue_s=}^v^?";
		"dispatch_barrier_sync" = "v^{dispatch_queue_s=}^?";
		"dispatch_barrier_sync_f" = "v^{dispatch_queue_s=}^v^?";
		// decl for dispatch_benchmark not found
		// decl for dispatch_benchmark_f not found
		"dispatch_block_cancel" = "v^?";
		"dispatch_block_create" = "^?Q^?";
		"dispatch_block_create_with_qos_class" = "^?QIi^?";
		// decl for dispatch_block_create_with_voucher not found
		// decl for dispatch_block_create_with_voucher_and_qos_class not found
		"dispatch_block_notify" = "v^?^{dispatch_queue_s=}^?";
		"dispatch_block_perform" = "vQ^?";
		"dispatch_block_testcancel" = "q^?";
		"dispatch_block_wait" = "q^?Q";
		"dispatch_data_apply" = "B^{dispatch_data_s=}^?";
		// decl for dispatch_data_apply_f not found
		"dispatch_data_copy_region" = "^{dispatch_data_s=}^{dispatch_data_s=}Q^Q";
		"dispatch_data_create" = "^{dispatch_data_s=}^vQ^{dispatch_queue_s=}^?";
		// decl for dispatch_data_create_alloc not found
		"dispatch_data_create_concat" = "^{dispatch_data_s=}^{dispatch_data_s=}^{dispatch_data_s=}";
		// decl for dispatch_data_create_f not found
		"dispatch_data_create_map" = "^{dispatch_data_s=}^{dispatch_data_s=}^?^Q";
		"dispatch_data_create_subrange" = "^{dispatch_data_s=}^{dispatch_data_s=}QQ";
		// decl for dispatch_data_create_with_transform not found
		"dispatch_data_get_size" = "Q^{dispatch_data_s=}";
		// decl for dispatch_data_make_memory_entry not found
		// "dispatch_debug" = "$dispatch_debug"; // v^?*...;
		// "dispatch_debugv" = "$dispatch_debugv"; // v^?*...;
		"dispatch_get_context" = "^v^?";
		"dispatch_get_current_queue" = "^{dispatch_queue_s=}";
		"dispatch_get_global_queue" = "^{dispatch_queue_s=}qQ";
		"dispatch_get_specific" = "^v^v";
		"dispatch_group_async" = "v^{dispatch_group_s=}^{dispatch_queue_s=}^?";
		"dispatch_group_async_f" = "v^{dispatch_group_s=}^{dispatch_queue_s=}^v^?";
		"dispatch_group_create" = "^{dispatch_group_s=}";
		"dispatch_group_enter" = "v^{dispatch_group_s=}";
		"dispatch_group_leave" = "v^{dispatch_group_s=}";
		"dispatch_group_notify" = "v^{dispatch_group_s=}^{dispatch_queue_s=}^?";
		"dispatch_group_notify_f" = "v^{dispatch_group_s=}^{dispatch_queue_s=}^v^?";
		"dispatch_group_wait" = "q^{dispatch_group_s=}Q";
		"dispatch_io_barrier" = "v^{dispatch_io_s=}^?";
		// decl for dispatch_io_barrier_f not found
		"dispatch_io_close" = "v^{dispatch_io_s=}Q";
		"dispatch_io_create" = "^{dispatch_io_s=}Qi^{dispatch_queue_s=}^?";
		// decl for dispatch_io_create_f not found
		"dispatch_io_create_with_io" = "^{dispatch_io_s=}Q^{dispatch_io_s=}^{dispatch_queue_s=}^?";
		// decl for dispatch_io_create_with_io_f not found
		"dispatch_io_create_with_path" = "^{dispatch_io_s=}Q*iS^{dispatch_queue_s=}^?";
		// decl for dispatch_io_create_with_path_f not found
		"dispatch_io_get_descriptor" = "i^{dispatch_io_s=}";
		"dispatch_io_read" = "v^{dispatch_io_s=}qQ^{dispatch_queue_s=}^?";
		// decl for dispatch_io_read_f not found
		"dispatch_io_set_high_water" = "v^{dispatch_io_s=}Q";
		"dispatch_io_set_interval" = "v^{dispatch_io_s=}QQ";
		"dispatch_io_set_low_water" = "v^{dispatch_io_s=}Q";
		"dispatch_io_write" = "v^{dispatch_io_s=}q^{dispatch_data_s=}^{dispatch_queue_s=}^?";
		// decl for dispatch_io_write_f not found
		// decl for dispatch_mach_cancel not found
		// decl for dispatch_mach_connect not found
		// decl for dispatch_mach_create not found
		// decl for dispatch_mach_create_4libxpc not found
		// decl for dispatch_mach_create_f not found
		// decl for dispatch_mach_get_checkin_port not found
		// decl for dispatch_mach_hooks_install_4libxpc not found
		// decl for dispatch_mach_mig_demux not found
		// decl for dispatch_mach_mig_demux_get_context not found
		// decl for dispatch_mach_msg_create not found
		// decl for dispatch_mach_msg_get_context not found
		// decl for dispatch_mach_msg_get_msg not found
		// decl for dispatch_mach_receive_barrier not found
		// decl for dispatch_mach_receive_barrier_f not found
		// decl for dispatch_mach_reconnect not found
		// decl for dispatch_mach_send not found
		// decl for dispatch_mach_send_and_wait_for_reply not found
		// decl for dispatch_mach_send_barrier not found
		// decl for dispatch_mach_send_barrier_f not found
		// decl for dispatch_mach_send_with_result not found
		// decl for dispatch_mach_send_with_result_and_async_reply_4libxpc not found
		// decl for dispatch_mach_send_with_result_and_wait_for_reply not found
		"dispatch_main" = "v";
		// decl for dispatch_mig_server not found
		"dispatch_once" = "<v^q^?>dispatch_block_1";
		"dispatch_once_f" = "<v^q^v^?>dispatch_once_f";
		// decl for dispatch_pthread_root_queue_copy_current not found
		// decl for dispatch_pthread_root_queue_create not found
		"dispatch_queue_attr_make_initially_inactive" = "^{dispatch_queue_attr_s=}^{dispatch_queue_attr_s=}";
		"dispatch_queue_attr_make_with_autorelease_frequency" = "^{dispatch_queue_attr_s=}^{dispatch_queue_attr_s=}Q";
		// decl for dispatch_queue_attr_make_with_overcommit not found
		"dispatch_queue_attr_make_with_qos_class" = "^{dispatch_queue_attr_s=}^{dispatch_queue_attr_s=}Ii";
		"dispatch_queue_create" = "^{dispatch_queue_s=}*^{dispatch_queue_attr_s=}";
		// decl for dispatch_queue_create_with_accounting_override_voucher not found
		"dispatch_queue_create_with_target" = "^{dispatch_queue_s=}*^{dispatch_queue_attr_s=}^{dispatch_queue_s=}";
		// decl for dispatch_queue_create_with_target$V2 not found
		"dispatch_queue_get_label" = "*^{dispatch_queue_s=}";
		"dispatch_queue_get_qos_class" = "I^{dispatch_queue_s=}^i";
		"dispatch_queue_get_specific" = "^v^{dispatch_queue_s=}^v";
		// decl for dispatch_queue_offsets not found
		// decl for dispatch_queue_set_label_nocopy not found
		"dispatch_queue_set_specific" = "v^{dispatch_queue_s=}^v^v^?";
		// decl for dispatch_queue_set_width not found
		"dispatch_read" = "viQ^{dispatch_queue_s=}^?";
		// decl for dispatch_read_f not found
		"dispatch_release" = "v^?";
		"dispatch_resume" = "v^?";
		"dispatch_retain" = "v^?";
		"dispatch_semaphore_create" = "^{dispatch_semaphore_s=}q";
		"dispatch_semaphore_signal" = "q^{dispatch_semaphore_s=}";
		"dispatch_semaphore_wait" = "q^{dispatch_semaphore_s=}Q";
		"dispatch_set_context" = "v^?^v";
		"dispatch_set_finalizer_f" = "v^?^?";
		// decl for dispatch_set_qos_class not found
		// decl for dispatch_set_qos_class_fallback not found
		// decl for dispatch_set_qos_class_floor not found
		"dispatch_set_target_queue" = "v^?^{dispatch_queue_s=}";
		"dispatch_source_cancel" = "v^{dispatch_source_s=}";
		// decl for dispatch_source_cancel_and_wait not found
		"dispatch_source_create" = "^{dispatch_source_s=}^{dispatch_source_type_s=}QQ^{dispatch_queue_s=}";
		"dispatch_source_get_data" = "Q^{dispatch_source_s=}";
		// decl for dispatch_source_get_extended_data not found
		"dispatch_source_get_handle" = "Q^{dispatch_source_s=}";
		"dispatch_source_get_mask" = "Q^{dispatch_source_s=}";
		"dispatch_source_merge_data" = "v^{dispatch_source_s=}Q";
		"dispatch_source_set_cancel_handler" = "v^{dispatch_source_s=}^?";
		"dispatch_source_set_cancel_handler_f" = "v^{dispatch_source_s=}^?";
		"dispatch_source_set_event_handler" = "v^{dispatch_source_s=}^?";
		"dispatch_source_set_event_handler_f" = "v^{dispatch_source_s=}^?";
		// decl for dispatch_source_set_mandatory_cancel_handler not found
		// decl for dispatch_source_set_mandatory_cancel_handler_f not found
		"dispatch_source_set_registration_handler" = "v^{dispatch_source_s=}^?";
		"dispatch_source_set_registration_handler_f" = "v^{dispatch_source_s=}^?";
		"dispatch_source_set_timer" = "v^{dispatch_source_s=}QQQ";
		"dispatch_source_testcancel" = "q^{dispatch_source_s=}";
		"dispatch_suspend" = "v^?";
		"dispatch_sync" = "<v^{dispatch_queue_s=}^?>dispatch_block_1";
		"dispatch_sync_f" = "<v^{dispatch_queue_s=}^v^?>dispatch_async_f";
		"dispatch_time" = "QQq";
		// decl for dispatch_tsd_indexes not found
		"dispatch_walltime" = "Q^{timespec=}q";
		// decl for dispatch_workloop_copy_current not found
		// decl for dispatch_workloop_create not found
		// decl for dispatch_workloop_create_inactive not found
		// decl for dispatch_workloop_is_current not found
		// decl for dispatch_workloop_set_autorelease_frequency not found
		// decl for dispatch_workloop_set_cpupercent not found
		// decl for dispatch_workloop_set_qos_class not found
		// decl for dispatch_workloop_set_qos_class_floor not found
		// decl for dispatch_workloop_set_scheduler_priority not found
		"dispatch_write" = "vi^{dispatch_data_s=}^{dispatch_queue_s=}^?";
		// decl for dispatch_write_f not found
		// decl for libdispatch_init not found
		"os_release" = "v^v";
		"os_retain" = "^v^v";
		// decl for voucher_activity_create_with_data not found
		// decl for voucher_activity_create_with_location not found
		// decl for voucher_activity_flush not found
		// decl for voucher_activity_get_logging_preferences not found
		// decl for voucher_activity_get_metadata_buffer not found
		// decl for voucher_activity_id_allocate not found
		// decl for voucher_activity_initialize_4libtrace not found
		// decl for voucher_activity_trace not found
		// decl for voucher_activity_trace_v not found
		// decl for voucher_activity_trace_v_2 not found
		// decl for voucher_adopt not found
		// decl for voucher_copy not found
		// decl for voucher_copy_without_importance not found
		// decl for voucher_create_with_mach_msg not found
		// decl for voucher_decrement_importance_count4CF not found
		// decl for voucher_get_activity_id not found
		// decl for voucher_get_current_persona not found
		// decl for voucher_get_current_persona_originator_info not found
		// decl for voucher_get_current_persona_proximate_info not found
		// decl for voucher_kvoucher_debug not found
		// decl for voucher_replace_default_voucher not found
		// decl for _ZN5dyld318entryVectorForDyldE not found
		// decl for _dyld_find_unwind_sections not found
		"NSVersionOfLinkTimeLibrary" = "i*";
		"NSVersionOfRunTimeLibrary" = "i*";
		// decl for NXArgc not found
		// decl for NXArgv not found
		"_NSGetExecutablePath" = "i*^I";
		// decl for __progname not found
		// decl for _dyld_fork_child not found
		"_dyld_get_image_header" = "^{mach_header=}I";
		"_dyld_get_image_name" = "*I";
		// decl for _dyld_get_image_slide not found
		// decl for _dyld_get_image_uuid not found
		"_dyld_get_image_vmaddr_slide" = "qI";
		// decl for _dyld_get_shared_cache_range not found
		// decl for _dyld_get_shared_cache_uuid not found
		"_dyld_image_count" = "I";
		// decl for _dyld_images_for_addresses not found
		// decl for _dyld_initializer not found
		// decl for _dyld_is_memory_immutable not found
		// decl for _dyld_objc_notify_register not found
		// decl for _dyld_process_info_create not found
		// decl for _dyld_process_info_for_each_image not found
		// decl for _dyld_process_info_for_each_segment not found
		// decl for _dyld_process_info_get_cache not found
		// decl for _dyld_process_info_get_state not found
		// decl for _dyld_process_info_notify not found
		// decl for _dyld_process_info_notify_main not found
		// decl for _dyld_process_info_notify_release not found
		// decl for _dyld_process_info_notify_retain not found
		// decl for _dyld_process_info_release not found
		// decl for _dyld_process_info_retain not found
		// decl for _dyld_register_for_image_loads not found
		"_dyld_register_func_for_add_image" = "v^?";
		"_dyld_register_func_for_remove_image" = "v^?";
		"_tlv_atexit" = "v^?^v";
		"_tlv_bootstrap" = "v";
		// decl for _tlv_exit not found
		"dladdr" = "i^v^{dl_info=}";
		"dlclose" = "i^v";
		"dlerror" = "*";
		"dlopen" = "^v*i";
		"dlopen_preflight" = "B*";
		"dlsym" = "^v^v*";
		// decl for dyldVersionNumber not found
		// decl for dyldVersionString not found
		// decl for dyld_dynamic_interpose not found
		// decl for dyld_enumerate_tlv_storage not found
		// decl for dyld_get_active_platform not found
		// decl for dyld_get_base_platform not found
		// decl for dyld_get_image_versions not found
		// decl for dyld_get_min_os_version not found
		// decl for dyld_get_program_min_os_version not found
		// decl for dyld_get_program_sdk_version not found
		// decl for dyld_get_sdk_version not found
		// decl for dyld_image_header_containing_address not found
		// decl for dyld_image_path_containing_address not found
		// decl for dyld_is_simulator_platform not found
		// decl for dyld_minos_at_least not found
		// decl for dyld_process_is_restricted not found
		// decl for dyld_program_minos_at_least not found
		// decl for dyld_program_sdk_at_least not found
		// decl for dyld_register_tlv_state_change_handler not found
		// decl for dyld_sdk_at_least not found
		// decl for dyld_shared_cache_file_path not found
		// decl for dyld_shared_cache_find_iterate_text not found
		// decl for dyld_shared_cache_iterate_text not found
		// decl for dyld_shared_cache_some_image_overridden not found
		// decl for environ not found
		// decl for yld_stub_binder not found
		// decl for _spawn_via_launchd not found
		// decl for _vproc_get_last_exit_status not found
		// decl for _vproc_grab_subset not found
		// decl for _vproc_kickstart_by_label not found
		// decl for _vproc_log not found
		// decl for _vproc_log_error not found
		// decl for _vproc_logv not found
		// decl for _vproc_pid_is_managed not found
		// decl for _vproc_post_fork_ping not found
		// decl for _vproc_send_signal_by_label not found
		// decl for _vproc_set_global_on_demand not found
		// decl for _vproc_standby_begin not found
		// decl for _vproc_standby_count not found
		// decl for _vproc_standby_end not found
		// decl for _vproc_standby_timeout not found
		// decl for _vproc_transaction_begin not found
		// decl for _vproc_transaction_count not found
		// decl for _vproc_transaction_count_for_pid not found
		// decl for _vproc_transaction_end not found
		// decl for _vproc_transaction_set_clean_callback not found
		// decl for _vproc_transaction_try_exit not found
		// decl for _vproc_transactions_enable not found
		// decl for _vprocmgr_detach_from_console not found
		// decl for _vprocmgr_getsocket not found
		// decl for _vprocmgr_init not found
		// decl for _vprocmgr_log_drain not found
		// decl for _vprocmgr_log_forward not found
		// decl for _vprocmgr_move_subset_to_user not found
		// decl for _vprocmgr_switch_to_session not found
		// decl for bootstrap_check_in not found
		// decl for bootstrap_check_in2 not found
		// decl for bootstrap_check_in3 not found
		// decl for bootstrap_create_server not found
		// decl for bootstrap_create_service not found
		// decl for bootstrap_get_root not found
		// decl for bootstrap_info not found
		// decl for bootstrap_init not found
		// decl for bootstrap_look_up not found
		// decl for bootstrap_look_up2 not found
		// decl for bootstrap_look_up3 not found
		// decl for bootstrap_look_up_per_user not found
		// decl for bootstrap_lookup_children not found
		// decl for bootstrap_parent not found
		// decl for bootstrap_register not found
		// decl for bootstrap_register2 not found
		// decl for bootstrap_status not found
		// decl for bootstrap_strerror not found
		// decl for bootstrap_subset not found
		// decl for bootstrap_unprivileged not found
		// decl for create_and_switch_to_per_session_launchd not found
		// decl for launch_data_alloc not found
		// decl for launch_data_array_get_count not found
		// decl for launch_data_array_get_index not found
		// decl for launch_data_array_set_index not found
		// decl for launch_data_copy not found
		// decl for launch_data_dict_get_count not found
		// decl for launch_data_dict_insert not found
		// decl for launch_data_dict_iterate not found
		// decl for launch_data_dict_lookup not found
		// decl for launch_data_dict_remove not found
		// decl for launch_data_free not found
		// decl for launch_data_get_bool not found
		// decl for launch_data_get_errno not found
		// decl for launch_data_get_fd not found
		// decl for launch_data_get_integer not found
		// decl for launch_data_get_machport not found
		// decl for launch_data_get_opaque not found
		// decl for launch_data_get_opaque_size not found
		// decl for launch_data_get_real not found
		// decl for launch_data_get_string not found
		// decl for launch_data_get_type not found
		// decl for launch_data_new_bool not found
		// decl for launch_data_new_errno not found
		// decl for launch_data_new_fd not found
		// decl for launch_data_new_integer not found
		// decl for launch_data_new_machport not found
		// decl for launch_data_new_opaque not found
		// decl for launch_data_new_real not found
		// decl for launch_data_new_string not found
		// decl for launch_data_pack not found
		// decl for launch_data_set_bool not found
		// decl for launch_data_set_errno not found
		// decl for launch_data_set_fd not found
		// decl for launch_data_set_integer not found
		// decl for launch_data_set_machport not found
		// decl for launch_data_set_opaque not found
		// decl for launch_data_set_real not found
		// decl for launch_data_set_string not found
		// decl for launch_data_unpack not found
		// decl for launch_get_fd not found
		// decl for launch_msg not found
		// decl for launch_socket_service_check_in not found
		// decl for launch_wait not found
		// decl for launchd_close not found
		// decl for launchd_fdopen not found
		// decl for launchd_getfd not found
		// decl for launchd_msg_recv not found
		// decl for launchd_msg_send not found
		// decl for load_launchd_jobs_at_loginwindow_prompt not found
		// decl for mpm_uncork_fork not found
		// decl for mpm_wait not found
		// decl for reboot2 not found
		// decl for vproc_release not found
		// decl for vproc_retain not found
		// decl for vproc_standby_begin not found
		// decl for vproc_standby_end not found
		// decl for vproc_swap_complex not found
		// decl for vproc_swap_integer not found
		// decl for vproc_swap_string not found
		// decl for vproc_transaction_begin not found
		// decl for vproc_transaction_end not found
		// decl for vprocmgr_lookup_vproc not found
		"NXCombineCpuSubtypes" = "iiii";
		"NXFindBestFatArch" = "^{fat_arch=}ii^{fat_arch=}I";
		"NXFindBestFatArch_64" = "^{fat_arch_64=}ii^{fat_arch_64=}I";
		"NXFreeArchInfo" = "v^{?=}";
		"NXGetAllArchInfos" = "^{?=}";
		"NXGetArchInfoFromCpuType" = "^{?=}ii";
		"NXGetArchInfoFromName" = "^{?=}*";
		"NXGetLocalArchInfo" = "^{?=}";
		"get_edata" = "Q";
		"get_end" = "Q";
		"get_etext" = "Q";
		"getsectbyname" = "^{section_64=}**";
		"getsectbynamefromheader" = "^{section=}^{mach_header=}**";
		"getsectbynamefromheader_64" = "^{section_64=}^{mach_header_64=}**";
		"getsectbynamefromheaderwithswap" = "^{section=}^{mach_header=}**i";
		"getsectbynamefromheaderwithswap_64" = "^{section=}^{mach_header_64=}**i";
		"getsectdata" = "***^Q";
		"getsectdatafromFramework" = "****^Q";
		"getsectdatafromheader" = "*^{mach_header=}**^I";
		"getsectdatafromheader_64" = "*^{mach_header_64=}**^Q";
		"getsectiondata" = "^C^{mach_header_64=}**^Q";
		"getsegbyname" = "^{segment_command_64=}*";
		"getsegmentdata" = "^C^{mach_header_64=}*^Q";
		"slot_name" = "vii^?^?";
		"swap_build_tool_version" = "v^{build_tool_version=}Ii";
		"swap_build_version_command" = "v^{build_version_command=}i";
		"swap_dyld_info_command" = "v^{dyld_info_command=}i";
		"swap_dylib_command" = "v^{dylib_command=}i";
		"swap_dylib_module" = "v^{dylib_module=}Ii";
		"swap_dylib_module_64" = "v^{dylib_module_64=}Ii";
		"swap_dylib_reference" = "v^{dylib_reference=}Ii";
		"swap_dylib_table_of_contents" = "v^{dylib_table_of_contents=}Ii";
		"swap_dylinker_command" = "v^{dylinker_command=}i";
		"swap_dysymtab_command" = "v^{dysymtab_command=}i";
		"swap_encryption_command" = "v^{encryption_info_command=}i";
		"swap_encryption_command_64" = "v^{encryption_info_command_64=}i";
		"swap_entry_point_command" = "v^{entry_point_command=}i";
		"swap_fat_arch" = "v^{fat_arch=}Ii";
		"swap_fat_arch_64" = "v^{fat_arch_64=}Ii";
		"swap_fat_header" = "v^{fat_header=}i";
		"swap_fvmfile_command" = "v^{fvmfile_command=}i";
		"swap_fvmlib_command" = "v^{fvmlib_command=}i";
		// decl for swap_hppa_fp_thread_state not found
		// decl for swap_hppa_frame_thread_state not found
		// decl for swap_hppa_integer_thread_state not found
		// decl for swap_i386_exception_state not found
		// decl for swap_i386_float_state not found
		// decl for swap_i386_thread_state not found
		// decl for swap_i860_thread_state_regs not found
		"swap_ident_command" = "v^{ident_command=}i";
		"swap_indirect_symbols" = "v^IIi";
		"swap_linkedit_data_command" = "v^{linkedit_data_command=}i";
		"swap_linker_option_command" = "v^{linker_option_command=}i";
		"swap_load_command" = "v^{load_command=}i";
		// decl for swap_m68k_thread_state_68882 not found
		// decl for swap_m68k_thread_state_regs not found
		// decl for swap_m68k_thread_state_user_reg not found
		// decl for swap_m88110_thread_state_impl_t not found
		// decl for swap_m88k_thread_state_grf_t not found
		// decl for swap_m88k_thread_state_user_t not found
		// decl for swap_m88k_thread_state_xrf_t not found
		"swap_mach_header" = "v^{mach_header=}i";
		"swap_mach_header_64" = "v^{mach_header_64=}i";
		"swap_nlist" = "v^{nlist=}Ii";
		"swap_nlist_64" = "v^{nlist_64=}Ii";
		"swap_note_command" = "v^{note_command=}i";
		// decl for swap_ppc_exception_state_t not found
		// decl for swap_ppc_float_state_t not found
		// decl for swap_ppc_thread_state_t not found
		"swap_prebind_cksum_command" = "v^{prebind_cksum_command=}i";
		"swap_prebound_dylib_command" = "v^{prebound_dylib_command=}i";
		"swap_ranlib" = "v^{ranlib=}Ii";
		"swap_ranlib_64" = "v^{ranlib_64=}Qi";
		"swap_relocation_info" = "v^{relocation_info=}Ii";
		"swap_routines_command" = "v^{routines_command=}i";
		"swap_routines_command_64" = "v^{routines_command_64=}i";
		"swap_rpath_command" = "v^{rpath_command=}i";
		"swap_section" = "v^{section=}Ii";
		"swap_section_64" = "v^{section_64=}Ii";
		"swap_segment_command" = "v^{segment_command=}i";
		"swap_segment_command_64" = "v^{segment_command_64=}i";
		"swap_source_version_command" = "v^{source_version_command=}i";
		// decl for swap_sparc_thread_state_fpu not found
		// decl for swap_sparc_thread_state_regs not found
		"swap_sub_client_command" = "v^{sub_client_command=}i";
		"swap_sub_framework_command" = "v^{sub_framework_command=}i";
		"swap_sub_library_command" = "v^{sub_library_command=}i";
		"swap_sub_umbrella_command" = "v^{sub_umbrella_command=}i";
		"swap_symseg_command" = "v^{symseg_command=}i";
		"swap_symtab_command" = "v^{symtab_command=}i";
		"swap_thread_command" = "v^{thread_command=}i";
		"swap_twolevel_hint" = "v^{twolevel_hint=}Ii";
		"swap_twolevel_hints_command" = "v^{twolevel_hints_command=}i";
		"swap_uuid_command" = "v^{uuid_command=}i";
		"swap_version_min_command" = "v^{version_min_command=}i";
		// decl for swap_x86_debug_state not found
		// decl for swap_x86_debug_state32 not found
		// decl for swap_x86_debug_state64 not found
		// decl for swap_x86_exception_state not found
		// decl for swap_x86_exception_state64 not found
		// decl for swap_x86_float_state not found
		// decl for swap_x86_float_state64 not found
		// decl for swap_x86_state_hdr not found
		// decl for swap_x86_thread_state not found
		// decl for swap_x86_thread_state64 not found
		// decl for __removefile_init_random not found
		// decl for __removefile_random_char not found
		// decl for __removefile_randomize_buffer not found
		// decl for __removefile_rename_unlink not found
		// decl for __removefile_sunlink not found
		// decl for __removefile_tree_walker not found
		"removefile" = "i*^{_removefile_state=}I";
		"removefile_cancel" = "i^{_removefile_state=}";
		"removefile_state_alloc" = "^{_removefile_state=}";
		"removefile_state_free" = "i^{_removefile_state=}";
		"removefile_state_get" = "i^{_removefile_state=}I^v";
		"removefile_state_set" = "i^{_removefile_state=}I^v";
		// decl for ASL_LEVEL_TO_STRING not found
		"_asl_evaluate_send" = "I^{__asl_object_s=}^{__asl_object_s=}i";
		// decl for _asl_fork_child not found
		//"_asl_lib_log" = "$_asl_lib_log"; // i^{__asl_object_s=}I^{__asl_object_s=}*...;
		// decl for _asl_log_args_to_xpc not found
		// decl for _asl_msg_dump not found
		// decl for _asl_server_cancel_direct_watch not found
		// decl for _asl_server_control_query not found
		// decl for _asl_server_create_aux_link not found
		// decl for _asl_server_match not found
		// decl for _asl_server_message not found
		// decl for _asl_server_prune not found
		// decl for _asl_server_query not found
		// decl for _asl_server_query_2 not found
		// decl for _asl_server_query_timeout not found
		// decl for _asl_server_register_direct_watch not found
		"asl_add_log_file" = "i^{__asl_object_s=}i";
		// decl for asl_add_output not found
		"asl_add_output_file" = "i^{__asl_object_s=}i**ii";
		"asl_append" = "v^{__asl_object_s=}^{__asl_object_s=}";
		// decl for asl_base_msg not found
		// decl for asl_client_add_output_file not found
		// decl for asl_client_get_control not found
		// decl for asl_client_kvdict not found
		// decl for asl_client_match not found
		// decl for asl_client_open not found
		// decl for asl_client_open_from_file not found
		// decl for asl_client_release not found
		// decl for asl_client_remove_output_file not found
		// decl for asl_client_retain not found
		// decl for asl_client_search not found
		// decl for asl_client_send not found
		// decl for asl_client_set_control not found
		// decl for asl_client_set_filter not found
		// decl for asl_client_set_output_file_filter not found
		"asl_close" = "v^{__asl_object_s=}";
		"asl_close_auxiliary_file" = "ii";
		// decl for asl_core_check_access not found
		// decl for asl_core_decode_buffer not found
		// decl for asl_core_encode_buffer not found
		// decl for asl_core_error not found
		// decl for asl_core_get_service_port not found
		// decl for asl_core_htonq not found
		// decl for asl_core_level_to_string not found
		// decl for asl_core_new_msg_id not found
		// decl for asl_core_ntohq not found
		// decl for asl_core_parse_time not found
		// decl for asl_core_str_match not found
		// decl for asl_core_str_match_c_time not found
		// decl for asl_core_str_match_char not found
		// decl for asl_core_str_to_size not found
		// decl for asl_core_str_to_time not found
		// decl for asl_core_str_to_uint32 not found
		// decl for asl_core_string_hash not found
		// decl for asl_core_time_to_str not found
		"asl_count" = "Q^{__asl_object_s=}";
		"asl_create_auxiliary_file" = "i^{__asl_object_s=}**^i";
		"asl_fetch_key_val_op" = "i^{__asl_object_s=}I^?^?^I";
		// decl for asl_file_close not found
		// decl for asl_file_compact not found
		// decl for asl_file_ctime not found
		// decl for asl_file_fetch not found
		// decl for asl_file_fetch_next not found
		// decl for asl_file_fetch_previous not found
		// decl for asl_file_filter not found
		// decl for asl_file_filter_level not found
		// decl for asl_file_list_add not found
		// decl for asl_file_list_close not found
		// decl for asl_file_list_match not found
		// decl for asl_file_list_match_end not found
		// decl for asl_file_list_match_next not found
		// decl for asl_file_list_match_start not found
		// decl for asl_file_match not found
		// decl for asl_file_open_read not found
		// decl for asl_file_open_write not found
		// decl for asl_file_read_set_position not found
		// decl for asl_file_release not found
		// decl for asl_file_retain not found
		// decl for asl_file_save not found
		// decl for asl_file_size not found
		// decl for asl_filesystem_path not found
		"asl_format" = "*^{__asl_object_s=}**I";
		// decl for asl_format_message not found
		"asl_free" = "v^{__asl_object_s=}";
		"asl_get" = "*^{__asl_object_s=}*";
		// decl for asl_get_filter not found
		"asl_get_index" = "^{__asl_object_s=}^{__asl_object_s=}Q";
		// decl for asl_get_local_control not found
		"asl_get_type" = "I^{__asl_object_s=}";
		// decl for asl_get_value_for_key not found
		"asl_key" = "*^{__asl_object_s=}I";
		// decl for asl_legacy1_close not found
		// decl for asl_legacy1_fetch not found
		// decl for asl_legacy1_match not found
		// decl for asl_legacy1_open not found
		// decl for asl_list_from_string not found
		"asl_log" = "$asl_log"; // i^{__asl_object_s=}^{__asl_object_s=}i*...;
		"asl_log_auxiliary_location" = "i^{__asl_object_s=}***";
		"asl_log_descriptor" = "i^{__asl_object_s=}^{__asl_object_s=}iiI";
		"asl_log_message" = "$asl_log_message"; // ii*...;
		"asl_match" = "^{__asl_object_s=}^{__asl_object_s=}^{__asl_object_s=}^QQQIi";
		// decl for asl_msg_cmp not found
		// decl for asl_msg_cmp_list not found
		// decl for asl_msg_copy not found
		// decl for asl_msg_count not found
		// decl for asl_msg_fetch not found
		// decl for asl_msg_from_string not found
		// decl for asl_msg_get_val_for_key not found
		// decl for asl_msg_key not found
		// decl for asl_msg_list_append not found
		// decl for asl_msg_list_count not found
		// decl for asl_msg_list_from_string not found
		// decl for asl_msg_list_get_index not found
		// decl for asl_msg_list_insert not found
		// decl for asl_msg_list_match not found
		// decl for asl_msg_list_new not found
		// decl for asl_msg_list_new_count not found
		// decl for asl_msg_list_next not found
		// decl for asl_msg_list_prepend not found
		// decl for asl_msg_list_prev not found
		// decl for asl_msg_list_release not found
		// decl for asl_msg_list_remove_index not found
		// decl for asl_msg_list_reset_iteration not found
		// decl for asl_msg_list_retain not found
		// decl for asl_msg_list_search not found
		// decl for asl_msg_list_to_asl_string not found
		// decl for asl_msg_list_to_string not found
		// decl for asl_msg_lookup not found
		// decl for asl_msg_merge not found
		// decl for asl_msg_new not found
		// decl for asl_msg_release not found
		// decl for asl_msg_retain not found
		// decl for asl_msg_set_key_val not found
		// decl for asl_msg_set_key_val_op not found
		// decl for asl_msg_to_string not found
		// decl for asl_msg_type not found
		// decl for asl_msg_unset not found
		// decl for asl_msg_unset_index not found
		"asl_new" = "^{__asl_object_s=}I";
		"asl_next" = "^{__asl_object_s=}^{__asl_object_s=}";
		// decl for asl_object_append not found
		// decl for asl_object_count not found
		// decl for asl_object_get_key_val_op_at_index not found
		// decl for asl_object_get_object_at_index not found
		// decl for asl_object_get_val_op_for_key not found
		// decl for asl_object_match not found
		// decl for asl_object_next not found
		// decl for asl_object_prepend not found
		// decl for asl_object_prev not found
		// decl for asl_object_remove_object_at_index not found
		// decl for asl_object_search not found
		// decl for asl_object_set_iteration_index not found
		// decl for asl_object_set_key_val_op not found
		// decl for asl_object_unset_key not found
		"asl_open" = "^{__asl_object_s=}**I";
		"asl_open_from_file" = "^{__asl_object_s=}i**";
		"asl_open_path" = "^{__asl_object_s=}*I";
		// decl for asl_parse_time not found
		"asl_prepend" = "v^{__asl_object_s=}^{__asl_object_s=}";
		"asl_prev" = "^{__asl_object_s=}^{__asl_object_s=}";
		"asl_release" = "v^{__asl_object_s=}";
		// decl for asl_remote_notify_name not found
		"asl_remove_log_file" = "i^{__asl_object_s=}i";
		// decl for asl_remove_output not found
		// decl for asl_remove_output_file not found
		"asl_reset_iteration" = "v^{__asl_object_s=}Q";
		"asl_retain" = "^{__asl_object_s=}^{__asl_object_s=}";
		"asl_search" = "^{__asl_object_s=}^{__asl_object_s=}^{__asl_object_s=}";
		"asl_send" = "i^{__asl_object_s=}^{__asl_object_s=}";
		"asl_set" = "i^{__asl_object_s=}**";
		"asl_set_filter" = "i^{__asl_object_s=}i";
		// decl for asl_set_key_val_op not found
		// decl for asl_set_local_control not found
		"asl_set_output_file_filter" = "i^{__asl_object_s=}ii";
		"asl_set_query" = "i^{__asl_object_s=}**I";
		// decl for asl_store_close not found
		// decl for asl_store_location not found
		// decl for asl_store_match not found
		// decl for asl_store_match_next not found
		// decl for asl_store_match_start not found
		// decl for asl_store_match_timeout not found
		// decl for asl_store_max_file_size not found
		// decl for asl_store_open_aux not found
		// decl for asl_store_open_read not found
		// decl for asl_store_open_write not found
		// decl for asl_store_release not found
		// decl for asl_store_retain not found
		// decl for asl_store_save not found
		// decl for asl_store_set_flags not found
		// decl for asl_store_statistics not found
		// decl for asl_store_sweep_file_cache not found
		// decl for asl_string_allocated_size not found
		// decl for asl_string_append not found
		// decl for asl_string_append_asl_key not found
		// decl for asl_string_append_asl_msg not found
		// decl for asl_string_append_char_no_encoding not found
		// decl for asl_string_append_no_encoding not found
		// decl for asl_string_append_no_encoding_len not found
		// decl for asl_string_append_op not found
		// decl for asl_string_append_xml_tag not found
		// decl for asl_string_bytes not found
		// decl for asl_string_length not found
		// decl for asl_string_new not found
		// decl for asl_string_release not found
		// decl for asl_string_release_return_bytes not found
		// decl for asl_string_retain not found
		// decl for asl_syslog_faciliy_name_to_num not found
		// decl for asl_syslog_faciliy_num_to_name not found
		// decl for asl_trigger_aslmanager not found
		"asl_unset" = "i^{__asl_object_s=}*";
		// decl for asl_unset_key not found
		"asl_vlog" = "$asl_vlog"; // i^{__asl_object_s=}^{__asl_object_s=}i*...;
		"aslresponse_free" = "v^{__asl_object_s=}";
		"aslresponse_next" = "^{__asl_object_s=}^{__asl_object_s=}";
		"closelog" = "v";
		"openlog" = "v*ii";
		"setlogmask" = "ii";
		"syslog" = "$syslog"; // vi*...;
		"vsyslog" = "$vsyslog"; // vi*...;
		"Block_size" = "Q^v";
		"_Block_copy" = "^v^v";
		"_Block_extended_layout" = "*^v";
		"_Block_has_signature" = "B^v";
		"_Block_isDeallocating" = "B^v";
		"_Block_layout" = "*^v";
		"_Block_object_assign" = "v^v^vi";
		"_Block_object_dispose" = "v^vi";
		"_Block_release" = "v^v";
		"_Block_signature" = "*^v";
		"_Block_tryRetain" = "B^v";
		"_Block_use_RR2" = "v^v";
		"_Block_use_stret" = "B^v";
		// decl for _NSConcreteAutoBlock not found
		// decl for _NSConcreteFinalizingBlock not found
		// decl for _NSConcreteGlobalBlock not found
		// decl for _NSConcreteMallocBlock not found
		// decl for _NSConcreteStackBlock not found
		// decl for _NSConcreteWeakBlockVariable not found
		// decl for off32 not found
		// decl for off64 not found
		// decl for skip not found
		// decl for ld$weak$os10.11$_basename_r not found
		// decl for ld$weak$os10.11$_clock_getres not found
		// decl for ld$weak$os10.11$_clock_gettime not found
		// decl for ld$weak$os10.11$_clock_settime not found
		// decl for ld$weak$os10.11$_dirname_r not found
		// decl for ld$weak$os10.11$_getentropy not found
		// decl for ld$weak$os10.11$_mkostemp not found
		// decl for ld$weak$os10.11$_mkostemps not found
		// decl for ld$weak$os10.11$_timingsafe_bcmp not found
		// decl for ld$weak$os10.12$_utimensat not found
		// decl for OSMemoryNotificationCurrentLevel not found
		// decl for OSThermalNotificationCurrentLevel not found
		// decl for _CurrentRuneLocale not found
		// decl for _DefaultRuneLocale not found
		"_Exit" = "vi";
		// decl for _NSGetArgc not found
		// decl for _NSGetArgv not found
		// decl for _NSGetEnviron not found
		// decl for _NSGetMachExecuteHeader not found
		// decl for _NSGetProgname not found
		// decl for _OSThermalNotificationLevelForBehavior not found
		// decl for _OSThermalNotificationSetLevelForBehavior not found
		// decl for _PathLocale not found
		// decl for _Read_RuneMagi not found
		// decl for __Balloc_D2A not found
		// decl for __Bfree_D2A not found
		// decl for __ULtod_D2A not found
		"___mb_cur_max" = "i";
		"___mb_cur_max_l" = "i^{_xlocale=}";
		// decl for ___runetype not found
		// decl for ___runetype_l not found
		"___tolower" = "ii";
		"___tolower_l" = "ii^{_xlocale=}";
		"___toupper" = "ii";
		"___toupper_l" = "ii^{_xlocale=}";
		// decl for __add_ovflpage not found
		// decl for __addel not found
		// decl for __any_on_D2A not found
		// decl for __assert_rtn not found
		// decl for __b2d_D2A not found
		// decl for __big_delete not found
		// decl for __big_insert not found
		// decl for __big_keydata not found
		// decl for __big_return not found
		// decl for __big_split not found
		// decl for __bigtens_D2A not found
		// decl for __bt_close not found
		// decl for __bt_cmp not found
		// decl for __bt_defcmp not found
		// decl for __bt_defpfx not found
		// decl for __bt_delete not found
		// decl for __bt_dleaf not found
		// decl for __bt_fd not found
		// decl for __bt_free not found
		// decl for __bt_get not found
		// decl for __bt_new not found
		// decl for __bt_open not found
		// decl for __bt_pgin not found
		// decl for __bt_pgout not found
		// decl for __bt_put not found
		// decl for __bt_ret not found
		// decl for __bt_search not found
		// decl for __bt_seq not found
		// decl for __bt_setcur not found
		// decl for __bt_split not found
		// decl for __bt_sync not found
		// decl for __buf_free not found
		// decl for __call_hash not found
		// decl for __cleanup not found
		// decl for __cmp_D2A not found
		// decl for __collate_equiv_match not found
		// decl for __collate_load_error not found
		// decl for __collate_lookup not found
		// decl for __copybits_D2A not found
		// decl for __cxa_atexit not found
		// decl for __cxa_finalize not found
		// decl for __cxa_finalize_ranges not found
		// decl for __d2b_D2A not found
		// decl for __dbpanic not found
		// decl for __decrement_D2A not found
		// decl for __default_hash not found
		// decl for __default_utx not found
		// decl for __delpair not found
		// decl for __diff_D2A not found
		// decl for __dtoa not found
		// decl for __expand_table not found
		// decl for __fflush not found
		// decl for __fgetwc not found
		// decl for __find_bigpair not found
		// decl for __find_last_page not found
		// decl for __fix_locale_grouping_str not found
		// decl for __fread not found
		// decl for __free_ovflpage not found
		// decl for __freedtoa not found
		// decl for __gdtoa not found
		// decl for __gdtoa_locks not found
		// decl for __get_buf not found
		// decl for __get_page not found
		// decl for __gethex_D2A not found
		// decl for __hash_open not found
		// decl for __hdtoa not found
		// decl for __hexdig_D2A not found
		// decl for __hexdig_init_D2A not found
		// decl for __hexnan_D2A not found
		// decl for __hi0bits_D2A not found
		// decl for __hldtoa not found
		// decl for __i2b_D2A not found
		// decl for __ibitmap not found
		// decl for __increment_D2A not found
		// decl for __isctype not found
		// decl for __istype not found
		// decl for __istype_l not found
		// decl for __ldtoa not found
		// decl for __libc_init not found
		// decl for __lo0bits_D2A not found
		// decl for __log2 not found
		// decl for __lshift_D2A not found
		// decl for __maskrune not found
		// decl for __maskrune_l not found
		// decl for __match_D2A not found
		// decl for __mb_cur_max not found
		// decl for __mb_sb_limit not found
		"__memccpy_chk" = "^v^v^viQ";
		"__memcpy_chk" = "^v^v^vQ";
		"__memmove_chk" = "^v^v^vQ";
		"__memset_chk" = "^v^viQ";
		// decl for __mult_D2A not found
		// decl for __multadd_D2A not found
		// decl for __nrv_alloc_D2A not found
		"__opendir2" = "^{?=}*i";
		// decl for __ovfl_delete not found
		// decl for __ovfl_get not found
		// decl for __ovfl_put not found
		// decl for __pow5mult_D2A not found
		// decl for __put_page not found
		// decl for __quorem_D2A not found
		// decl for __ratio_D2A not found
		// decl for __rec_close not found
		// decl for __rec_delete not found
		// decl for __rec_dleaf not found
		// decl for __rec_fd not found
		// decl for __rec_fmap not found
		// decl for __rec_fpipe not found
		// decl for __rec_get not found
		// decl for __rec_iput not found
		// decl for __rec_open not found
		// decl for __rec_put not found
		// decl for __rec_ret not found
		// decl for __rec_search not found
		// decl for __rec_seq not found
		// decl for __rec_sync not found
		// decl for __rec_vmap not found
		// decl for __rec_vpipe not found
		// decl for __reclaim_buf not found
		// decl for __rshift_D2A not found
		// decl for __rv_alloc_D2A not found
		// decl for __s2b_D2A not found
		// decl for __sF not found
		// decl for __sclose not found
		// decl for __sdidinit not found
		// decl for __set_ones_D2A not found
		// decl for __sflags not found
		// decl for __sflush not found
		// decl for __sfp not found
		// decl for __sfvwrite not found
		// decl for __sglue not found
		// decl for __sinit not found
		// decl for __slbexpand not found
		// decl for __smakebuf not found
		"__snprintf_chk" = "$snprintf"; // i*QiQ*...;
		// decl for __split_page not found
		"__sprintf_chk" = "$sprintf"; // i*iQ*...;
		// decl for __sread not found
		// decl for __srefill not found
		"__srget" = "i^{__sFILE=}";
		// decl for __sseek not found
		"__stack_chk_fail" = "v";
		// decl for __stack_chk_guard not found
		// decl for __stderrp not found
		// decl for __stdinp not found
		// decl for __stdoutp not found
		"__stpcpy_chk" = "***";
		"__stpncpy_chk" = "***Q";
		"__strcat_chk" = "***";
		// decl for __strcp_D2A not found
		"__strcpy_chk" = "***";
		"__strlcat_chk" = "Q**Q";
		"__strlcpy_chk" = "Q**Q";
		"__strncat_chk" = "***Q";
		"__strncpy_chk" = "***Q";
		// decl for __strtodg not found
		// decl for __strtopdd not found
		// decl for __sum_D2A not found
		"__svfscanf" = "$__svfscanf"; // i^{__sFILE=}*...;
		"__swbuf" = "ii^{__sFILE=}";
		// decl for __swhatbuf not found
		// decl for __swrite not found
		// decl for __swsetup not found
		// decl for __tens_D2A not found
		// decl for __tinytens_D2A not found
		"__tolower" = "ii";
		"__tolower_l" = "ii^{_xlocale=}";
		"__toupper" = "ii";
		"__toupper_l" = "ii^{_xlocale=}";
		// decl for __trailz_D2A not found
		// decl for __ulp_D2A not found
		// decl for __ungetc not found
		// decl for __ungetwc not found
		"__vsnprintf_chk" = "$vsnprintf"; // i*QiQ*...;
		"__vsprintf_chk" = "$vsprintf"; // i*iQ*...;
		// decl for __wcwidth not found
		// decl for __wcwidth_l not found
		// decl for _allocenvstate not found
		// decl for _atexit_receipt not found
		// decl for _c_locale not found
		// decl for _cleanup not found
		// decl for _closeutx not found
		// decl for _copyenv not found
		// decl for _cthread_init_routine not found
		// decl for _deallocenvstate not found
		// decl for _endutxent not found
		// decl for _flockfile_debug_stub not found
		// decl for _fseeko not found
		// decl for _ftello not found
		// decl for _fwalk not found
		// decl for _getenvp not found
		// decl for _getutxent not found
		// decl for _getutxid not found
		// decl for _getutxline not found
		// decl for _inet_aton_check not found
		// decl for _init_clock_port not found
		// decl for _int_to_time not found
		// decl for _libc_fork_child not found
		// decl for _libc_initializer not found
		// decl for _long_to_time not found
		// decl for _mkpath_np not found
		// decl for _mktemp not found
		// decl for _openutx not found
		// decl for _os_assert_log not found
		// decl for _os_assert_log_ctx not found
		// decl for _os_assumes_log not found
		// decl for _os_assumes_log_ctx not found
		// decl for _os_avoid_tail_call not found
		// decl for _os_crash not found
		// decl for _os_crash_callback not found
		// decl for _os_crash_fmt not found
		// decl for _os_debug_log not found
		// decl for _os_debug_log_error_str not found
		// decl for _putenvp not found
		// decl for _pututxline not found
		// decl for _rand48_add not found
		// decl for _rand48_mult not found
		// decl for _rand48_seed not found
		// decl for _readdir_unlocked not found
		// decl for _reclaim_telldir not found
		// decl for _seekdir not found
		// decl for _setenvp not found
		// decl for _setutxent not found
		// decl for _sigaction_nobind not found
		// decl for _sigintr not found
		// decl for _signal_nobind not found
		// decl for _sigvec_nobind not found
		// decl for _sread not found
		// decl for _sseek not found
		// decl for _swrite not found
		// decl for _time32_to_time not found
		// decl for _time64_to_time not found
		// decl for _time_to_int not found
		// decl for _time_to_long not found
		// decl for _time_to_time32 not found
		// decl for _time_to_time64 not found
		// decl for _unsetenvp not found
		// decl for _utmpxname not found
		"a64l" = "q*";
		"abort" = "v";
		// decl for abort_report_np not found
		"abs" = "ii";
		// decl for acl_add_flag_np not found
		// decl for acl_add_perm not found
		// decl for acl_calc_mask not found
		// decl for acl_clear_flags_np not found
		// decl for acl_clear_perms not found
		// decl for acl_copy_entry not found
		// decl for acl_copy_ext not found
		// decl for acl_copy_ext_native not found
		// decl for acl_copy_int not found
		// decl for acl_copy_int_native not found
		// decl for acl_create_entry not found
		// decl for acl_create_entry_np not found
		// decl for acl_delete_def_file not found
		// decl for acl_delete_entry not found
		// decl for acl_delete_fd_np not found
		// decl for acl_delete_file_np not found
		// decl for acl_delete_flag_np not found
		// decl for acl_delete_link_np not found
		// decl for acl_delete_perm not found
		// decl for acl_dup not found
		// decl for acl_free not found
		// decl for acl_from_text not found
		// decl for acl_get_entry not found
		// decl for acl_get_fd not found
		// decl for acl_get_fd_np not found
		// decl for acl_get_file not found
		// decl for acl_get_flag_np not found
		// decl for acl_get_flagset_np not found
		// decl for acl_get_link_np not found
		// decl for acl_get_perm_np not found
		// decl for acl_get_permset not found
		// decl for acl_get_permset_mask_np not found
		// decl for acl_get_qualifier not found
		// decl for acl_get_tag_type not found
		// decl for acl_init not found
		// decl for acl_maximal_permset_mask_np not found
		// decl for acl_set_fd not found
		// decl for acl_set_fd_np not found
		// decl for acl_set_file not found
		// decl for acl_set_flagset_np not found
		// decl for acl_set_link_np not found
		// decl for acl_set_permset not found
		// decl for acl_set_permset_mask_np not found
		// decl for acl_set_qualifier not found
		// decl for acl_set_tag_type not found
		// decl for acl_size not found
		// decl for acl_to_text not found
		// decl for acl_valid not found
		// decl for acl_valid_fd_np not found
		// decl for acl_valid_file_np not found
		// decl for acl_valid_link not found
		"addr2ascii" = "*i^vi*";
		"alarm" = "II";
		"alphasort" = "i^?^?";
		"arc4random" = "I";
		"arc4random_addrandom" = "v^Ci";
		"arc4random_buf" = "v^vQ";
		"arc4random_stir" = "v";
		"arc4random_uniform" = "II";
		"ascii2addr" = "ii*^v";
		"asctime" = "*^{tm=}";
		"asctime_r" = "*^{tm=}*";
		"asprintf" = "$asprintf"; // i^?*...;
		"asprintf_l" = "$asprintf_l"; // i^?^{_xlocale=}*...;
		"asxprintf" = "$asxprintf"; // i^?^{_printf_domain=}^{_xlocale=}*...;
		"asxprintf_exec" = "$asxprintf_exec"; // i^?^{_printf_compiled=}...;
		"atexit" = "i^?";
		"atexit_b" = "i^?";
		"atof" = "d*";
		"atof_l" = "d*^{_xlocale=}";
		"atoi" = "i*";
		"atoi_l" = "i*^{_xlocale=}";
		"atol" = "q*";
		"atol_l" = "q*^{_xlocale=}";
		"atoll" = "q*";
		"atoll_l" = "q*^{_xlocale=}";
		"backtrace" = "i^?i";
		"backtrace_from_fp" = "i^v^?i";
		"backtrace_image_offsets" = "v^?^{image_offset=}i";
		"backtrace_symbols" = "^?^?i";
		"backtrace_symbols_fd" = "v^?ii";
		"basename" = "**";
		"basename_r" = "***";
		"bcmp" = "i^v^vQ";
		"bcopy" = "v^v^vQ";
		"brk" = "^v^v";
		"bsd_signal" = "^?i^?";
		"bsearch" = "^v^v^vQQ^?";
		"bsearch_b" = "<^v^v^vQQ^?>bsearch_b";
		"btowc" = "ii";
		"btowc_l" = "ii^{_xlocale=}";
		"bzero" = "v^vQ";
		"catclose" = "i^{__nl_cat_d=}";
		"catgets" = "*^{__nl_cat_d=}ii*";
		"catopen" = "^{__nl_cat_d=}*i";
		"cfgetispeed" = "Q^{termios=}";
		"cfgetospeed" = "Q^{termios=}";
		"cfmakeraw" = "v^{termios=}";
		"cfsetispeed" = "i^{termios=}Q";
		"cfsetospeed" = "i^{termios=}Q";
		"cfsetspeed" = "i^{termios=}Q";
		"cgetcap" = "***i";
		"cgetclose" = "i";
		"cgetent" = "i^?^?*";
		"cgetfirst" = "i^?^?";
		"cgetmatch" = "i**";
		"cgetnext" = "i^?^?";
		"cgetnum" = "i**^q";
		"cgetset" = "i*";
		"cgetstr" = "i**^?";
		"cgetustr" = "i**^?";
		"chmodx_np" = "i*^{_filesec=}";
		"clearerr" = "v^{__sFILE=}";
		// decl for clearerr_unlocked not found
		"clock" = "Q";
		"clock_getres" = "ii^{timespec=}";
		"clock_gettime" = "ii^{timespec=}";
		"clock_gettime_nsec_np" = "Qi";
		// decl for clock_port not found
		// decl for clock_sem not found
		"clock_settime" = "ii^{timespec=}";
		"closedir" = "i^{?=}";
		// decl for compat_mode not found
		"confstr" = "Qi*Q";
		"copy_printf_domain" = "^{_printf_domain=}^{_printf_domain=}";
		"creat" = "i*S";
		// decl for creat$NOCANCEL not found
		"crypt" = "***";
		"ctermid" = "**";
		"ctermid_r" = "**";
		"ctime" = "*^q";
		"ctime_r" = "*^q*";
		"daemon" = "iii";
		// decl for daylight not found
		"dbm_clearerr" = "i^{?=}";
		"dbm_close" = "v^{?=}";
		"dbm_delete" = "i^{?=}{?=}";
		"dbm_dirfno" = "i^{?=}";
		"dbm_error" = "i^{?=}";
		"dbm_fetch" = "{?=}^{?=}{?=}";
		"dbm_firstkey" = "{?=}^{?=}";
		"dbm_nextkey" = "{?=}^{?=}";
		"dbm_open" = "^{?=}*iS";
		"dbm_store" = "i^{?=}{?=}{?=}i";
		"dbopen" = "^{__db=}*iii^v";
		"devname" = "*iS";
		"devname_r" = "*iS*i";
		"difftime" = "dqq";
		"digittoint" = "ii";
		"digittoint_l" = "ii^{_xlocale=}";
		"dirfd" = "i^{?=}";
		"dirname" = "**";
		"dirname_r" = "***";
		"div" = "{?=}ii";
		"dprintf" = "$dprintf"; // ii*...;
		"dprintf_l" = "$dprintf_l"; // ii^{_xlocale=}*...;
		"drand48" = "d";
		"duplocale" = "^{_xlocale=}^{_xlocale=}";
		"dxprintf" = "$dxprintf"; // ii^{_printf_domain=}^{_xlocale=}*...;
		"dxprintf_exec" = "$dxprintf_exec"; // ii^{_printf_compiled=}...;
		"ecvt" = "*di^i^i";
		"encrypt" = "v*i";
		"endttyent" = "i";
		"endusershell" = "v";
		"endutxent" = "v";
		"endutxent_wtmp" = "v";
		"erand48" = "d^S";
		"err" = "$err"; // vi*...;
		"err_set_exit" = "v^?";
		"err_set_exit_b" = "v^?";
		"err_set_file" = "v^v";
		"errc" = "$errc"; // vii*...;
		"errx" = "$errx"; // vi*...;
		"execl" = "$execq"; // i**...;
		"execle" = "$execle"; // i**...;
		"execlp" = "$execlp"; // i**...;
		"execv" = "i*^?";
		"execvP" = "i**^?";
		"execvp" = "i*^?";
		"exit" = "vi";
		// decl for f_prealloc not found
		"fchmodx_np" = "ii^{_filesec=}";
		"fclose" = "i^{__sFILE=}";
		"fcvt" = "*di^i^i";
		"fdopen" = "^{__sFILE=}i*";
		// decl for fdopen$DARWIN_EXTSN not found
		"fdopendir" = "^{?=}i";
		"feof" = "i^{__sFILE=}";
		// decl for feof_unlocked not found
		"ferror" = "i^{__sFILE=}";
		// decl for ferror_unlocked not found
		"fflagstostr" = "*Q";
		"fflush" = "i^{__sFILE=}";
		"fgetc" = "i^{__sFILE=}";
		"fgetln" = "*^{__sFILE=}^Q";
		"fgetpos" = "i^{__sFILE=}^q";
		"fgets" = "**i^{__sFILE=}";
		"fgetwc" = "i^{__sFILE=}";
		"fgetwc_l" = "i^{__sFILE=}^{_xlocale=}";
		"fgetwln" = "^i^{__sFILE=}^Q";
		"fgetwln_l" = "^i^{__sFILE=}^Q^{_xlocale=}";
		"fgetws" = "^i^ii^{__sFILE=}";
		"fgetws_l" = "^i^ii^{__sFILE=}^{_xlocale=}";
		"fileno" = "i^{__sFILE=}";
		// decl for fileno_unlocked not found
		"filesec_dup" = "^{_filesec=}^{_filesec=}";
		"filesec_free" = "v^{_filesec=}";
		"filesec_get_property" = "i^{_filesec=}i^v";
		"filesec_init" = "^{_filesec=}";
		"filesec_query_property" = "i^{_filesec=}i^i";
		"filesec_set_property" = "i^{_filesec=}i^v";
		"filesec_unset_property" = "i^{_filesec=}i";
		"flockfile" = "v^{__sFILE=}";
		"fmemopen" = "^{__sFILE=}^vQ*";
		"fmtcheck" = "***";
		"fmtmsg" = "iq*i***";
		"fnmatch" = "i**i";
		"fopen" = "^{__sFILE=}**";
		// decl for fopen$DARWIN_EXTSN not found
		"fork" = "i";
		"forkpty" = "i^i*^{termios=}^{winsize=}";
		"fparseln" = "*^{__sFILE=}^Q^Q*i";
		"fprintf" = "$fprintf"; // i^{__sFILE=}*...;
		"fprintf_l" = "$fprintf_l"; // i^{__sFILE=}^{_xlocale=}*...;
		"fpurge" = "i^{__sFILE=}";
		"fputc" = "ii^{__sFILE=}";
		"fputs" = "i*^{__sFILE=}";
		"fputwc" = "ii^{__sFILE=}";
		"fputwc_l" = "ii^{__sFILE=}^{_xlocale=}";
		"fputws" = "i^i^{__sFILE=}";
		"fputws_l" = "i^i^{__sFILE=}^{_xlocale=}";
		"fread" = "Q^vQQ^{__sFILE=}";
		"free_printf_comp" = "v^{_printf_compiled=}";
		"free_printf_domain" = "v^{_printf_domain=}";
		"freelocale" = "i^{_xlocale=}";
		"freopen" = "^{__sFILE=}**^{__sFILE=}";
		"fscanf" = "$fscanf"; // i^{__sFILE=}*...;
		"fscanf_l" = "$fscanf_l"; // i^{__sFILE=}^{_xlocale=}*...;
		"fseek" = "i^{__sFILE=}qi";
		"fseeko" = "i^{__sFILE=}qi";
		"fsetpos" = "i^{__sFILE=}^q";
		"fstatvfs" = "ii^{statvfs=}";
		"fstatx_np" = "ii^{stat=}^{_filesec=}";
		"fsync_volume_np" = "iii";
		"ftell" = "q^{__sFILE=}";
		"ftello" = "q^{__sFILE=}";
		"ftime" = "i^{timeb=}";
		"ftok" = "i*i";
		"ftrylockfile" = "i^{__sFILE=}";
		"fts_children" = "^{_ftsent=}^{?=}i";
		"fts_close" = "i^{?=}";
		"fts_open" = "^{?=}^?i^?";
		"fts_open_b" = "^{?=}^?i^?";
		"fts_read" = "^{_ftsent=}^{?=}";
		"fts_set" = "i^{?=}^{_ftsent=}i";
		"ftw" = "i*^?i";
		"funlockfile" = "v^{__sFILE=}";
		"funopen" = "^{__sFILE=}^v^?^?^?^?";
		"fwide" = "i^{__sFILE=}i";
		"fwprintf" = "$fwprintf"; // i^{__sFILE=}^i...;
		"fwprintf_l" = "$fwprintf_l"; // i^{__sFILE=}^{_xlocale=}^i...;
		"fwrite" = "Q^vQQ^{__sFILE=}";
		"fwscanf" = "$fwscanf"; // i^{__sFILE=}^i...;
		"fwscanf_l" = "$fwscanf_l"; // i^{__sFILE=}^{_xlocale=}^i...;
		"fxprintf" = "$fxprintf"; // i^{__sFILE=}^{_printf_domain=}^{_xlocale=}*...;
		"fxprintf_exec" = "$fxprintf_exec"; // i^{__sFILE=}^{_printf_compiled=}...;
		"gcvt" = "*di*";
		"getbsize" = "*^i^q";
		"getc" = "i^{__sFILE=}";
		"getc_unlocked" = "i^{__sFILE=}";
		"getchar" = "i";
		"getchar_unlocked" = "i";
		"getcwd" = "**Q";
		"getdate" = "^{tm=}*";
		// decl for getdate_err not found
		"getdelim" = "q^?^Qi^{__sFILE=}";
		// decl for getdiskbyname not found
		"getenv" = "**";
		// decl for getgroups$DARWIN_EXTSN not found
		"gethostid" = "q";
		"gethostname" = "i*Q";
		"getipv4sourcefilter" = "ii{in_addr=}{in_addr=}^I^I^{in_addr=}";
		"getlastlogx" = "^{lastlogx=}I^{lastlogx=}";
		"getlastlogxbyname" = "^{lastlogx=}*^{lastlogx=}";
		"getline" = "q^?^Q^{__sFILE=}";
		"getloadavg" = "i^di";
		"getlogin" = "*";
		"getlogin_r" = "i*Q";
		"getmntinfo" = "i^?i";
		"getmntinfo_r_np" = "i^?i";
		"getmode" = "S^vS";
		"getopt" = "ii^?*";
		"getopt_long" = "ii^?*^{option=}^i";
		"getopt_long_only" = "ii^?*^{option=}^i";
		"getpagesize" = "i";
		"getpass" = "**";
		"getpeereid" = "ii^I^I";
		"getprogname" = "*";
		"gets" = "**";
		"getsourcefilter" = "iiI^{sockaddr=}I^I^I^{sockaddr_storage=}";
		"getsubopt" = "i^?^?^?";
		"gettimeofday" = "i^{timeval=}^v";
		"getttyent" = "^{ttyent=}";
		"getttynam" = "^{ttyent=}*";
		"getusershell" = "*";
		"getutxent" = "^{utmpx=}";
		"getutxent_wtmp" = "^{utmpx=}";
		"getutxid" = "^{utmpx=}^{utmpx=}";
		"getutxline" = "^{utmpx=}^{utmpx=}";
		"getvfsbyname" = "i*^{vfsconf=}";
		"getw" = "i^{__sFILE=}";
		"getwc" = "i^{__sFILE=}";
		"getwc_l" = "i^{__sFILE=}^{_xlocale=}";
		"getwchar" = "i";
		"getwchar_l" = "i^{_xlocale=}";
		"getwd" = "**";
		"glob" = "i*i^?^{?=}";
		"glob_b" = "i*i^?^{?=}";
		"globfree" = "v^{?=}";
		"gmtime" = "^{tm=}^q";
		"gmtime_r" = "^{tm=}^q^{tm=}";
		"grantpt" = "ii";
		// decl for hash_create not found
		// decl for hash_destroy not found
		// decl for hash_purge not found
		// decl for hash_search not found
		// decl for hash_stats not found
		// decl for hash_traverse not found
		"hcreate" = "iQ";
		"hdestroy" = "v";
		"heapsort" = "i^vQQ^?";
		"heapsort_b" = "i^vQQ^?";
		"hsearch" = "^{entry=}{entry=}i";
		"imaxabs" = "qq";
		"imaxdiv" = "{?=}qq";
		"index" = "**i";
		"inet_addr" = "I*";
		"inet_aton" = "i*^{in_addr=}";
		"inet_lnaof" = "I{in_addr=}";
		"inet_makeaddr" = "{in_addr=}II";
		"inet_net_ntop" = "*i^vi*Q";
		"inet_net_pton" = "ii*^vQ";
		"inet_neta" = "*I*Q";
		"inet_netof" = "I{in_addr=}";
		"inet_network" = "I*";
		"inet_nsap_addr" = "I*^Ci";
		"inet_nsap_ntoa" = "*i^C*";
		"inet_ntoa" = "*{in_addr=}";
		"inet_ntop" = "*i^v*I";
		// decl for inet_ntop4 not found
		// decl for inet_ntop6 not found
		"inet_pton" = "ii*^v";
		"initstate" = "*I*Q";
		"insque" = "v^v^v";
		"isalnum" = "ii";
		"isalnum_l" = "ii^{_xlocale=}";
		"isalpha" = "ii";
		"isalpha_l" = "ii^{_xlocale=}";
		"isascii" = "ii";
		"isatty" = "ii";
		"isblank" = "ii";
		"isblank_l" = "ii^{_xlocale=}";
		"iscntrl" = "ii";
		"iscntrl_l" = "ii^{_xlocale=}";
		"isdigit" = "ii";
		"isdigit_l" = "ii^{_xlocale=}";
		"isgraph" = "ii";
		"isgraph_l" = "ii^{_xlocale=}";
		"ishexnumber" = "ii";
		"ishexnumber_l" = "ii^{_xlocale=}";
		"isideogram" = "ii";
		"isideogram_l" = "ii^{_xlocale=}";
		"islower" = "ii";
		"islower_l" = "ii^{_xlocale=}";
		"isnumber" = "ii";
		"isnumber_l" = "ii^{_xlocale=}";
		"isphonogram" = "ii";
		"isphonogram_l" = "ii^{_xlocale=}";
		"isprint" = "ii";
		"isprint_l" = "ii^{_xlocale=}";
		"ispunct" = "ii";
		"ispunct_l" = "ii^{_xlocale=}";
		"isrune" = "ii";
		"isrune_l" = "ii^{_xlocale=}";
		"isspace" = "ii";
		"isspace_l" = "ii^{_xlocale=}";
		"isspecial" = "ii";
		"isspecial_l" = "ii^{_xlocale=}";
		"isupper" = "ii";
		"isupper_l" = "ii^{_xlocale=}";
		"iswalnum" = "ii";
		"iswalnum_l" = "ii^{_xlocale=}";
		"iswalpha" = "ii";
		"iswalpha_l" = "ii^{_xlocale=}";
		"iswascii" = "ii";
		"iswblank" = "ii";
		"iswblank_l" = "ii^{_xlocale=}";
		"iswcntrl" = "ii";
		"iswcntrl_l" = "ii^{_xlocale=}";
		"iswctype" = "iiI";
		"iswctype_l" = "iiI^{_xlocale=}";
		"iswdigit" = "ii";
		"iswdigit_l" = "ii^{_xlocale=}";
		"iswgraph" = "ii";
		"iswgraph_l" = "ii^{_xlocale=}";
		"iswhexnumber" = "ii";
		"iswhexnumber_l" = "ii^{_xlocale=}";
		"iswideogram" = "ii";
		"iswideogram_l" = "ii^{_xlocale=}";
		"iswlower" = "ii";
		"iswlower_l" = "ii^{_xlocale=}";
		"iswnumber" = "ii";
		"iswnumber_l" = "ii^{_xlocale=}";
		"iswphonogram" = "ii";
		"iswphonogram_l" = "ii^{_xlocale=}";
		"iswprint" = "ii";
		"iswprint_l" = "ii^{_xlocale=}";
		"iswpunct" = "ii";
		"iswpunct_l" = "ii^{_xlocale=}";
		"iswrune" = "ii";
		"iswrune_l" = "ii^{_xlocale=}";
		"iswspace" = "ii";
		"iswspace_l" = "ii^{_xlocale=}";
		"iswspecial" = "ii";
		"iswspecial_l" = "ii^{_xlocale=}";
		"iswupper" = "ii";
		"iswupper_l" = "ii^{_xlocale=}";
		"iswxdigit" = "ii";
		"iswxdigit_l" = "ii^{_xlocale=}";
		"isxdigit" = "ii";
		"isxdigit_l" = "ii^{_xlocale=}";
		"jrand48" = "q^S";
		"killpg" = "iii";
		"l64a" = "*q";
		"labs" = "qq";
		"lchflags" = "i*I";
		"lchmod" = "i*S";
		"lcong48" = "v^S";
		"ldiv" = "{?=}qq";
		"lfind" = "^v^v^v^QQ^?";
		"link_addr" = "v*^{sockaddr_dl=}";
		"link_ntoa" = "*^{sockaddr_dl=}";
		"llabs" = "qq";
		"lldiv" = "{?=}qq";
		"localeconv" = "^{lconv=}";
		"localeconv_l" = "^{lconv=}^{_xlocale=}";
		"localtime" = "^{tm=}^q";
		"localtime_r" = "^{tm=}^q^{tm=}";
		"lockf" = "iiiq";
		// decl for lockf$NOCANCEL not found
		"login_tty" = "ii";
		"logwtmp" = "v***";
		"lrand48" = "q";
		"lsearch" = "^v^v^v^QQ^?";
		"lstatx_np" = "i*^{stat=}^{_filesec=}";
		"lutimes" = "i*^{timeval=}";
		"mblen" = "i*Q";
		"mblen_l" = "i*Q^{_xlocale=}";
		"mbrlen" = "Q*Q^{mbstate_t=}";
		"mbrlen_l" = "Q*Q^{mbstate_t=}^{_xlocale=}";
		"mbrtowc" = "Q^i*Q^{mbstate_t=}";
		"mbrtowc_l" = "Q^i*Q^{mbstate_t=}^{_xlocale=}";
		"mbsinit" = "i^{mbstate_t=}";
		"mbsinit_l" = "i^{mbstate_t=}^{_xlocale=}";
		"mbsnrtowcs" = "Q^i^?QQ^{mbstate_t=}";
		"mbsnrtowcs_l" = "Q^i^?QQ^{mbstate_t=}^{_xlocale=}";
		"mbsrtowcs" = "Q^i^?Q^{mbstate_t=}";
		"mbsrtowcs_l" = "Q^i^?Q^{mbstate_t=}^{_xlocale=}";
		"mbstowcs" = "Q^i*Q";
		"mbstowcs_l" = "Q^i*Q^{_xlocale=}";
		"mbtowc" = "i^i*Q";
		"mbtowc_l" = "i^i*Q^{_xlocale=}";
		"memccpy" = "^v^v^viQ";
		"memchr" = "^v^viQ";
		"memcmp" = "i^v^vQ";
		"memcpy" = "^v^v^vQ";
		"memmem" = "^v^vQ^vQ";
		"memmove" = "^v^v^vQ";
		"memset" = "^v^viQ";
		"memset_pattern16" = "v^v^vQ";
		"memset_pattern4" = "v^v^vQ";
		"memset_pattern8" = "v^v^vQ";
		"memset_s" = "i^vQiQ";
		"mergesort" = "i^vQQ^?";
		"mergesort_b" = "i^vQQ^?";
		"mkdirx_np" = "i*^{_filesec=}";
		"mkdtemp" = "**";
		"mkdtempat_np" = "*i*";
		"mkfifox_np" = "i*^{_filesec=}";
		"mkostemp" = "i*i";
		"mkostemps" = "i*ii";
		"mkostempsat_np" = "ii*ii";
		"mkpath_np" = "i*S";
		"mkpathat_np" = "ii*S";
		"mkstemp" = "i*";
		"mkstemp_dprotected_np" = "i*ii";
		"mkstemps" = "i*i";
		"mkstempsat_np" = "ii*i";
		"mktemp" = "**";
		"mktime" = "q^{tm=}";
		// decl for monaddition not found
		// decl for moncontrol not found
		// decl for moncount not found
		// decl for moninit not found
		// decl for monitor not found
		// decl for monoutput not found
		// decl for monreset not found
		// decl for monstartup not found
		// decl for mpool_close not found
		// decl for mpool_filter not found
		// decl for mpool_get not found
		// decl for mpool_new not found
		// decl for mpool_open not found
		// decl for mpool_put not found
		// decl for mpool_sync not found
		"mrand48" = "q";
		"nanosleep" = "i^{timespec=}^{timespec=}";
		// decl for nanosleep$NOCANCEL not found
		"new_printf_comp" = "^{_printf_compiled=}^{_printf_domain=}^{_xlocale=}*";
		"new_printf_domain" = "^{_printf_domain=}";
		"newlocale" = "^{_xlocale=}i*^{_xlocale=}";
		"nextwctype" = "iiI";
		"nextwctype_l" = "iiI^{_xlocale=}";
		"nftw" = "i*^?ii";
		"nice" = "ii";
		"nl_langinfo" = "*i";
		"nl_langinfo_l" = "*i^{_xlocale=}";
		"nrand48" = "q^S";
		"nvis" = "**Qiii";
		// decl for offtime not found
		"open_memstream" = "^{__sFILE=}^?^Q";
		"open_wmemstream" = "^{__sFILE=}^?^Q";
		"opendev" = "i*ii^?";
		"opendir" = "^{?=}*";
		"openpty" = "i^i^i*^{termios=}^{winsize=}";
		"openx_np" = "i*i^{_filesec=}";
		// decl for optarg not found
		// decl for opterr not found
		// decl for optind not found
		// decl for optopt not found
		// decl for optreset not found
		"pause" = "i";
		// decl for pause$NOCANCEL not found
		"pclose" = "i^{__sFILE=}";
		"perror" = "v*";
		"popen" = "^{__sFILE=}**";
		// decl for popen$DARWIN_EXTSN not found
		"posix2time" = "qq";
		"posix_openpt" = "ii";
		"posix_spawnp" = "i^i*^^v^^v^?^?";
		"printf" = "$printf"; // i*...;
		"printf_l" = "$printf_l"; // i^{_xlocale=}*...;
		"psignal" = "vI*";
		"psort" = "v^vQQ^?";
		"psort_b" = "v^vQQ^?";
		"psort_r" = "v^vQQ^v^?";
		"ptsname" = "*i";
		"ptsname_r" = "ii*Q";
		"putc" = "ii^{__sFILE=}";
		"putc_unlocked" = "ii^{__sFILE=}";
		"putchar" = "ii";
		"putchar_unlocked" = "ii";
		"putenv" = "i*";
		"puts" = "i*";
		"pututxline" = "^{utmpx=}^{utmpx=}";
		"putw" = "ii^{__sFILE=}";
		"putwc" = "ii^{__sFILE=}";
		"putwc_l" = "ii^{__sFILE=}^{_xlocale=}";
		"putwchar" = "ii";
		"putwchar_l" = "ii^{_xlocale=}";
		"qsort" = "<v^vQQ^?>sort";
		"qsort_b" = "v^vQQ^?";
		"qsort_r" = "v^vQQ^v^?";
		"querylocale" = "*i^{_xlocale=}";
		"radixsort" = "i^?i^CI";
		"raise" = "ii";
		"rand" = "i";
		"rand_r" = "i^I";
		"random" = "q";
		// decl for rb_tree_count not found
		// decl for rb_tree_find_node not found
		// decl for rb_tree_find_node_geq not found
		// decl for rb_tree_find_node_leq not found
		// decl for rb_tree_init not found
		// decl for rb_tree_insert_node not found
		// decl for rb_tree_iterate not found
		// decl for rb_tree_remove_node not found
		"readdir" = "^{dirent=}^{?=}";
		"readdir_r" = "i^{?=}^{dirent=}^?";
		"readpassphrase" = "***Qi";
		"reallocf" = "^v^vQ";
		"realpath" = "***";
		"realpath$DARWIN_EXTSN" = "***";
		"recv" = "qi^vQi";
		// decl for recv$NOCANCEL not found
		"regcomp" = "i^{?=}*i";
		"regcomp_l" = "i^{?=}*i^{_xlocale=}";
		"regerror" = "Qi^{?=}*Q";
		"regexec" = "i^{?=}*Q^{?=}i";
		"regfree" = "v^{?=}";
		"register_printf_domain_function" = "i^{_printf_domain=}i^?^?^v";
		"register_printf_domain_render_std" = "i^{_printf_domain=}*";
		"regncomp" = "i^{?=}*Qi";
		"regncomp_l" = "i^{?=}*Qi^{_xlocale=}";
		"regnexec" = "i^{?=}*QQ^{?=}i";
		"regwcomp" = "i^{?=}^ii";
		"regwcomp_l" = "i^{?=}^ii^{_xlocale=}";
		"regwexec" = "i^{?=}^iQ^{?=}i";
		"regwncomp" = "i^{?=}^iQi";
		// decl for regwncomp_l not found
		"regwnexec" = "i^{?=}^iQQ^{?=}i";
		"remove" = "i*";
		"remque" = "v^v";
		"rewind" = "v^{__sFILE=}";
		"rewinddir" = "v^{?=}";
		"rindex" = "**i";
		"sbrk" = "^vi";
		"scandir" = "i*^?^?^?";
		"scandir_b" = "i*^?^?^?";
		"scanf" = "$scanf"; // i*...;
		"scanf_l" = "$scanf_l"; // i^{_xlocale=}*...;
		"seed48" = "^S^S";
		"seekdir" = "v^{?=}q";
		"send" = "qi^vQi";
		// decl for send$NOCANCEL not found
		"setbuf" = "v^{__sFILE=}*";
		"setbuffer" = "v^{__sFILE=}*i";
		"setenv" = "i**i";
		"sethostid" = "vq";
		"sethostname" = "i*i";
		"setipv4sourcefilter" = "ii{in_addr=}{in_addr=}II^{in_addr=}";
		"setkey" = "v*";
		"setlinebuf" = "i^{__sFILE=}";
		"setlocale" = "*i*";
		"setlogin" = "i*";
		"setmode" = "^v*";
		"setpgrp" = "i";
		"setprogname" = "v*";
		"setrgid" = "iI";
		"setruid" = "iI";
		"setsourcefilter" = "iiI^{sockaddr=}III^{sockaddr_storage=}";
		"setstate" = "**";
		"settimeofday" = "i^{timeval=}^{timezone=}";
		"setttyent" = "i";
		"setusershell" = "v";
		"setutxent" = "v";
		"setutxent_wtmp" = "vi";
		"setvbuf" = "i^{__sFILE=}*iQ";
		"sigaction" = "ii^{sigaction=}^{sigaction=}";
		"sigaddset" = "i^Ii";
		"sigaltstack" = "i^{__darwin_sigaltstack=}^{__darwin_sigaltstack=}";
		"sigblock" = "ii";
		"sigdelset" = "i^Ii";
		"sigemptyset" = "i^I";
		"sigfillset" = "i^I";
		"sighold" = "ii";
		"sigignore" = "ii";
		"siginterrupt" = "iii";
		"sigismember" = "i^Ii";
		"signal" = "^?i^?";
		"sigpause" = "ii";
		// decl for sigpause$NOCANCEL not found
		"sigrelse" = "ii";
		"sigset" = "^?i^?";
		"sigsetmask" = "ii";
		"sigvec" = "ii^{sigvec=}^{sigvec=}";
		"sl_add" = "i^{_stringlist=}*";
		"sl_find" = "*^{_stringlist=}*";
		"sl_free" = "v^{_stringlist=}i";
		"sl_init" = "^{_stringlist=}";
		"sleep" = "II";
		// decl for sleep$NOCANCEL not found
		"snprintf" = "$snprintf"; // i*Q*...;
		"snprintf_l" = "$snprintf_l"; // i*Q^{_xlocale=}*...;
		"snvis" = "**Qiii*";
		"sockatmark" = "ii";
		"sprintf" = "$sprintf"; // i**...;
		"sprintf_l" = "$sprintf_l"; // i*^{_xlocale=}*...;
		"sradixsort" = "i^?i^CI";
		"srand" = "vI";
		"srand48" = "vq";
		"sranddev" = "v";
		"srandom" = "vI";
		"srandomdev" = "v";
		"sscanf" = "$sscanf"; // i**...;
		"sscanf_l" = "$sscanf_l"; // i*^{_xlocale=}*...;
		"statvfs" = "i*^{statvfs=}";
		"statx_np" = "i*^{stat=}^{_filesec=}";
		"stpcpy" = "***";
		"stpncpy" = "***Q";
		"strcasecmp" = "i**";
		"strcasecmp_l" = "i**^{_xlocale=}";
		"strcasestr" = "***";
		"strcasestr_l" = "***^{_xlocale=}";
		"strcat" = "***";
		"strchr" = "**i";
		"strcmp" = "i**";
		"strcoll" = "i**";
		"strcoll_l" = "i**^{_xlocale=}";
		"strcpy" = "***";
		"strcspn" = "Q**";
		"strdup" = "**";
		"strenvisx" = "i*Q*Qi^i";
		"strerror" = "*i";
		"strerror_r" = "ii*Q";
		"strfmon" = "$strfmon"; // q*Q*...;
		"strfmon_l" = "$strfmon_l"; // q*Q^{_xlocale=}*...;
		"strftime" = "Q*Q*^{tm=}";
		"strftime_l" = "Q*Q*^{tm=}^{_xlocale=}";
		"strlcat" = "Q**Q";
		"strlcpy" = "Q**Q";
		"strlen" = "Q*";
		"strmode" = "vi*";
		"strncasecmp" = "i**Q";
		"strncasecmp_l" = "i**Q^{_xlocale=}";
		"strncat" = "***Q";
		"strncmp" = "i**Q";
		"strncpy" = "***Q";
		"strndup" = "**Q";
		"strnlen" = "Q*Q";
		"strnstr" = "***Q";
		"strnunvis" = "i*Q*";
		"strnunvisx" = "i*Q*i";
		"strnvis" = "i*Q*i";
		"strnvisx" = "i*Q*Qi";
		"strpbrk" = "***";
		"strptime" = "***^{tm=}";
		"strptime_l" = "***^{tm=}^{_xlocale=}";
		"strrchr" = "**i";
		"strsenvisx" = "i*Q*Qi*^i";
		"strsep" = "*^?*";
		"strsignal" = "*i";
		"strsnvis" = "i*Q*i*";
		"strsnvisx" = "i*Q*Qi*";
		"strspn" = "Q**";
		"strstr" = "***";
		"strsvis" = "i**i*";
		"strsvisx" = "i**Qi*";
		"strtod" = "d*^?";
		"strtod_l" = "d*^?^{_xlocale=}";
		"strtof" = "f*^?";
		"strtof_l" = "f*^?^{_xlocale=}";
		"strtofflags" = "i^?^Q^Q";
		"strtoimax" = "q*^?i";
		"strtoimax_l" = "q*^?i^{_xlocale=}";
		"strtok" = "***";
		"strtok_r" = "***^?";
		"strtol" = "q*^?i";
		"strtol_l" = "q*^?i^{_xlocale=}";
		"strtold" = "D*^?";
		"strtold_l" = "D*^?^{_xlocale=}";
		"strtoll" = "q*^?i";
		"strtoll_l" = "q*^?i^{_xlocale=}";
		"strtoq" = "q*^?i";
		"strtoq_l" = "q*^?i^{_xlocale=}";
		"strtoul" = "Q*^?i";
		"strtoul_l" = "Q*^?i^{_xlocale=}";
		"strtoull" = "Q*^?i";
		"strtoull_l" = "Q*^?i^{_xlocale=}";
		"strtoumax" = "Q*^?i";
		"strtoumax_l" = "Q*^?i^{_xlocale=}";
		"strtouq" = "Q*^?i";
		"strtouq_l" = "Q*^?i^{_xlocale=}";
		"strunvis" = "i**";
		"strunvisx" = "i**i";
		"strvis" = "i**i";
		"strvisx" = "i**Qi";
		"strxfrm" = "Q**Q";
		"strxfrm_l" = "Q**Q^{_xlocale=}";
		// decl for suboptarg not found
		"svis" = "**iii*";
		"swab" = "v^v^vq";
		"swprintf" = "$swprintf"; // i^iQ^i...;
		"swprintf_l" = "$swprintf_l"; // i^iQ^{_xlocale=}^i...;
		"swscanf" = "$swscanf"; // i^i^i...;
		"swscanf_l" = "$swscanf_l"; // i^i^{_xlocale=}^i...;
		"sxprintf" = "$sxprintf"; // i*Q^{_printf_domain=}^{_xlocale=}*...;
		"sxprintf_exec" = "$sxprintf_exec"; // i*Q^{_printf_compiled=}...;
		"sync_volume_np" = "i*i";
		// decl for sys_errlist not found
		// decl for sys_nerr not found
		// decl for sys_siglist not found
		// decl for sys_signame not found
		"sysconf" = "qi";
		"sysctl" = "i^iI^v^Q^vQ";
		"sysctlbyname" = "i*^v^Q^vQ";
		"sysctlnametomib" = "i*^i^Q";
		"system" = "i*";
		// decl for system$NOCANCEL not found
		"tcdrain" = "ii";
		// decl for tcdrain$NOCANCEL not found
		"tcflow" = "iii";
		"tcflush" = "iii";
		"tcgetattr" = "ii^{termios=}";
		"tcgetpgrp" = "ii";
		"tcgetsid" = "ii";
		"tcsendbreak" = "iii";
		"tcsetattr" = "iii^{termios=}";
		"tcsetpgrp" = "iii";
		"tdelete" = "^v^v^?^?";
		"telldir" = "q^{?=}";
		"tempnam" = "***";
		"tfind" = "^v^v^?^?";
		// decl for thread_stack_pcs not found
		"time" = "q^q";
		"time2posix" = "qq";
		"timegm" = "q^{tm=}";
		"timelocal" = "q^{tm=}";
		// decl for timeoff not found
		// decl for times not found
		// decl for timezone not found
		"timingsafe_bcmp" = "i^v^vQ";
		"tmpfile" = "^{__sFILE=}";
		"tmpnam" = "**";
		"toascii" = "ii";
		"tolower" = "ii";
		"tolower_l" = "ii^{_xlocale=}";
		"toupper" = "ii";
		"toupper_l" = "ii^{_xlocale=}";
		"towctrans" = "iii";
		"towctrans_l" = "iii^{_xlocale=}";
		"towlower" = "ii";
		"towlower_l" = "ii^{_xlocale=}";
		"towupper" = "ii";
		"towupper_l" = "ii^{_xlocale=}";
		// decl for tre_ast_new_catenation not found
		// decl for tre_ast_new_iter not found
		// decl for tre_ast_new_literal not found
		// decl for tre_ast_new_node not found
		// decl for tre_ast_new_union not found
		// decl for tre_compile not found
		// decl for tre_fill_pmatch not found
		// decl for tre_free not found
		// decl for tre_mem_alloc_impl not found
		// decl for tre_mem_destroy not found
		// decl for tre_mem_new_impl not found
		// decl for tre_parse not found
		// decl for tre_stack_destroy not found
		// decl for tre_stack_new not found
		// decl for tre_stack_num_objects not found
		// decl for tre_tnfa_run_backtrack not found
		// decl for tre_tnfa_run_parallel not found
		"tsearch" = "^v^v^?^?";
		"ttyname" = "*i";
		"ttyname_r" = "ii*Q";
		"ttyslot" = "i";
		"twalk" = "v^v^?";
		// decl for tzname not found
		"tzset" = "v";
		"tzsetwall" = "v";
		"ualarm" = "III";
		"ulimit" = "$ulimit"; // qi...;
		"umaskx_np" = "i^{_filesec=}";
		"uname" = "i^{utsname=}";
		"ungetc" = "ii^{__sFILE=}";
		"ungetwc" = "ii^{__sFILE=}";
		"ungetwc_l" = "ii^{__sFILE=}^{_xlocale=}";
		"unlockpt" = "ii";
		"unsetenv" = "i*";
		"unvis" = "i*i^ii";
		"uselocale" = "^{_xlocale=}^{_xlocale=}";
		"usleep" = "iI";
		// decl for usleep$NOCANCEL not found
		"utime" = "i*^{utimbuf=}";
		"utmpxname" = "i*";
		"uuid_clear" = "v[16C]";
		"uuid_compare" = "i[16C][16C]";
		"uuid_copy" = "v[16C][16C]";
		"uuid_generate" = "v[16C]";
		"uuid_generate_random" = "v[16C]";
		"uuid_generate_time" = "v[16C]";
		"uuid_is_null" = "i[16C]";
		// decl for uuid_pack not found
		"uuid_parse" = "i[37c][16C]";
		// decl for uuid_unpack not found
		"uuid_unparse" = "v[16C][37c]";
		"uuid_unparse_lower" = "v[16C][37c]";
		"uuid_unparse_upper" = "v[16C][37c]";
		"vasprintf" = "$vasprintf"; // i^?*...;
		"vasprintf_l" = "$vasprintf_l"; // i^?^{_xlocale=}*...;
		"vasxprintf" = "$vasxprintf"; // i^?^{_printf_domain=}^{_xlocale=}*...;
		"vasxprintf_exec" = "$vasxprintf_exec"; // i^?^{_printf_compiled=}...;
		"vdprintf" = "$vdprintf"; // ii*...;
		"vdprintf_l" = "$vdprintf_l"; // ii^{_xlocale=}*...;
		"vdxprintf" = "$vdxprintf"; // ii^{_printf_domain=}^{_xlocale=}*...;
		"vdxprintf_exec" = "$vdxprintf_exec"; // ii^{_printf_compiled=}...;
		"verr" = "$verr"; // vi*...;
		"verrc" = "$verrc"; // vii*...;
		"verrx" = "$verrx"; // vi*...;
		"vfprintf" = "$vfprintf"; // i^{__sFILE=}*...;
		"vfprintf_l" = "$vfprintf_l"; // i^{__sFILE=}^{_xlocale=}*...;
		"vfscanf" = "$vfscanf"; // i^{__sFILE=}*...;
		"vfscanf_l" = "$vfscanf_l"; // i^{__sFILE=}^{_xlocale=}*...;
		"vfwprintf" = "$vfwprintf"; // i^{__sFILE=}^i...;
		"vfwprintf_l" = "$vfwprintf_l"; // i^{__sFILE=}^{_xlocale=}^i...;
		"vfwscanf" = "$vfwscanf"; // i^{__sFILE=}^i...;
		"vfwscanf_l" = "$vfwscanf_l"; // i^{__sFILE=}^{_xlocale=}^i...;
		"vfxprintf" = "$vfxprintf"; // i^{__sFILE=}^{_printf_domain=}^{_xlocale=}*...;
		"vfxprintf_exec" = "$vfxprintf_exec"; // i^{__sFILE=}^{_printf_compiled=}...;
		"vis" = "**iii";
		"vprintf" = "$vprintf"; // i*...;
		"vprintf_l" = "$vprintf_l"; // i^{_xlocale=}*...;
		"vscanf" = "$vscanf"; // i*...;
		"vscanf_l" = "$vscanf_l"; // i^{_xlocale=}*...;
		"vsnprintf" = "$vsnprintf"; // i*Q*...;
		"vsnprintf_l" = "$vsnprintf_l"; // i*Q^{_xlocale=}*...;
		"vsprintf" = "$vsprintf"; // i**...;
		"vsprintf_l" = "$vsprintf_l"; // i*^{_xlocale=}*...;
		"vsscanf" = "$vsscanf"; // i**...;
		"vsscanf_l" = "$vsscanf_l"; // i*^{_xlocale=}*...;
		"vswprintf" = "$vswprintf"; // i^iQ^i...;
		"vswprintf_l" = "$vswprintf_l"; // i^iQ^{_xlocale=}^i...;
		"vswscanf" = "$vswscanf"; // i^i^i...;
		"vswscanf_l" = "$vswscanf_l"; // i^i^{_xlocale=}^i...;
		"vsxprintf" = "$vsxprintf"; // i*Q^{_printf_domain=}^{_xlocale=}*...;
		"vsxprintf_exec" = "$vsxprintf_exec"; // i*Q^{_printf_compiled=}...;
		"vwarn" = "$vwarn"; // v*...;
		"vwarnc" = "$vwarnc"; // vi*...;
		"vwarnx" = "$vwarnx"; // v*...;
		"vwprintf" = "$vwprintf"; // i^i...;
		"vwprintf_l" = "$vwprintf_l"; // i^{_xlocale=}^i...;
		"vwscanf" = "$vwscanf"; // i^i...;
		"vwscanf_l" = "$vwscanf_l"; // i^{_xlocale=}^i...;
		"vxprintf" = "$vxprintf"; // i^{_printf_domain=}^{_xlocale=}*...;
		"vxprintf_exec" = "$vxprintf_exec"; // i^{_printf_compiled=}...;
		"wait" = "i^i";
		// decl for wait$NOCANCEL not found
		"wait3" = "i^ii^{rusage=}";
		"waitpid" = "ii^ii";
		// decl for waitpid$NOCANCEL not found
		"warn" = "$warn"; // v*...;
		"warnc" = "$warnc"; // vi*...;
		"warnx" = "$warnx"; // v*...;
		"wcpcpy" = "^i^i^i";
		"wcpncpy" = "^i^i^iQ";
		"wcrtomb" = "Q*i^{mbstate_t=}";
		"wcrtomb_l" = "Q*i^{mbstate_t=}^{_xlocale=}";
		"wcscasecmp" = "i^i^i";
		"wcscasecmp_l" = "i^i^i^{_xlocale=}";
		"wcscat" = "^i^i^i";
		"wcschr" = "^i^ii";
		"wcscmp" = "i^i^i";
		"wcscoll" = "i^i^i";
		"wcscoll_l" = "i^i^i^{_xlocale=}";
		"wcscpy" = "^i^i^i";
		"wcscspn" = "Q^i^i";
		"wcsdup" = "^i^i";
		"wcsftime" = "Q^iQ^i^{tm=}";
		"wcsftime_l" = "Q^iQ^i^{tm=}^{_xlocale=}";
		"wcslcat" = "Q^i^iQ";
		"wcslcpy" = "Q^i^iQ";
		"wcslen" = "Q^i";
		"wcsncasecmp" = "i^i^iQ";
		"wcsncasecmp_l" = "i^i^iQ^{_xlocale=}";
		"wcsncat" = "^i^i^iQ";
		"wcsncmp" = "i^i^iQ";
		"wcsncpy" = "^i^i^iQ";
		"wcsnlen" = "Q^iQ";
		"wcsnrtombs" = "Q*^?QQ^{mbstate_t=}";
		"wcsnrtombs_l" = "Q*^?QQ^{mbstate_t=}^{_xlocale=}";
		"wcspbrk" = "^i^i^i";
		"wcsrchr" = "^i^ii";
		"wcsrtombs" = "Q*^?Q^{mbstate_t=}";
		"wcsrtombs_l" = "Q*^?Q^{mbstate_t=}^{_xlocale=}";
		"wcsspn" = "Q^i^i";
		"wcsstr" = "^i^i^i";
		"wcstod" = "d^i^?";
		"wcstod_l" = "d^i^?^{_xlocale=}";
		"wcstof" = "f^i^?";
		"wcstof_l" = "f^i^?^{_xlocale=}";
		"wcstoimax" = "q^i^?i";
		"wcstoimax_l" = "q^i^?i^{_xlocale=}";
		"wcstok" = "^i^i^i^?";
		"wcstol" = "q^i^?i";
		"wcstol_l" = "q^i^?i^{_xlocale=}";
		"wcstold" = "D^i^?";
		"wcstold_l" = "D^i^?^{_xlocale=}";
		"wcstoll" = "q^i^?i";
		"wcstoll_l" = "q^i^?i^{_xlocale=}";
		"wcstombs" = "Q*^iQ";
		"wcstombs_l" = "Q*^iQ^{_xlocale=}";
		"wcstoul" = "Q^i^?i";
		"wcstoul_l" = "Q^i^?i^{_xlocale=}";
		"wcstoull" = "Q^i^?i";
		"wcstoull_l" = "Q^i^?i^{_xlocale=}";
		"wcstoumax" = "Q^i^?i";
		"wcstoumax_l" = "Q^i^?i^{_xlocale=}";
		"wcswidth" = "i^iQ";
		"wcswidth_l" = "i^iQ^{_xlocale=}";
		"wcsxfrm" = "Q^i^iQ";
		"wcsxfrm_l" = "Q^i^iQ^{_xlocale=}";
		"wctob" = "ii";
		"wctob_l" = "ii^{_xlocale=}";
		"wctomb" = "i*i";
		"wctomb_l" = "i*i^{_xlocale=}";
		"wctrans" = "i*";
		"wctrans_l" = "i*^{_xlocale=}";
		"wctype" = "I*";
		"wctype_l" = "I*^{_xlocale=}";
		"wcwidth" = "ii";
		"wcwidth_l" = "ii^{_xlocale=}";
		"wmemchr" = "^i^iiQ";
		"wmemcmp" = "i^i^iQ";
		"wmemcpy" = "^i^i^iQ";
		"wmemmove" = "^i^i^iQ";
		"wmemset" = "^i^iiQ";
		"wprintf" = "$wprintf"; // i^i...;
		"wprintf_l" = "$wprintf_l"; // i^{_xlocale=}^i...;
		"wscanf" = "$wscanf"; // i^i...;
		"wscanf_l" = "$wscanf_l"; // i^{_xlocale=}^i...;
		"wtmpxname" = "i*";
		"xprintf" = "$xprintf"; // i^{_printf_domain=}^{_xlocale=}*...;
		"xprintf_exec" = "$xprintf_exec"; // i^{_printf_compiled=}...;
		// decl for _dns_configuration_ack not found
		// decl for _libSC_info_fork_child not found
		// decl for _libSC_info_fork_parent not found
		// decl for _libSC_info_fork_prepare not found
		// decl for _nwi_config_agent_copy_data not found
		// decl for _nwi_state_ack not found
		// decl for _nwi_state_force_refresh not found
		// decl for config_agent_copy_dns_information not found
		// decl for config_agent_copy_proxy_information not found
		// decl for config_agent_free_dns_information not found
		// decl for config_agent_free_proxy_information not found
		// decl for config_agent_get_dns_nameservers not found
		// decl for config_agent_get_dns_searchdomains not found
		// decl for config_agent_update_proxy_information not found
		// decl for dns_configuration_copy not found
		// decl for dns_configuration_free not found
		// decl for dns_configuration_notify_key not found
		// decl for is_config_agent_type_dns not found
		// decl for is_config_agent_type_proxy not found
		// decl for libsystem_configurationVersionNumber not found
		// decl for libsystem_configurationVersionString not found
		// decl for nwi_ifstate_compare_rank not found
		// decl for nwi_ifstate_get_dns_signature not found
		// decl for nwi_ifstate_get_flags not found
		// decl for nwi_ifstate_get_generation not found
		// decl for nwi_ifstate_get_ifname not found
		// decl for nwi_ifstate_get_next not found
		// decl for nwi_ifstate_get_reachability_flags not found
		// decl for nwi_ifstate_get_signature not found
		// decl for nwi_ifstate_get_vpn_server not found
		// decl for nwi_state_copy not found
		// decl for nwi_state_get_first_ifstate not found
		// decl for nwi_state_get_generation not found
		// decl for nwi_state_get_ifstate not found
		// decl for nwi_state_get_interface_names not found
		// decl for nwi_state_get_notify_key not found
		// decl for nwi_state_get_reachability_flags not found
		// decl for nwi_state_release not found
		// decl for CONTAINER_CURRENT_MOBILE_UID not found
		// decl for CONTAINER_INSTALLATION_UID not found
		// decl for CONTAINER_SYSTEM_UID not found
		// decl for _container_init not found
		// decl for container_copy_code_signing_info_for_identifier not found
		// decl for container_copy_info not found
		// decl for container_copy_info_value_for_key not found
		// decl for container_copy_path not found
		// decl for container_create_or_lookup not found
		// decl for container_create_or_lookup_app_group_paths not found
		// decl for container_create_or_lookup_app_group_paths_for_current_user not found
		// decl for container_create_or_lookup_group_container_paths_for_current_user not found
		// decl for container_create_or_lookup_path not found
		// decl for container_create_or_lookup_path_for_current_user not found
		// decl for container_create_or_lookup_system_group_paths not found
		// decl for container_create_or_lookup_user_managed_assets_path not found
		// decl for container_create_or_lookup_user_managed_assets_relative_path not found
		// decl for container_delete not found
		// decl for container_delete_all_container_content not found
		// decl for container_delete_all_data_container_content not found
		// decl for container_delete_array_of_containers not found
		// decl for container_delete_user_managed_assets not found
		// decl for container_delete_with_uid_class_and_identifier not found
		// decl for container_disk_usage not found
		// decl for container_free_array_of_containers not found
		// decl for container_free_object not found
		// decl for container_get_all_with_class not found
		// decl for container_get_identifier not found
		// decl for container_group_container_identifiers_for_current_user not found
		// decl for container_invalidate_code_signing_cache not found
		// decl for container_is_transient not found
		// decl for container_perform_data_migration not found
		// decl for container_perform_data_migration_for_current_user not found
		// decl for container_process_restored_container not found
		// decl for container_recreate_structure not found
		// decl for container_regenerate_uuid not found
		// decl for container_replace not found
		// decl for container_set_code_signing_info_for_identifier not found
		// decl for container_set_data_protection_for_current_user not found
		// decl for container_set_info_value not found
		// decl for container_set_network_extension_for_identifier not found
		// decl for container_stage_shared_system_content not found
		// decl for container_subdirectories_for_class not found
		// decl for container_system_group_path_for_identifier not found
		// decl for container_system_path_for_identifier not found
		// decl for container_user_managed_assets_path not found
		// decl for container_user_managed_assets_relative_path not found
		// decl for NSGetNextSearchPathEnumeration not found
		// decl for NSStartSearchPathEnumeration not found
		// decl for NSStartSearchPathEnumerationPrivate not found
		// decl for __user_local_dirname not found
		// decl for _dirhelper not found
		// decl for _get_user_dir_suffix not found
		// decl for _libcoreservices_fork_child not found
		// decl for _set_user_dir_suffix not found
		// decl for sysdir_get_next_search_path_enumeration not found
		// decl for sysdir_start_search_path_enumeration not found
		// decl for sysdir_start_search_path_enumeration_private not found
		// decl for CipherSuiteCount not found
		// decl for KnownCipherSuites not found
		// decl for __ssl_debug not found
		// decl for sslCipherSuiteGetKeyExchangeMethod not found
		// decl for sslCipherSuiteGetKeydataSize not found
		// decl for sslCipherSuiteGetMacAlgorithm not found
		// decl for sslCipherSuiteGetMacSize not found
		// decl for sslCipherSuiteGetMinSupportedTLSVersion not found
		// decl for sslCipherSuiteGetSymmetricCipherAlgorithm not found
		// decl for sslCipherSuiteGetSymmetricCipherBlockIvSize not found
		// decl for sslCipherSuiteGetSymmetricCipherKeySize not found
		// decl for tls_add_debug_logger not found
		// decl for tls_cache_cleanup not found
		// decl for tls_cache_create not found
		// decl for tls_cache_delete_session_data not found
		// decl for tls_cache_destroy not found
		// decl for tls_cache_empty not found
		// decl for tls_cache_load_session_data not found
		// decl for tls_cache_save_session_data not found
		// decl for tls_handshake_close not found
		// decl for tls_handshake_continue not found
		// decl for tls_handshake_create not found
		// decl for tls_handshake_destroy not found
		// decl for tls_handshake_get_acceptable_dn_list not found
		// decl for tls_handshake_get_ciphersuites not found
		// decl for tls_handshake_get_client_random not found
		// decl for tls_handshake_get_config not found
		// decl for tls_handshake_get_fallback not found
		// decl for tls_handshake_get_false_start not found
		// decl for tls_handshake_get_master_secret not found
		// decl for tls_handshake_get_max_protocol_version not found
		// decl for tls_handshake_get_min_dh_group_size not found
		// decl for tls_handshake_get_min_protocol_version not found
		// decl for tls_handshake_get_negotiated_cipherspec not found
		// decl for tls_handshake_get_negotiated_curve not found
		// decl for tls_handshake_get_negotiated_ems not found
		// decl for tls_handshake_get_negotiated_protocol_version not found
		// decl for tls_handshake_get_peer_acceptable_client_auth_type not found
		// decl for tls_handshake_get_peer_acceptable_dn_list not found
		// decl for tls_handshake_get_peer_alpn_data not found
		// decl for tls_handshake_get_peer_certificates not found
		// decl for tls_handshake_get_peer_hostname not found
		// decl for tls_handshake_get_peer_npn_data not found
		// decl for tls_handshake_get_peer_ocsp_enabled not found
		// decl for tls_handshake_get_peer_ocsp_request_extensions not found
		// decl for tls_handshake_get_peer_ocsp_responder_id_list not found
		// decl for tls_handshake_get_peer_ocsp_response not found
		// decl for tls_handshake_get_peer_psk_identity not found
		// decl for tls_handshake_get_peer_psk_identity_hint not found
		// decl for tls_handshake_get_peer_sct_enabled not found
		// decl for tls_handshake_get_peer_sct_list not found
		// decl for tls_handshake_get_peer_signature_algorithms not found
		// decl for tls_handshake_get_server_identity_change not found
		// decl for tls_handshake_get_server_random not found
		// decl for tls_handshake_get_session_match not found
		// decl for tls_handshake_get_session_proposed not found
		// decl for tls_handshake_get_sni_hostname not found
		// decl for tls_handshake_internal_client_random not found
		// decl for tls_handshake_internal_master_secret not found
		// decl for tls_handshake_internal_prf not found
		// decl for tls_handshake_internal_server_random not found
		// decl for tls_handshake_internal_set_master_secret_function not found
		// decl for tls_handshake_internal_set_session_ticket not found
		// decl for tls_handshake_negotiate not found
		// decl for tls_handshake_process not found
		// decl for tls_handshake_request_renegotiation not found
		// decl for tls_handshake_retransmit_timer_expired not found
		// decl for tls_handshake_set_acceptable_client_auth_type not found
		// decl for tls_handshake_set_acceptable_dn_list not found
		// decl for tls_handshake_set_alpn_data not found
		// decl for tls_handshake_set_callbacks not found
		// decl for tls_handshake_set_ciphersuites not found
		// decl for tls_handshake_set_client_auth not found
		// decl for tls_handshake_set_client_auth_type not found
		// decl for tls_handshake_set_config not found
		// decl for tls_handshake_set_curves not found
		// decl for tls_handshake_set_dh_parameters not found
		// decl for tls_handshake_set_ems_enable not found
		// decl for tls_handshake_set_encrypt_rsa_public_key not found
		// decl for tls_handshake_set_fallback not found
		// decl for tls_handshake_set_false_start not found
		// decl for tls_handshake_set_identity not found
		// decl for tls_handshake_set_max_protocol_version not found
		// decl for tls_handshake_set_min_dh_group_size not found
		// decl for tls_handshake_set_min_protocol_version not found
		// decl for tls_handshake_set_mtu not found
		// decl for tls_handshake_set_npn_data not found
		// decl for tls_handshake_set_npn_enable not found
		// decl for tls_handshake_set_ocsp_enable not found
		// decl for tls_handshake_set_ocsp_request_extensions not found
		// decl for tls_handshake_set_ocsp_responder_id_list not found
		// decl for tls_handshake_set_ocsp_response not found
		// decl for tls_handshake_set_peer_ec_public_key not found
		// decl for tls_handshake_set_peer_hostname not found
		// decl for tls_handshake_set_peer_rsa_public_key not found
		// decl for tls_handshake_set_peer_trust not found
		// decl for tls_handshake_set_psk_identity not found
		// decl for tls_handshake_set_psk_identity_hint not found
		// decl for tls_handshake_set_psk_secret not found
		// decl for tls_handshake_set_renegotiation not found
		// decl for tls_handshake_set_resumption not found
		// decl for tls_handshake_set_sct_enable not found
		// decl for tls_handshake_set_sct_list not found
		// decl for tls_handshake_set_server_identity_change not found
		// decl for tls_handshake_set_session_ticket_enabled not found
		// decl for tls_handshake_set_sigalgs not found
		// decl for tls_handshake_set_user_agent not found
		// decl for tls_private_key_create not found
		// decl for tls_private_key_destroy not found
		// decl for tls_private_key_ecdsa_create not found
		// decl for tls_private_key_get_context not found
		// decl for tls_private_key_rsa_create not found
		// decl for tls_record_advance_read_cipher not found
		// decl for tls_record_advance_write_cipher not found
		// decl for tls_record_create not found
		// decl for tls_record_decrypt not found
		// decl for tls_record_decrypted_size not found
		// decl for tls_record_destroy not found
		// decl for tls_record_encrypt not found
		// decl for tls_record_encrypted_size not found
		// decl for tls_record_get_header_size not found
		// decl for tls_record_init_pending_ciphers not found
		// decl for tls_record_parse_header not found
		// decl for tls_record_parse_ssl2_header not found
		// decl for tls_record_rollback_write_cipher not found
		// decl for tls_record_set_protocol_version not found
		// decl for tls_record_set_record_splitting not found
		// decl for tls_stream_parser_create not found
		// decl for tls_stream_parser_destroy not found
		// decl for tls_stream_parser_parse not found
		// decl for __libdarwin_init not found
		// decl for __os_temporary_resource_shortage not found
		// decl for dirstat_np not found
		// decl for dirstatat_np not found
		// decl for err_np not found
		// decl for errc_np not found
		// decl for os_assert_mach not found
		// decl for os_assert_mach_port_status not found
		// decl for os_crash_get_reporter_port_array not found
		// decl for os_crash_port_array_deallocate not found
		// decl for os_crash_set_reporter_port not found
		// decl for os_crash_spawnattr_set_reporter_port not found
		// decl for os_flagset_copy_string not found
		// decl for os_localtime_file not found
		// decl for os_mach_msg_copy_description not found
		// decl for os_mach_msg_get_audit_trailer not found
		// decl for os_mach_msg_get_context_trailer not found
		// decl for os_mach_msg_get_trailer not found
		// decl for os_mach_msg_trailer_copy_description not found
		// decl for os_mach_port_copy_description not found
		// decl for os_parse_boot_arg_int not found
		// decl for os_parse_boot_arg_string not found
		// decl for os_simple_hash not found
		// decl for os_simple_hash_string not found
		// decl for os_variant_allows_internal_security_policies not found
		// decl for os_variant_has_factory_content not found
		// decl for os_variant_has_internal_content not found
		// decl for os_variant_has_internal_diagnostics not found
		// decl for os_variant_has_internal_ui not found
		// decl for strerror_np not found
		// decl for symerror_np not found
		// decl for symexit_np not found
		// decl for sysctl_get_data_np not found
		// decl for sysctlbyname_get_data_np not found
		// decl for sysexit_np not found
		// decl for verr_np not found
		// decl for verrc_np not found
		// decl for vwarn_np not found
		// decl for warn_np not found
		// decl for zsnprintf_np not found
		"DNSServiceAddRecord" = "i^{_DNSServiceRef_t=}^^{_DNSRecordRef_t=}ISS^vI";
		"DNSServiceBrowse" = "i^^{_DNSServiceRef_t=}II**^?^v";
		// decl for DNSServiceBrowserCreate not found
		"DNSServiceConstructFullName" = "i****";
		"DNSServiceCreateConnection" = "i^^{_DNSServiceRef_t=}";
		// decl for DNSServiceCreateDelegateConnection not found
		// decl for DNSServiceDiscoveryDeallocate not found
		// decl for DNSServiceDiscoveryMachPort not found
		// decl for DNSServiceDiscovery_handleReply not found
		"DNSServiceEnumerateDomains" = "i^^{_DNSServiceRef_t=}II^?^v";
		"DNSServiceGetAddrInfo" = "i^^{_DNSServiceRef_t=}III*^?^v";
		// decl for DNSServiceGetPID not found
		"DNSServiceGetProperty" = "i*^v^I";
		"DNSServiceNATPortMappingCreate" = "i^^{_DNSServiceRef_t=}IIISSI^?^v";
		"DNSServiceProcessResult" = "i^{_DNSServiceRef_t=}";
		"DNSServiceQueryRecord" = "i^^{_DNSServiceRef_t=}II*SS^?^v";
		"DNSServiceReconfirmRecord" = "iII*SSS^v";
		"DNSServiceRefDeallocate" = "v^{_DNSServiceRef_t=}";
		"DNSServiceRefSockFD" = "i^{_DNSServiceRef_t=}";
		"DNSServiceRegister" = "i^^{_DNSServiceRef_t=}II****SS^v^?^v";
		"DNSServiceRegisterRecord" = "i^{_DNSServiceRef_t=}^^{_DNSRecordRef_t=}II*SSS^vI^?^v";
		"DNSServiceRemoveRecord" = "i^{_DNSServiceRef_t=}^{_DNSRecordRef_t=}I";
		"DNSServiceResolve" = "i^^{_DNSServiceRef_t=}II***^?^v";
		// decl for DNSServiceResolverResolve not found
		// decl for DNSServiceSetDefaultDomainForUser not found
		"DNSServiceSetDispatchQueue" = "i^{_DNSServiceRef_t=}^{dispatch_queue_s=}";
		"DNSServiceSleepKeepalive" = "i^^{_DNSServiceRef_t=}IiI^?^v";
		"DNSServiceUpdateRecord" = "i^{_DNSServiceRef_t=}^{_DNSRecordRef_t=}IS^vI";
		"PeerConnectionRelease" = "iI***";
		"TXTRecordContainsKey" = "iS^v*";
		"TXTRecordCreate" = "v^{TXTRecordRef=}S^v";
		"TXTRecordDeallocate" = "v^{TXTRecordRef=}";
		"TXTRecordGetBytesPtr" = "^v^{TXTRecordRef=}";
		"TXTRecordGetCount" = "SS^v";
		"TXTRecordGetItemAtIndex" = "iS^vSS*^C^?";
		"TXTRecordGetLength" = "S^{TXTRecordRef=}";
		"TXTRecordGetValuePtr" = "^vS^v*^C";
		"TXTRecordRemoveValue" = "i^{TXTRecordRef=}*";
		"TXTRecordSetValue" = "i^{TXTRecordRef=}*C^v";
		// decl for LI_get_thread_item not found
		// decl for LI_get_thread_list not found
		// decl for LI_ils_create not found
		// decl for LI_set_thread_item not found
		// decl for LI_set_thread_list not found
		// decl for __dn_skipname not found
		"_authenticate" = "i^{svc_req=}^{rpc_msg=}";
		// decl for _gai_nat64_can_v4_address_be_synthesized not found
		// decl for _gai_serv_to_port not found
		// decl for _gai_simple not found
		// decl for _getaddrinfo_interface_async_call not found
		// decl for _getlong not found
		// decl for _getnameinfo_interface_async_call not found
		// decl for _getshort not found
		// decl for _null_auth not found
		// decl for _res not found
		"_seterr_reply" = "v^{rpc_msg=}^{rpc_err=}";
		// decl for _yp_dobind not found
		// decl for alias_endent not found
		// decl for alias_getbyname not found
		// decl for alias_getent not found
		// decl for alias_setent not found
		"authnone_create" = "^{?=}";
		"authunix_create" = "^{?=}*iii^i";
		"authunix_create_default" = "^{?=}";
		"bindresvport" = "ii^{sockaddr_in=}";
		"bindresvport_sa" = "ii^{sockaddr=}";
		// decl for bootparams_endent not found
		// decl for bootparams_getbyname not found
		// decl for bootparams_getent not found
		// decl for bootparams_setent not found
		// decl for clnt_broadcast not found
		"clnt_create" = "^{CLIENT=}*II*";
		"clnt_pcreateerror" = "v*";
		"clnt_perrno" = "vi";
		"clnt_perror" = "v^{CLIENT=}*";
		"clnt_spcreateerror" = "**";
		"clnt_sperrno" = "*i";
		"clnt_sperror" = "*^{CLIENT=}*";
		"clntraw_create" = "^{CLIENT=}II";
		"clnttcp_create" = "^{CLIENT=}^{sockaddr_in=}II^iII";
		"clntudp_bufcreate" = "^{CLIENT=}^{sockaddr_in=}II{timeval=}^iII";
		"clntudp_create" = "^{CLIENT=}^{sockaddr_in=}II{timeval=}^i";
		// decl for configuration_profile_copy_property_list not found
		// decl for configuration_profile_create_notification_key not found
		// decl for dn_expand not found
		"endfsent" = "v";
		"endgrent" = "v";
		"endhostent" = "v";
		"endnetent" = "v";
		"endnetgrent" = "v";
		"endprotoent" = "v";
		"endpwent" = "v";
		"endrpcent" = "v";
		"endservent" = "v";
		"ether_aton" = "^{ether_addr=}*";
		"ether_hostton" = "i*^{ether_addr=}";
		"ether_line" = "i*^{ether_addr=}*";
		"ether_ntoa" = "*^{ether_addr=}";
		"ether_ntohost" = "i*^{ether_addr=}";
		"freeaddrinfo" = "v^{addrinfo=}";
		"freehostent" = "v^{hostent=}";
		"freeifaddrs" = "v^{ifaddrs=}";
		"freeifmaddrs" = "v^{ifmaddrs=}";
		// decl for gL1CacheEnabled not found
		"gai_strerror" = "*i";
		"getaddrinfo" = "i**^{addrinfo=}^?";
		// decl for getaddrinfo_async_cancel not found
		// decl for getaddrinfo_async_handle_reply not found
		// decl for getaddrinfo_async_receive not found
		// decl for getaddrinfo_async_send not found
		// decl for getaddrinfo_async_start not found
		"getdomainname" = "i*i";
		"getfsent" = "^{fstab=}";
		"getfsfile" = "^{fstab=}*";
		"getfsspec" = "^{fstab=}*";
		"getgrent" = "^{group=}";
		"getgrgid" = "^{group=}I";
		"getgrgid_r" = "iI^{group=}*Q^?";
		"getgrnam" = "^{group=}*";
		"getgrnam_r" = "i*^{group=}*Q^?";
		// decl for getgroupcount not found
		"getgrouplist" = "i*i^i^i";
		// decl for getgrouplist_2 not found
		"getgruuid" = "^{group=}[16C]";
		"getgruuid_r" = "i[16C]^{group=}*Q^?";
		"gethostbyaddr" = "^{hostent=}^vIi";
		// decl for gethostbyaddr_async_cancel not found
		// decl for gethostbyaddr_async_handleReply not found
		// decl for gethostbyaddr_async_start not found
		"gethostbyname" = "^{hostent=}*";
		"gethostbyname2" = "^{hostent=}*i";
		// decl for gethostbyname_async_cancel not found
		// decl for gethostbyname_async_handleReply not found
		// decl for gethostbyname_async_start not found
		"gethostent" = "^{hostent=}";
		"getifaddrs" = "i^?";
		"getifmaddrs" = "i^?";
		"getipnodebyaddr" = "^{hostent=}^vQi^i";
		"getipnodebyname" = "^{hostent=}*ii^i";
		"getnameinfo" = "i^{sockaddr=}I*I*Ii";
		// decl for getnameinfo_async_cancel not found
		// decl for getnameinfo_async_handle_reply not found
		// decl for getnameinfo_async_send not found
		// decl for getnameinfo_async_start not found
		"getnetbyaddr" = "^{netent=}Ii";
		"getnetbyname" = "^{netent=}*";
		"getnetent" = "^{netent=}";
		"getnetgrent" = "i^?^?^?";
		"getprotobyname" = "^{protoent=}*";
		"getprotobynumber" = "^{protoent=}i";
		"getprotoent" = "^{protoent=}";
		"getpwent" = "^{passwd=}";
		"getpwnam" = "^{passwd=}*";
		"getpwnam_r" = "i*^{passwd=}*Q^?";
		"getpwuid" = "^{passwd=}I";
		"getpwuid_r" = "iI^{passwd=}*Q^?";
		"getpwuuid" = "^{passwd=}[16C]";
		"getpwuuid_r" = "i[16C]^{passwd=}*Q^?";
		"getrpcbyname" = "^{rpcent=}*";
		"getrpcbynumber" = "^{rpcent=}i";
		"getrpcent" = "^{rpcent=}";
		// decl for getrpcport not found
		"getservbyname" = "^{servent=}**";
		"getservbyport" = "^{servent=}i*";
		"getservent" = "^{servent=}";
		"group_from_gid" = "*Ii";
		// decl for h_errno not found
		"herror" = "v*";
		"hstrerror" = "*i";
		// decl for htonl not found
		// decl for htons not found
		"if_freenameindex" = "v^{if_nameindex=}";
		"if_indextoname" = "*I*";
		"if_nameindex" = "^{if_nameindex=}";
		"if_nametoindex" = "I*";
		// decl for in6addr_any not found
		// decl for in6addr_linklocal_allnodes not found
		// decl for in6addr_linklocal_allrouters not found
		// decl for in6addr_loopback not found
		// decl for in6addr_nodelocal_allnodes not found
		"inet6_opt_append" = "i^vIiCIC^?";
		"inet6_opt_find" = "i^vIiC^I^?";
		"inet6_opt_finish" = "i^vIi";
		"inet6_opt_get_val" = "i^vi^vI";
		"inet6_opt_init" = "i^vI";
		"inet6_opt_next" = "i^vIi^C^I^?";
		"inet6_opt_set_val" = "i^vi^vI";
		"inet6_option_alloc" = "^C^{cmsghdr=}iii";
		"inet6_option_append" = "i^{cmsghdr=}^Cii";
		"inet6_option_find" = "i^{cmsghdr=}^?i";
		"inet6_option_init" = "i^v^?i";
		"inet6_option_next" = "i^{cmsghdr=}^?";
		"inet6_option_space" = "ii";
		"inet6_rth_add" = "i^v^{in6_addr=}";
		"inet6_rth_getaddr" = "^{in6_addr=}^vi";
		"inet6_rth_init" = "^v^vIii";
		"inet6_rth_reverse" = "i^v^v";
		"inet6_rth_segments" = "i^v";
		"inet6_rth_space" = "Iii";
		"inet6_rthdr_add" = "i^{cmsghdr=}^{in6_addr=}I";
		"inet6_rthdr_getaddr" = "^{in6_addr=}^{cmsghdr=}i";
		"inet6_rthdr_getflags" = "i^{cmsghdr=}i";
		"inet6_rthdr_init" = "^{cmsghdr=}^vi";
		"inet6_rthdr_lasthop" = "i^{cmsghdr=}I";
		"inet6_rthdr_segments" = "i^{cmsghdr=}";
		"inet6_rthdr_space" = "Qii";
		"initgroups" = "i*i";
		"innetgr" = "i****";
		"iruserok" = "iQi**";
		"iruserok_sa" = "i^vii**";
		// decl for kvarray_free not found
		// decl for kvbuf_add_dict not found
		// decl for kvbuf_add_key not found
		// decl for kvbuf_add_val not found
		// decl for kvbuf_add_val_len not found
		// decl for kvbuf_append_kvbuf not found
		// decl for kvbuf_decode not found
		// decl for kvbuf_free not found
		// decl for kvbuf_get_len not found
		// decl for kvbuf_init not found
		// decl for kvbuf_init_zone not found
		// decl for kvbuf_make_nonpurgeable not found
		// decl for kvbuf_make_purgeable not found
		// decl for kvbuf_new not found
		// decl for kvbuf_new_zone not found
		// decl for kvbuf_next_dict not found
		// decl for kvbuf_next_key not found
		// decl for kvbuf_next_val not found
		// decl for kvbuf_next_val_len not found
		// decl for kvbuf_query not found
		// decl for kvbuf_query_key_int not found
		// decl for kvbuf_query_key_uint not found
		// decl for kvbuf_query_key_val not found
		// decl for kvbuf_reset not found
		// decl for mbr_check_membership not found
		// decl for mbr_check_membership_by_id not found
		// decl for mbr_check_membership_ext not found
		// decl for mbr_check_membership_refresh not found
		// decl for mbr_check_service_membership not found
		// decl for mbr_gid_to_uuid not found
		// decl for mbr_group_name_to_uuid not found
		// decl for mbr_identifier_to_uuid not found
		// decl for mbr_identifier_translate not found
		// decl for mbr_reset_cache not found
		// decl for mbr_set_identifier_ttl not found
		// decl for mbr_sid_to_string not found
		// decl for mbr_sid_to_uuid not found
		// decl for mbr_string_to_sid not found
		// decl for mbr_string_to_uuid not found
		// decl for mbr_uid_to_uuid not found
		// decl for mbr_user_name_to_uuid not found
		// decl for mbr_uuid_to_id not found
		// decl for mbr_uuid_to_sid not found
		// decl for mbr_uuid_to_sid_type not found
		// decl for mbr_uuid_to_string not found
		// decl for ntohl not found
		// decl for ntohs not found
		// decl for pmap_getmaps not found
		// decl for pmap_getport not found
		// decl for pmap_rmtcall not found
		// decl for pmap_set not found
		// decl for pmap_unset not found
		// decl for prdb_end not found
		// decl for prdb_get not found
		// decl for prdb_getbyname not found
		// decl for prdb_set not found
		"rcmd" = "i^?i***^i";
		"rcmd_af" = "i^?i***^ii";
		// decl for res_init not found
		// decl for res_query not found
		// decl for res_search not found
		// decl for rpc_createerr not found
		"rresvport" = "i^i";
		"rresvport_af" = "i^ii";
		"ruserok" = "i*i**";
		"setdomainname" = "i*i";
		"setfsent" = "i";
		"setgrent" = "v";
		"setgroupent" = "ii";
		"sethostent" = "vi";
		"setnetent" = "vi";
		"setnetgrent" = "v*";
		"setpassent" = "ii";
		"setprotoent" = "vi";
		"setpwent" = "v";
		"setrpcent" = "vi";
		"setservent" = "vi";
		// decl for si_addrinfo not found
		// decl for si_addrinfo_list not found
		// decl for si_addrinfo_list_from_hostent not found
		// decl for si_addrinfo_v4 not found
		// decl for si_addrinfo_v4_mapped not found
		// decl for si_addrinfo_v6 not found
		// decl for si_alias_all not found
		// decl for si_alias_byname not found
		// decl for si_async_call not found
		// decl for si_async_cancel not found
		// decl for si_async_handle_reply not found
		// decl for si_destination_compare not found
		// decl for si_destination_compare_no_dependencies not found
		// decl for si_fs_all not found
		// decl for si_fs_byfile not found
		// decl for si_fs_byspec not found
		// decl for si_group_all not found
		// decl for si_group_bygid not found
		// decl for si_group_byname not found
		// decl for si_group_byuuid not found
		// decl for si_grouplist not found
		// decl for si_host_all not found
		// decl for si_host_byaddr not found
		// decl for si_host_byname not found
		// decl for si_in_netgroup not found
		// decl for si_ipnode_byname not found
		// decl for si_item_call not found
		// decl for si_item_is_valid not found
		// decl for si_item_match not found
		// decl for si_item_release not found
		// decl for si_item_retain not found
		// decl for si_list_add not found
		// decl for si_list_call not found
		// decl for si_list_concat not found
		// decl for si_list_next not found
		// decl for si_list_release not found
		// decl for si_list_reset not found
		// decl for si_list_retain not found
		// decl for si_mac_all not found
		// decl for si_mac_bymac not found
		// decl for si_mac_byname not found
		// decl for si_module_name not found
		// decl for si_module_release not found
		// decl for si_module_retain not found
		// decl for si_module_vers not found
		// decl for si_module_with_name not found
		// decl for si_nameinfo not found
		// decl for si_netgroup_byname not found
		// decl for si_network_all not found
		// decl for si_network_byaddr not found
		// decl for si_network_byname not found
		// decl for si_protocol_all not found
		// decl for si_protocol_byname not found
		// decl for si_protocol_bynumber not found
		// decl for si_rpc_all not found
		// decl for si_rpc_byname not found
		// decl for si_rpc_bynumber not found
		// decl for si_search not found
		// decl for si_search_module_set_flags not found
		// decl for si_service_all not found
		// decl for si_service_byname not found
		// decl for si_service_byport not found
		// decl for si_set_nat64_v4_requires_synthesis not found
		// decl for si_set_nat64_v4_synthesize not found
		// decl for si_srv_byname not found
		// decl for si_standardize_mac_address not found
		// decl for si_user_all not found
		// decl for si_user_byname not found
		// decl for si_user_byuid not found
		// decl for si_user_byuuid not found
		// decl for si_wants_addrinfo not found
		// decl for svc_fdset not found
		"svc_getreq" = "vi";
		"svc_getreqset" = "v^{fd_set=}";
		"svc_register" = "i^{?=}II^?i";
		"svc_run" = "v";
		"svc_sendreply" = "i^{?=}^?*";
		"svc_unregister" = "vII";
		"svcerr_auth" = "v^{?=}i";
		"svcerr_decode" = "v^{?=}";
		"svcerr_noproc" = "v^{?=}";
		"svcerr_noprog" = "v^{?=}";
		"svcerr_progvers" = "v^{?=}II";
		"svcerr_systemerr" = "v^{?=}";
		"svcerr_weakauth" = "v^{?=}";
		"svcfd_create" = "^{?=}iII";
		"svcraw_create" = "^{?=}";
		"svctcp_create" = "^{?=}iII";
		"svcudp_bufcreate" = "^{?=}iII";
		"svcudp_create" = "^{?=}i";
		"user_from_uid" = "*Ii";
		"xdr_array" = "i^{__rpc_xdr=}^?^III^?";
		"xdr_authunix_parms" = "i^{__rpc_xdr=}^{authunix_parms=}";
		"xdr_bool" = "i^{__rpc_xdr=}^i";
		"xdr_bytes" = "i^{__rpc_xdr=}^?^II";
		"xdr_callhdr" = "i^{__rpc_xdr=}^{rpc_msg=}";
		"xdr_callmsg" = "i^{__rpc_xdr=}^{rpc_msg=}";
		"xdr_char" = "i^{__rpc_xdr=}*";
		"xdr_des_block" = "i^{__rpc_xdr=}^{des_block=}";
		"xdr_domainname" = "i^{__rpc_xdr=}^*";
		"xdr_double" = "i^{__rpc_xdr=}^d";
		"xdr_enum" = "i^{__rpc_xdr=}^i";
		"xdr_float" = "i^{__rpc_xdr=}^f";
		"xdr_free" = "v^?^v";
		"xdr_hyper" = "i^{__rpc_xdr=}^q";
		"xdr_int" = "i^{__rpc_xdr=}^i";
		"xdr_int16_t" = "i^{__rpc_xdr=}^s";
		"xdr_int32_t" = "i^{__rpc_xdr=}^i";
		"xdr_int64_t" = "i^{__rpc_xdr=}^q";
		"xdr_keydat" = "i^{__rpc_xdr=}^{?=}";
		"xdr_long" = "i^{__rpc_xdr=}^i";
		"xdr_longlong_t" = "i^{__rpc_xdr=}^q";
		"xdr_mapname" = "i^{__rpc_xdr=}^*";
		"xdr_netobj" = "i^{__rpc_xdr=}^{netobj=}";
		"xdr_opaque" = "i^{__rpc_xdr=}*I";
		"xdr_peername" = "i^{__rpc_xdr=}^*";
		// decl for xdr_pmap not found
		// decl for xdr_pmaplist not found
		"xdr_pointer" = "i^{__rpc_xdr=}^?I^?";
		"xdr_reference" = "i^{__rpc_xdr=}^?I^?";
		"xdr_replymsg" = "i^{__rpc_xdr=}^{rpc_msg=}";
		// decl for xdr_rmtcall_args not found
		// decl for xdr_rmtcallres not found
		"xdr_short" = "i^{__rpc_xdr=}^s";
		"xdr_string" = "i^{__rpc_xdr=}^?I";
		"xdr_u_char" = "i^{__rpc_xdr=}^C";
		"xdr_u_hyper" = "i^{__rpc_xdr=}^Q";
		"xdr_u_int" = "i^{__rpc_xdr=}^I";
		"xdr_u_int16_t" = "i^{__rpc_xdr=}^S";
		"xdr_u_int32_t" = "i^{__rpc_xdr=}^I";
		"xdr_u_int64_t" = "i^{__rpc_xdr=}^Q";
		"xdr_u_long" = "i^{__rpc_xdr=}^I";
		"xdr_u_longlong_t" = "i^{__rpc_xdr=}^Q";
		"xdr_u_short" = "i^{__rpc_xdr=}^S";
		"xdr_union" = "i^{__rpc_xdr=}^i*^{xdr_discrim=}^?";
		"xdr_valdat" = "i^{__rpc_xdr=}^{?=}";
		"xdr_vector" = "i^{__rpc_xdr=}*II^?";
		"xdr_void" = "i";
		"xdr_wrapstring" = "i^{__rpc_xdr=}^?";
		"xdr_x_passwd" = "i^{__rpc_xdr=}^{x_passwd=}";
		"xdr_ypbind_binding" = "i^{__rpc_xdr=}^{ypbind_binding=}";
		"xdr_ypbind_resp" = "i^{__rpc_xdr=}^{ypbind_resp=}";
		"xdr_ypbind_resptype" = "i^{__rpc_xdr=}^i";
		"xdr_ypbind_setdom" = "i^{__rpc_xdr=}^{ypbind_setdom=}";
		"xdr_ypmaplist" = "i^{__rpc_xdr=}^{ypmaplist=}";
		"xdr_yppasswd" = "i^{__rpc_xdr=}^{yppasswd=}";
		"xdr_ypreq_key" = "i^{__rpc_xdr=}^{ypreq_key=}";
		"xdr_ypreq_nokey" = "i^{__rpc_xdr=}^{ypreq_nokey=}";
		"xdr_ypresp_all" = "i^{__rpc_xdr=}^{ypresp_all=}";
		// decl for xdr_ypresp_all_seq not found
		"xdr_ypresp_key_val" = "i^{__rpc_xdr=}^{ypresp_key_val=}";
		"xdr_ypresp_maplist" = "i^{__rpc_xdr=}^{ypresp_maplist=}";
		"xdr_ypresp_master" = "i^{__rpc_xdr=}^{ypresp_master=}";
		"xdr_ypresp_order" = "i^{__rpc_xdr=}^{ypresp_order=}";
		"xdr_ypresp_val" = "i^{__rpc_xdr=}^{ypresp_val=}";
		"xdr_ypstat" = "i^{__rpc_xdr=}^i";
		"xdrmem_create" = "v^{__rpc_xdr=}*Ii";
		"xdrrec_create" = "v^{__rpc_xdr=}II^v^?^?";
		"xdrrec_endofrecord" = "i^{__rpc_xdr=}i";
		"xdrrec_eof" = "i^{__rpc_xdr=}";
		"xdrrec_skiprecord" = "i^{__rpc_xdr=}";
		// decl for xdrstdio_create not found
		"xprt_register" = "v^{?=}";
		"xprt_unregister" = "v^{?=}";
		// decl for yp_all not found
		// decl for yp_bind not found
		// decl for yp_first not found
		// decl for yp_get_default_domain not found
		// decl for yp_maplist not found
		// decl for yp_master not found
		// decl for yp_match not found
		// decl for yp_next not found
		// decl for yp_order not found
		// decl for yp_unbind not found
		// decl for yperr_string not found
		// decl for ypprot_err not found
		// decl for NDR_record not found
		// decl for ____old_semwait_signal_nocancel not found
		// decl for ____sigwait_nocancel not found
		// decl for ___kernelVersionNumber not found
		// decl for ___kernelVersionString not found
		// decl for __abort_with_payload not found
		// decl for __accept not found
		// decl for __accept_nocancel not found
		// decl for __access_extended not found
		// decl for __aio_suspend_nocancel not found
		// decl for __bind not found
		// decl for __bsdthread_create not found
		// decl for __bsdthread_ctl not found
		// decl for __bsdthread_register not found
		// decl for __bsdthread_terminate not found
		// decl for __carbon_delete not found
		// decl for __channel_get_info not found
		// decl for __channel_get_opt not found
		// decl for __channel_open not found
		// decl for __channel_set_opt not found
		// decl for __channel_sync not found
		// decl for __chmod not found
		// decl for __chmod_extended not found
		// decl for __close_nocancel not found
		// decl for __coalition not found
		// decl for __coalition_info not found
		// decl for __commpage_gettimeofday not found
		// decl for __connect not found
		// decl for __connect_nocancel not found
		// decl for __copyfile not found
		// decl for __csrctl not found
		// decl for __delete not found
		// decl for __disable_threadsignal not found
		// decl for __error not found
		// decl for __exit not found
		// decl for __fchmod not found
		// decl for __fchmod_extended not found
		// decl for __fcntl not found
		// decl for __fcntl_nocancel not found
		// decl for __fork not found
		// decl for __fs_snapshot not found
		// decl for __fstat64_extended not found
		// decl for __fstat_extended not found
		// decl for __fsync_nocancel not found
		// decl for __get_remove_counter not found
		// decl for __getattrlist not found
		// decl for __getdirentries64 not found
		// decl for __gethostuuid not found
		// decl for __getlogin not found
		// decl for __getpeername not found
		// decl for __getpid not found
		// decl for __getrlimit not found
		// decl for __getsgroups not found
		// decl for __getsockname not found
		// decl for __gettid not found
		// decl for __gettimeofday not found
		// decl for __getwgroups not found
		// decl for __guarded_open_dprotected_np not found
		// decl for __guarded_open_np not found
		// decl for __identitysvc not found
		// decl for __inc_remove_counter not found
		// decl for __initgroups not found
		// decl for __ioctl not found
		// decl for __iopolicysys not found
		// decl for __kdebug_trace not found
		// decl for __kdebug_trace64 not found
		// decl for __kdebug_trace_string not found
		// decl for __kdebug_typefilter not found
		// decl for __kill not found
		// decl for __kqueue_workloop_ctl not found
		// decl for __lchown not found
		// decl for __libkernel_init not found
		// decl for __libkernel_platform_init not found
		// decl for __libkernel_voucher_init not found
		// decl for __listen not found
		// decl for __lseek not found
		// decl for __lstat64_extended not found
		// decl for __lstat_extended not found
		// decl for __mac_execve not found
		// decl for __mac_get_fd not found
		// decl for __mac_get_file not found
		// decl for __mac_get_link not found
		// decl for __mac_get_mount not found
		// decl for __mac_get_pid not found
		// decl for __mac_get_proc not found
		// decl for __mac_getfsstat not found
		// decl for __mac_mount not found
		// decl for __mac_set_fd not found
		// decl for __mac_set_file not found
		// decl for __mac_set_link not found
		// decl for __mac_set_proc not found
		// decl for __mac_syscall not found
		// decl for __mach_bridge_remote_time not found
		// decl for __microstackshot not found
		// decl for __mkdir_extended not found
		// decl for __mkfifo_extended not found
		// decl for __mmap not found
		// decl for __mprotect not found
		// decl for __msgctl not found
		// decl for __msgrcv_nocancel not found
		// decl for __msgsnd_nocancel not found
		// decl for __msgsys not found
		// decl for __msync not found
		// decl for __msync_nocancel not found
		// decl for __munmap not found
		// decl for __nexus_create not found
		// decl for __nexus_deregister not found
		// decl for __nexus_destroy not found
		// decl for __nexus_get_opt not found
		// decl for __nexus_open not found
		// decl for __nexus_register not found
		// decl for __nexus_set_opt not found
		// decl for __old_semwait_signal not found
		// decl for __open not found
		// decl for __open_dprotected_np not found
		// decl for __open_extended not found
		// decl for __open_nocancel not found
		// decl for __openat not found
		// decl for __openat_nocancel not found
		// decl for __os_nexus_connect not found
		// decl for __os_nexus_disconnect not found
		// decl for __os_nexus_ifattach not found
		// decl for __os_nexus_ifdetach not found
		// decl for __os_nexus_nsbind not found
		// decl for __os_nexus_nsunbind not found
		// decl for __persona not found
		// decl for __pipe not found
		// decl for __poll_nocancel not found
		// decl for __posix_spawn not found
		// decl for __pread_nocancel not found
		// decl for __proc_info not found
		// decl for __process_policy not found
		// decl for __pselect not found
		// decl for __pselect_nocancel not found
		// decl for __psynch_cvbroad not found
		// decl for __psynch_cvclrprepost not found
		// decl for __psynch_cvsignal not found
		// decl for __psynch_cvwait not found
		// decl for __psynch_mutexdrop not found
		// decl for __psynch_mutexwait not found
		// decl for __psynch_rw_downgrade not found
		// decl for __psynch_rw_longrdlock not found
		// decl for __psynch_rw_rdlock not found
		// decl for __psynch_rw_unlock not found
		// decl for __psynch_rw_unlock2 not found
		// decl for __psynch_rw_upgrade not found
		// decl for __psynch_rw_wrlock not found
		// decl for __psynch_rw_yieldwrlock not found
		// decl for __pthread_canceled not found
		// decl for __pthread_chdir not found
		// decl for __pthread_fchdir not found
		// decl for __pthread_kill not found
		// decl for __pthread_markcancel not found
		// decl for __pthread_sigmask not found
		// decl for __ptrace not found
		// decl for __pwrite_nocancel not found
		// decl for __read_nocancel not found
		// decl for __readv_nocancel not found
		// decl for __reboot not found
		// decl for __recvfrom not found
		// decl for __recvfrom_nocancel not found
		// decl for __recvmsg not found
		// decl for __recvmsg_nocancel not found
		// decl for __rename not found
		// decl for __renameat not found
		// decl for __renameatx_np not found
		// decl for __rmdir not found
		// decl for __sandbox_me not found
		// decl for __sandbox_mm not found
		// decl for __sandbox_ms not found
		// decl for __sandbox_msp not found
		// decl for __select not found
		// decl for __select_nocancel not found
		// decl for __sem_open not found
		// decl for __sem_wait_nocancel not found
		// decl for __semctl not found
		// decl for __semsys not found
		// decl for __semwait_signal not found
		// decl for __semwait_signal_nocancel not found
		// decl for __sendmsg not found
		// decl for __sendmsg_nocancel not found
		// decl for __sendto not found
		// decl for __sendto_nocancel not found
		// decl for __setattrlist not found
		// decl for __setlogin not found
		// decl for __setpriority not found
		// decl for __setregid not found
		// decl for __setreuid not found
		// decl for __setrlimit not found
		// decl for __setsgroups not found
		// decl for __settid not found
		// decl for __settid_with_pid not found
		// decl for __settimeofday not found
		// decl for __setwgroups not found
		// decl for __sfi_ctl not found
		// decl for __sfi_pidctl not found
		// decl for __shared_region_check_np not found
		// decl for __shared_region_map_and_slide_np not found
		// decl for __shm_open not found
		// decl for __shmctl not found
		// decl for __shmsys not found
		// decl for __sigaction not found
		// decl for __sigaltstack not found
		// decl for __sigreturn not found
		// decl for __sigsuspend not found
		// decl for __sigsuspend_nocancel not found
		// decl for __sigwait not found
		// decl for __socketpair not found
		// decl for __stack_snapshot_with_config not found
		// decl for __stat64_extended not found
		// decl for __stat_extended not found
		// decl for __syscall not found
		// decl for __syscall_logger not found
		// decl for __sysctl not found
		// decl for __sysctlbyname not found
		// decl for __telemetry not found
		// decl for __terminate_with_payload not found
		// decl for __thread_selfid not found
		// decl for __thread_selfusage not found
		// decl for __ulock_wait not found
		// decl for __ulock_wake not found
		// decl for __umask_extended not found
		// decl for __unlink not found
		// decl for __unlinkat not found
		// decl for __vfork not found
		// decl for __wait4 not found
		// decl for __wait4_nocancel not found
		// decl for __waitid_nocancel not found
		// decl for __work_interval_ctl not found
		// decl for __workq_kernreturn not found
		// decl for __workq_open not found
		// decl for __write_nocancel not found
		// decl for __writev_nocancel not found
		// decl for _cpu_capabilities not found
		// decl for _cpu_has_altivec not found
		// decl for _current_pid not found
		"_exit" = "vi";
		// decl for _get_cpu_capabilities not found
		// decl for _getprivatesystemidentifier not found
		"_host_page_size" = "iI^Q";
		// decl for _init_cpu_capabilities not found
		// decl for _kernelrpc_host_create_mach_voucher not found
		// decl for _kernelrpc_mach_port_allocate not found
		// decl for _kernelrpc_mach_port_allocate_full not found
		// decl for _kernelrpc_mach_port_allocate_name not found
		// decl for _kernelrpc_mach_port_allocate_qos not found
		"_kernelrpc_mach_port_allocate_trap" = "iII^I";
		// decl for _kernelrpc_mach_port_construct not found
		"_kernelrpc_mach_port_construct_trap" = "iI^{mach_port_options=}Q^I";
		// decl for _kernelrpc_mach_port_deallocate not found
		"_kernelrpc_mach_port_deallocate_trap" = "iII";
		// decl for _kernelrpc_mach_port_destroy not found
		"_kernelrpc_mach_port_destroy_trap" = "iII";
		// decl for _kernelrpc_mach_port_destruct not found
		"_kernelrpc_mach_port_destruct_trap" = "iIIiQ";
		// decl for _kernelrpc_mach_port_dnrequest_info not found
		// decl for _kernelrpc_mach_port_extract_member not found
		"_kernelrpc_mach_port_extract_member_trap" = "iIII";
		// decl for _kernelrpc_mach_port_extract_right not found
		// decl for _kernelrpc_mach_port_get_attributes not found
		"_kernelrpc_mach_port_get_attributes_trap" = "iIIi^i^I";
		// decl for _kernelrpc_mach_port_get_context not found
		// decl for _kernelrpc_mach_port_get_refs not found
		// decl for _kernelrpc_mach_port_get_set_status not found
		// decl for _kernelrpc_mach_port_get_srights not found
		// decl for _kernelrpc_mach_port_guard not found
		"_kernelrpc_mach_port_guard_trap" = "iIIQi";
		// decl for _kernelrpc_mach_port_insert_member not found
		"_kernelrpc_mach_port_insert_member_trap" = "iIII";
		// decl for _kernelrpc_mach_port_insert_right not found
		"_kernelrpc_mach_port_insert_right_trap" = "iIIII";
		// decl for _kernelrpc_mach_port_kernel_object not found
		// decl for _kernelrpc_mach_port_kobject not found
		// decl for _kernelrpc_mach_port_mod_refs not found
		"_kernelrpc_mach_port_mod_refs_trap" = "iIIIi";
		// decl for _kernelrpc_mach_port_move_member not found
		"_kernelrpc_mach_port_move_member_trap" = "iIII";
		// decl for _kernelrpc_mach_port_names not found
		// decl for _kernelrpc_mach_port_peek not found
		// decl for _kernelrpc_mach_port_rename not found
		// decl for _kernelrpc_mach_port_request_notification not found
		// decl for _kernelrpc_mach_port_set_attributes not found
		// decl for _kernelrpc_mach_port_set_context not found
		// decl for _kernelrpc_mach_port_set_mscount not found
		// decl for _kernelrpc_mach_port_set_seqno not found
		// decl for _kernelrpc_mach_port_space_basic_info not found
		// decl for _kernelrpc_mach_port_space_info not found
		// decl for _kernelrpc_mach_port_special_reply_port_reset_link not found
		// decl for _kernelrpc_mach_port_type not found
		// decl for _kernelrpc_mach_port_unguard not found
		"_kernelrpc_mach_port_unguard_trap" = "iIIQ";
		// decl for _kernelrpc_mach_vm_allocate not found
		"_kernelrpc_mach_vm_allocate_trap" = "iI^QQi";
		// decl for _kernelrpc_mach_vm_deallocate not found
		"_kernelrpc_mach_vm_deallocate_trap" = "iIQQ";
		// decl for _kernelrpc_mach_vm_map not found
		"_kernelrpc_mach_vm_map_trap" = "iI^QQQii";
		// decl for _kernelrpc_mach_vm_protect not found
		"_kernelrpc_mach_vm_protect_trap" = "iIQQii";
		// decl for _kernelrpc_mach_vm_purgable_control not found
		"_kernelrpc_mach_vm_purgable_control_trap" = "iIQi^i";
		// decl for _kernelrpc_mach_vm_read not found
		// decl for _kernelrpc_mach_vm_remap not found
		// decl for _kernelrpc_mach_voucher_extract_attr_recipe not found
		// decl for _kernelrpc_task_set_port_space not found
		// decl for _kernelrpc_thread_policy not found
		// decl for _kernelrpc_thread_policy_set not found
		// decl for _kernelrpc_thread_set_policy not found
		// decl for _kernelrpc_vm_map not found
		// decl for _kernelrpc_vm_purgable_control not found
		// decl for _kernelrpc_vm_read not found
		// decl for _kernelrpc_vm_remap not found
		// decl for _mach_errors not found
		// decl for _mach_fork_child not found
		// decl for _mach_snprintf not found
		// decl for _mach_vsnprintf not found
		// decl for _os_alloc_once_table not found
		// decl for _register_gethostuuid_callback not found
		// decl for _thread_set_tsd_base not found
		// decl for abort_with_payload not found
		// decl for abort_with_reason not found
		"accept" = "ii^{sockaddr=}^I";
		// decl for accept$NOCANCEL not found
		"access" = "i*i";
		"accessx_np" = "i^{accessx_descriptor=}Q^iI";
		"acct" = "i*";
		"act_get_state" = "iIi^I^I";
		"act_set_state" = "iIi^II";
		"adjtime" = "i^{timeval=}^{timeval=}";
		"aio_cancel" = "ii^{aiocb=}";
		"aio_error" = "i^{aiocb=}";
		"aio_fsync" = "ii^{aiocb=}";
		"aio_read" = "i^{aiocb=}";
		"aio_return" = "q^{aiocb=}";
		"aio_suspend" = "i^?i^{timespec=}";
		// decl for aio_suspend$NOCANCEL not found
		"aio_write" = "i^{aiocb=}";
		"audit" = "i^vi";
		"audit_session_join" = "iI";
		"audit_session_port" = "ii^I";
		"audit_session_self" = "I";
		"auditctl" = "i*";
		"auditon" = "ii^vi";
		"bind" = "ii^{sockaddr=}I";
		// decl for bootstrap_port not found
		// decl for cerror not found
		// decl for cerror_nocancel not found
		// decl for change_fdguard_np not found
		"chdir" = "i*";
		"chflags" = "i*I";
		"chmod" = "i*S";
		"chown" = "i*II";
		"chroot" = "i*";
		"clock_alarm" = "iIi{mach_timespec=}I";
		"clock_alarm_reply" = "iIIii{mach_timespec=}";
		"clock_get_attributes" = "iIi^i^I";
		"clock_get_time" = "iI^{mach_timespec=}";
		"clock_set_attributes" = "iIi^iI";
		"clock_set_time" = "iI{mach_timespec=}";
		"clock_sleep" = "iIi{mach_timespec=}^{mach_timespec=}";
		"clock_sleep_trap" = "iIiii^{mach_timespec=}";
		"clonefile" = "i**I";
		"clonefileat" = "ii*i*I";
		"close" = "ii";
		// decl for close$NOCANCEL not found
		// decl for coalition_create not found
		// decl for coalition_info_resource_usage not found
		// decl for coalition_info_set_efficiency not found
		// decl for coalition_info_set_name not found
		// decl for coalition_reap not found
		// decl for coalition_terminate not found
		"connect" = "ii^{sockaddr=}I";
		// decl for connect$NOCANCEL not found
		"connectx" = "ii^{sa_endpoints=}II^{iovec=}I^Q^I";
		// decl for csops not found
		// decl for csops_audittoken not found
		// decl for csr_check not found
		// decl for csr_get_active_config not found
		// decl for denap_boost_assertion_token not found
		"disconnectx" = "iiII";
		"dup" = "ii";
		"dup2" = "iii";
		// decl for errno not found
		"etap_trace_thread" = "iIi";
		// decl for exc_server not found
		// decl for exc_server_routine not found
		"exception_raise" = "iIIIi^iI";
		"exception_raise_state" = "iIi^iI^i^II^I^I";
		"exception_raise_state_identity" = "iIIIi^iI^i^II^I^I";
		"exchangedata" = "i**I";
		"execve" = "i*^?^?";
		"faccessat" = "ii*ii";
		"fchdir" = "ii";
		"fchflags" = "iiI";
		"fchmod" = "iiS";
		"fchmodat" = "ii*Si";
		"fchown" = "iiII";
		"fchownat" = "ii*IIi";
		"fclonefileat" = "iii*I";
		"fcntl" = "$fcntq"; // iii...;
		// decl for fcntl$NOCANCEL not found
		// decl for fdatasync not found
		"ffsctl" = "iiQ^vI";
		"fgetattrlist" = "ii^v^vQI";
		"fgetxattr" = "qi*^vQIi";
		"fhopen" = "i^{fhandle=}i";
		// decl for fileport_makefd not found
		// decl for fileport_makeport not found
		"flistxattr" = "qi*Qi";
		"flock" = "iii";
		"fmount" = "i*ii^v";
		"fpathconf" = "qii";
		"fremovexattr" = "ii*i";
		"fs_snapshot_create" = "ii*I";
		"fs_snapshot_delete" = "ii*I";
		"fs_snapshot_list" = "ii^{attrlist=}^vQI";
		"fs_snapshot_mount" = "ii**I";
		"fs_snapshot_rename" = "ii**I";
		"fs_snapshot_revert" = "ii*I";
		// decl for fs_snapshot_root not found
		"fsctl" = "i*Q^vI";
		"fsetattrlist" = "ii^v^vQI";
		"fsetxattr" = "ii*^vQIi";
		"fsgetpath" = "q*Q^{fsid=}Q";
		"fstat" = "ii^{stat=}";
		// decl for fstat64 not found
		"fstatat" = "ii*^{stat=}i";
		// decl for fstatat64 not found
		"fstatfs" = "ii^{statfs=}";
		// decl for fstatfs64 not found
		"fsync" = "ii";
		// decl for fsync$NOCANCEL not found
		"ftruncate" = "iiq";
		"futimens" = "ii^{timespec=}";
		"futimes" = "ii^{timeval=}";
		"getattrlist" = "i*^v^vQI";
		"getattrlistat" = "ii*^v^vQQ";
		"getattrlistbulk" = "ii^v^vQQ";
		"getaudit" = "i^{auditinfo=}";
		"getaudit_addr" = "i^{auditinfo_addr=}i";
		"getauid" = "i^I";
		"getdirentries" = "ii*i^q";
		"getdirentriesattr" = "ii^v^vQ^I^I^II";
		"getdtablesize" = "i";
		"getegid" = "I";
		// decl for getentropy not found
		"geteuid" = "I";
		"getfh" = "i*^{fhandle=}";
		"getfsstat" = "i^{statfs=}ii";
		// decl for getfsstat64 not found
		"getgid" = "I";
		"getgroups" = "ii^I";
		"gethostuuid" = "i[16C]^{timespec=}";
		"getiopolicy_np" = "iii";
		"getitimer" = "ii^{itimerval=}";
		"getpeername" = "ii^{sockaddr=}^I";
		"getpgid" = "ii";
		"getpgrp" = "i";
		"getpid" = "i";
		"getppid" = "i";
		"getpriority" = "iiI";
		"getrlimit" = "ii^{rlimit=}";
		"getrusage" = "ii^{rusage=}";
		"getsgroups_np" = "i^i[16C]";
		"getsid" = "ii";
		"getsockname" = "ii^{sockaddr=}^I";
		"getsockopt" = "iiii^v^I";
		"getuid" = "I";
		"getwgroups_np" = "i^i[16C]";
		"getxattr" = "q**^vQIi";
		// decl for grab_pgo_data not found
		// decl for guarded_close_np not found
		// decl for guarded_kqueue_np not found
		// decl for guarded_open_dprotected_np not found
		// decl for guarded_open_np not found
		// decl for guarded_pwrite_np not found
		// decl for guarded_write_np not found
		// decl for guarded_writev_np not found
		"host_check_multiuser_mode" = "iI^I";
		"host_create_mach_voucher" = "iI^CI^I";
		"host_create_mach_voucher_trap" = "iI^Ci^I";
		"host_default_memory_manager" = "iI^II";
		"host_get_UNDServer" = "iI^I";
		"host_get_atm_diagnostic_flag" = "iI^I";
		"host_get_boot_info" = "iI[4096c]";
		"host_get_clock_control" = "iIi^I";
		"host_get_clock_service" = "iIi^I";
		"host_get_exception_ports" = "iII^I^I^I^i^i";
		"host_get_io_master" = "iI^I";
		"host_get_multiuser_config_flags" = "iI^I";
		"host_get_special_port" = "iIii^I";
		"host_info" = "iIi^i^I";
		"host_kernel_version" = "iI[512c]";
		"host_lockgroup_info" = "iI^^{lockgroup_info=}^I";
		"host_page_size" = "iI^Q";
		"host_priv_statistics" = "iIi^i^I";
		"host_processor_info" = "iIi^I^^i^I";
		"host_processor_set_priv" = "iII^I";
		"host_processor_sets" = "iI^^I^I";
		"host_processors" = "iI^^I^I";
		"host_reboot" = "iIi";
		"host_register_mach_voucher_attr_manager" = "iIIQ^I^I";
		"host_register_well_known_mach_voucher_attr_manager" = "iIIQI^I";
		"host_request_notification" = "iIiI";
		"host_security_create_task_token" = "iII{?=}{?=}I^IIi^I";
		"host_security_set_task_token" = "iII{?=}{?=}I";
		// decl for host_self not found
		// decl for host_self_trap not found
		"host_set_UNDServer" = "iII";
		"host_set_atm_diagnostic_flag" = "iII";
		"host_set_exception_ports" = "iIIIii";
		"host_set_multiuser_config_flags" = "iII";
		"host_set_special_port" = "iIiI";
		"host_statistics" = "iIi^i^I";
		"host_statistics64" = "iIi^i^I";
		"host_swap_exception_ports" = "iIIIii^I^I^I^i^i";
		"host_virtual_physical_table_info" = "iI^^{hash_info_bucket=}^I";
		// decl for important_boost_assertion_token not found
		// decl for internal_catch_exc_subsystem not found
		"ioctl" = "$ioctq"; // iiQ...;
		"issetugid" = "i";
		// decl for kas_info not found
		// decl for kdebug_is_enabled not found
		// decl for kdebug_signpost not found
		// decl for kdebug_signpost_end not found
		// decl for kdebug_signpost_start not found
		// decl for kdebug_trace not found
		// decl for kdebug_trace_string not found
		// decl for kdebug_typefilter not found
		"kevent" = "ii^{kevent=}i^{kevent=}i^{timespec=}";
		"kevent64" = "ii^{kevent64_s=}i^{kevent64_s=}iI^{timespec=}";
		// decl for kevent_id not found
		// decl for kevent_qos not found
		"kext_request" = "iIIQI^Q^I^Q^I^i";
		"kill" = "iii";
		"kmod_control" = "iIii^^v^I";
		"kmod_create" = "iIQ^i";
		"kmod_destroy" = "iIi";
		"kmod_get_info" = "iI^^v^I";
		// decl for kpersona_alloc not found
		// decl for kpersona_dealloc not found
		// decl for kpersona_find not found
		// decl for kpersona_get not found
		// decl for kpersona_info not found
		// decl for kpersona_pidinfo not found
		"kqueue" = "i";
		"lchown" = "i*II";
		// decl for ledger not found
		"link" = "i**";
		"linkat" = "ii*i*i";
		"lio_listio" = "ii^?i^{sigevent=}";
		"listen" = "iii";
		"listxattr" = "q**Qi";
		"lock_acquire" = "iIi";
		"lock_handoff" = "iIi";
		"lock_handoff_accept" = "iIi";
		"lock_make_stable" = "iIi";
		"lock_release" = "iIi";
		"lock_set_create" = "iI^Iii";
		"lock_set_destroy" = "iII";
		"lock_try" = "iIi";
		"lseek" = "qiqi";
		"lstat" = "i*^{stat=}";
		// decl for lstat64 not found
		"mach_absolute_time" = "Q";
		// decl for mach_absolute_time_kernel not found
		"mach_approximate_time" = "Q";
		// decl for mach_boottime_usec not found
		"mach_continuous_approximate_time" = "Q";
		"mach_continuous_time" = "Q";
		// decl for mach_continuous_time_kernel not found
		"mach_error" = "v*i";
		// decl for mach_error_full_diag not found
		"mach_error_string" = "*i";
		"mach_error_type" = "*i";
		"mach_generate_activity_id" = "iIi^Q";
		// decl for mach_get_times not found
		"mach_host_self" = "I";
		// decl for mach_host_special_port_description not found
		// decl for mach_host_special_port_for_id not found
		// decl for mach_init not found
		"mach_make_memory_entry" = "iI^QQi^II";
		"mach_make_memory_entry_64" = "iI^QQi^II";
		"mach_memory_info" = "iI^^{mach_zone_name=}^I^^{mach_zone_info_data=}^I^^{mach_memory_info=}^I";
		"mach_memory_object_memory_entry" = "iIiQiI^I";
		"mach_memory_object_memory_entry_64" = "iIiQiI^I";
		"mach_msg" = "i^{?=}iIIIII";
		"mach_msg_destroy" = "v^{?=}";
		"mach_msg_overwrite" = "i^{?=}iIIIII^{?=}I";
		// decl for mach_msg_overwrite_trap not found
		"mach_msg_receive" = "i^{?=}";
		"mach_msg_send" = "i^{?=}";
		"mach_msg_server" = "i^?IIi";
		"mach_msg_server_importance" = "i^?IIi";
		"mach_msg_server_once" = "i^?IIi";
		// decl for mach_msg_trap not found
		// decl for mach_notify_dead_name not found
		// decl for mach_notify_no_senders not found
		// decl for mach_notify_port_deleted not found
		// decl for mach_notify_port_destroyed not found
		// decl for mach_notify_send_once not found
		"mach_port_allocate" = "iII^I";
		"mach_port_allocate_full" = "iIII^{mach_port_qos=}^I";
		"mach_port_allocate_name" = "iIII";
		"mach_port_allocate_qos" = "iII^{mach_port_qos=}^I";
		"mach_port_construct" = "iI^{mach_port_options=}Q^I";
		"mach_port_deallocate" = "iII";
		"mach_port_destroy" = "iII";
		"mach_port_destruct" = "iIIiQ";
		"mach_port_dnrequest_info" = "iII^I^I";
		"mach_port_extract_member" = "iIII";
		"mach_port_extract_right" = "iIII^I^I";
		"mach_port_get_attributes" = "iIIi^i^I";
		"mach_port_get_context" = "iII^Q";
		"mach_port_get_refs" = "iIII^I";
		"mach_port_get_set_status" = "iII^^I^I";
		"mach_port_get_srights" = "iII^I";
		"mach_port_guard" = "iIIQi";
		"mach_port_insert_member" = "iIII";
		"mach_port_insert_right" = "iIIII";
		"mach_port_kernel_object" = "iII^I^I";
		"mach_port_kobject" = "iII^I^Q";
		"mach_port_mod_refs" = "iIIIi";
		"mach_port_move_member" = "iIII";
		"mach_port_names" = "iI^^I^I^^I^I";
		"mach_port_peek" = "iIII^I^I^i*^I";
		"mach_port_rename" = "iIII";
		"mach_port_request_notification" = "iIIiIII^I";
		"mach_port_set_attributes" = "iIIi^iI";
		"mach_port_set_context" = "iIIQ";
		"mach_port_set_mscount" = "iIII";
		"mach_port_set_seqno" = "iIII";
		"mach_port_space_basic_info" = "iI^{ipc_info_space_basic=}";
		"mach_port_space_info" = "iI^{ipc_info_space=}^^{ipc_info_name=}^I^^{ipc_info_tree_name=}^I";
		"mach_port_type" = "iII^I";
		"mach_port_unguard" = "iIIQ";
		"mach_ports_lookup" = "iI^^I^I";
		"mach_ports_register" = "iI^II";
		// decl for mach_reply_port not found
		// decl for mach_right_recv_construct not found
		// decl for mach_right_recv_destruct not found
		// decl for mach_right_send_create not found
		// decl for mach_right_send_once_consume not found
		// decl for mach_right_send_once_create not found
		// decl for mach_right_send_release not found
		// decl for mach_right_send_retain not found
		// decl for mach_sync_ipc_link_monitoring_start not found
		// decl for mach_sync_ipc_link_monitoring_stop not found
		// decl for mach_task_self not found
		// decl for mach_task_self_ not found
		// decl for mach_task_special_port_description not found
		// decl for mach_task_special_port_for_id not found
		"mach_thread_self" = "I";
		"mach_timebase_info" = "i^{mach_timebase_info=}";
		// decl for mach_timebase_info_trap not found
		// decl for mach_vm_allocate not found
		// decl for mach_vm_behavior_set not found
		// decl for mach_vm_copy not found
		// decl for mach_vm_deallocate not found
		// decl for mach_vm_inherit not found
		// decl for mach_vm_machine_attribute not found
		// decl for mach_vm_map not found
		// decl for mach_vm_msync not found
		// decl for mach_vm_page_info not found
		// decl for mach_vm_page_query not found
		// decl for mach_vm_page_range_query not found
		// decl for mach_vm_protect not found
		// decl for mach_vm_purgable_control not found
		// decl for mach_vm_read not found
		// decl for mach_vm_read_list not found
		// decl for mach_vm_read_overwrite not found
		// decl for mach_vm_region not found
		// decl for mach_vm_region_recurse not found
		// decl for mach_vm_remap not found
		"mach_vm_wire" = "iIIQQi";
		// decl for mach_vm_write not found
		"mach_voucher_attr_command" = "iIII^CI^C^I";
		"mach_voucher_deallocate" = "iI";
		"mach_voucher_debug_info" = "iII^C^I";
		"mach_voucher_extract_all_attr_recipes" = "iI^C^I";
		"mach_voucher_extract_attr_content" = "iII^C^I";
		"mach_voucher_extract_attr_recipe" = "iII^C^I";
		"mach_voucher_extract_attr_recipe_trap" = "iII^C^I";
		"mach_wait_until" = "iQ";
		// decl for mach_zone_force_gc not found
		// decl for mach_zone_get_btlog_records not found
		// decl for mach_zone_get_zlog_zones not found
		"mach_zone_info" = "iI^^{mach_zone_name=}^I^^{mach_zone_info_data=}^I";
		// decl for mach_zone_info_for_largest_zone not found
		"mach_zone_info_for_zone" = "iI{mach_zone_name=}^{mach_zone_info_data=}";
		"macx_backing_store_recovery" = "ii";
		"macx_backing_store_suspend" = "ii";
		"macx_swapoff" = "iQi";
		"macx_swapon" = "iQiii";
		"macx_triggers" = "iiiiI";
		"madvise" = "i^vQi";
		// decl for memorystatus_control not found
		// decl for memorystatus_get_level not found
		"mig_allocate" = "v^QQ";
		"mig_dealloc_reply_port" = "vI";
		// decl for mig_dealloc_special_reply_port not found
		"mig_deallocate" = "vQQ";
		"mig_get_reply_port" = "I";
		// decl for mig_get_special_reply_port not found
		"mig_put_reply_port" = "vI";
		"mig_reply_setup" = "v^{?=}^{?=}";
		"mig_strncpy" = "i**i";
		"mig_strncpy_zerofill" = "i**i";
		"mincore" = "i^vQ*";
		"minherit" = "i^vQi";
		// decl for mk_timer_arm not found
		// decl for mk_timer_arm_leeway not found
		// decl for mk_timer_cancel not found
		// decl for mk_timer_create not found
		// decl for mk_timer_destroy not found
		"mkdir" = "i*S";
		"mkdirat" = "ii*S";
		"mkfifo" = "i*S";
		"mknod" = "i*Si";
		"mlock" = "i^vQ";
		"mlockall" = "ii";
		"mmap" = "^v^vQiiiq";
		// decl for modwatch not found
		"mount" = "i**i^v";
		"mprotect" = "i^vQi";
		// decl for mremap_encrypted not found
		// decl for msg_receive not found
		// decl for msg_rpc not found
		// decl for msg_send not found
		"msgctl" = "iii^{__msqid_ds_new=}";
		"msgget" = "iii";
		"msgrcv" = "qi^vQqi";
		// decl for msgrcv$NOCANCEL not found
		"msgsnd" = "ii^vQi";
		// decl for msgsnd$NOCANCEL not found
		"msgsys" = "$msgsys"; // ii...;
		"msync" = "i^vQi";
		// decl for msync$NOCANCEL not found
		"munlock" = "i^vQ";
		"munlockall" = "i";
		"munmap" = "i^vQ";
		// decl for necp_client_action not found
		// decl for necp_match_policy not found
		// decl for necp_open not found
		// decl for necp_session_action not found
		// decl for necp_session_open not found
		// decl for net_qos_guideline not found
		// decl for netagent_trigger not found
		// decl for netname_check_in not found
		// decl for netname_check_out not found
		// decl for netname_look_up not found
		// decl for netname_version not found
		// decl for nfsclnt not found
		"nfssvc" = "ii^v";
		// decl for non_boost_assertion_token not found
		// decl for normal_boost_assertion_token not found
		"ntp_adjtime" = "i^{timex=}";
		"ntp_gettime" = "i^{ntptimeval=}";
		"open" = "i*i"; // i*i...; FIXME: extra args
		// decl for open$NOCANCEL not found
		"open_dprotected_np" = "i*iii"; // i*iii...; FIXME: extra args
		"openat" = "ii*i"; // ii*i...; FIXME: extra args
		// decl for openat$NOCANCEL not found
		// decl for openbyid_np not found
		// decl for os_buflet_get_data_length not found
		// decl for os_buflet_get_data_limit not found
		// decl for os_buflet_get_data_offset not found
		// decl for os_buflet_get_object_address not found
		// decl for os_buflet_set_data_length not found
		// decl for os_buflet_set_data_offset not found
		// decl for os_channel_advance_slot not found
		// decl for os_channel_attr_clone not found
		// decl for os_channel_attr_create not found
		// decl for os_channel_attr_destroy not found
		// decl for os_channel_attr_get not found
		// decl for os_channel_attr_get_key not found
		// decl for os_channel_attr_set not found
		// decl for os_channel_attr_set_key not found
		// decl for os_channel_available_slot_count not found
		// decl for os_channel_create not found
		// decl for os_channel_create_extended not found
		// decl for os_channel_destroy not found
		// decl for os_channel_flow_admissible not found
		// decl for os_channel_get_advisory_region not found
		// decl for os_channel_get_fd not found
		// decl for os_channel_get_next_slot not found
		// decl for os_channel_get_stats_region not found
		// decl for os_channel_is_defunct not found
		// decl for os_channel_packet_alloc not found
		// decl for os_channel_packet_free not found
		// decl for os_channel_packet_pool_purge not found
		// decl for os_channel_pending not found
		// decl for os_channel_read_attr not found
		// decl for os_channel_read_nexus_extension_info not found
		// decl for os_channel_ring_id not found
		// decl for os_channel_ring_notify_time not found
		// decl for os_channel_ring_sync_time not found
		// decl for os_channel_rx_ring not found
		// decl for os_channel_set_slot_properties not found
		// decl for os_channel_slot_attach_packet not found
		// decl for os_channel_slot_detach_packet not found
		// decl for os_channel_slot_get_packet not found
		// decl for os_channel_sync not found
		// decl for os_channel_tx_ring not found
		// decl for os_channel_write_attr not found
		// decl for os_copy_and_inet_checksum not found
		// decl for os_cpu_copy_in_cksum not found
		// decl for os_cpu_in_cksum not found
		// decl for os_cpu_in_cksum_mbuf not found
		// decl for os_fault_with_payload not found
		// decl for os_inet_checksum not found
		// decl for os_nexus_attr_clone not found
		// decl for os_nexus_attr_create not found
		// decl for os_nexus_attr_destroy not found
		// decl for os_nexus_attr_get not found
		// decl for os_nexus_attr_set not found
		// decl for os_nexus_controller_alloc_provider_instance not found
		// decl for os_nexus_controller_bind_provider_instance not found
		// decl for os_nexus_controller_create not found
		// decl for os_nexus_controller_deregister_provider not found
		// decl for os_nexus_controller_destroy not found
		// decl for os_nexus_controller_free_provider_instance not found
		// decl for os_nexus_controller_get_fd not found
		// decl for os_nexus_controller_read_provider_attr not found
		// decl for os_nexus_controller_register_provider not found
		// decl for os_nexus_controller_unbind_provider_instance not found
		// decl for os_packet_clear_flow_uuid not found
		// decl for os_packet_finalize not found
		// decl for os_packet_get_buflet_count not found
		// decl for os_packet_get_data_length not found
		// decl for os_packet_get_flow_uuid not found
		// decl for os_packet_get_inet_checksum not found
		// decl for os_packet_get_link_broadcast not found
		// decl for os_packet_get_link_ethfcs not found
		// decl for os_packet_get_link_header_offset not found
		// decl for os_packet_get_link_multicast not found
		// decl for os_packet_get_network_header_offset not found
		// decl for os_packet_get_next_buflet not found
		// decl for os_packet_get_service_class not found
		// decl for os_packet_get_traffic_class not found
		// decl for os_packet_get_transport_header_offset not found
		// decl for os_packet_get_transport_retransmit not found
		// decl for os_packet_get_transport_traffic_background not found
		// decl for os_packet_get_transport_traffic_realtime not found
		// decl for os_packet_set_flow_uuid not found
		// decl for os_packet_set_inet_checksum not found
		// decl for os_packet_set_link_broadcast not found
		// decl for os_packet_set_link_ethfcs not found
		// decl for os_packet_set_link_header_offset not found
		// decl for os_packet_set_link_multicast not found
		// decl for os_packet_set_network_header_offset not found
		// decl for os_packet_set_service_class not found
		// decl for os_packet_set_traffic_class not found
		// decl for os_packet_set_transport_header_offset not found
		// decl for os_packet_set_transport_last_packet not found
		// decl for os_packet_set_transport_retransmit not found
		// decl for os_packet_set_transport_traffic_background not found
		// decl for os_packet_set_transport_traffic_realtime not found
		"panic" = "$panic"; // v*...;
		"panic_init" = "vI";
		"pathconf" = "q*i";
		// decl for peeloff not found
		"pid_for_task" = "iI^i";
		// decl for pid_hibernate not found
		// decl for pid_resume not found
		// decl for pid_shutdown_networking not found
		// decl for pid_shutdown_sockets not found
		// decl for pid_suspend not found
		"pipe" = "i^i";
		// decl for pkt_subtype_assert_fail not found
		// decl for pkt_type_assert_fail not found
		// decl for poll not found
		// decl for poll$NOCANCEL not found
		"port_obj_init" = "vi";
		// decl for port_obj_table not found
		// decl for port_obj_table_size not found
		"posix_madvise" = "i^vQi";
		"posix_spawn" = "i^i*^^v^^v^?^?";
		"posix_spawn_file_actions_addclose" = "i^^vi";
		"posix_spawn_file_actions_adddup2" = "i^^vii";
		"posix_spawn_file_actions_addinherit_np" = "i^^vi";
		"posix_spawn_file_actions_addopen" = "i^^vi*iS";
		"posix_spawn_file_actions_destroy" = "i^^v";
		"posix_spawn_file_actions_init" = "i^^v";
		"posix_spawnattr_destroy" = "i^^v";
		// decl for posix_spawnattr_get_darwin_role_np not found
		// decl for posix_spawnattr_get_qos_clamp_np not found
		"posix_spawnattr_getbinpref_np" = "i^^vQ^i^Q";
		// decl for posix_spawnattr_getcpumonitor not found
		"posix_spawnattr_getflags" = "i^^v^s";
		// decl for posix_spawnattr_getmacpolicyinfo_np not found
		// decl for posix_spawnattr_getpcontrol_np not found
		"posix_spawnattr_getpgroup" = "i^^v^i";
		// decl for posix_spawnattr_getprocesstype_np not found
		"posix_spawnattr_getsigdefault" = "i^^v^I";
		"posix_spawnattr_getsigmask" = "i^^v^I";
		"posix_spawnattr_init" = "i^^v";
		// decl for posix_spawnattr_set_darwin_role_np not found
		// decl for posix_spawnattr_set_importancewatch_port_np not found
		// decl for posix_spawnattr_set_max_addr_np not found
		// decl for posix_spawnattr_set_persona_gid_np not found
		// decl for posix_spawnattr_set_persona_groups_np not found
		// decl for posix_spawnattr_set_persona_np not found
		// decl for posix_spawnattr_set_persona_uid_np not found
		// decl for posix_spawnattr_set_qos_clamp_np not found
		// decl for posix_spawnattr_set_threadlimit_ext not found
		"posix_spawnattr_setauditsessionport_np" = "i^^vI";
		"posix_spawnattr_setbinpref_np" = "i^^vQ^i^Q";
		// decl for posix_spawnattr_setcoalition_np not found
		// decl for posix_spawnattr_setcpumonitor not found
		// decl for posix_spawnattr_setcpumonitor_default not found
		"posix_spawnattr_setexceptionports_np" = "i^^vIIii";
		"posix_spawnattr_setflags" = "i^^vs";
		// decl for posix_spawnattr_setjetsam not found
		// decl for posix_spawnattr_setjetsam_ext not found
		// decl for posix_spawnattr_setmacpolicyinfo_np not found
		// decl for posix_spawnattr_setpcontrol_np not found
		"posix_spawnattr_setpgroup" = "i^^vi";
		// decl for posix_spawnattr_setprocesstype_np not found
		"posix_spawnattr_setsigdefault" = "i^^v^I";
		"posix_spawnattr_setsigmask" = "i^^v^I";
		"posix_spawnattr_setspecialport_np" = "i^^vIi";
		"pread" = "qi^vQq";
		// decl for pread$NOCANCEL not found
		// decl for proc_appstate not found
		// decl for proc_can_use_foreground_hw not found
		// decl for proc_clear_cpulimits not found
		// decl for proc_clear_dirty not found
		// decl for proc_denap_assertion_begin_with_msg not found
		// decl for proc_denap_assertion_complete not found
		// decl for proc_devstatusnotify not found
		// decl for proc_disable_cpumon not found
		// decl for proc_disable_wakemon not found
		// decl for proc_donate_importance_boost not found
		// decl for proc_get_cpumon_params not found
		// decl for proc_get_dirty not found
		// decl for proc_get_wakemon_params not found
		// decl for proc_importance_assertion_begin_with_msg not found
		// decl for proc_importance_assertion_complete not found
		// decl for proc_kmsgbuf not found
		// decl for proc_libversion not found
		// decl for proc_list_dynkqueueids not found
		// decl for proc_list_uptrs not found
		// decl for proc_listallpids not found
		// decl for proc_listchildpids not found
		// decl for proc_listcoalitions not found
		// decl for proc_listpgrppids not found
		// decl for proc_listpids not found
		// decl for proc_listpidspath not found
		// decl for proc_name not found
		// decl for proc_pid_rusage not found
		// decl for proc_pidbind not found
		// decl for proc_piddynkqueueinfo not found
		// decl for proc_pidfdinfo not found
		// decl for proc_pidfileportinfo not found
		// decl for proc_pidinfo not found
		// decl for proc_pidoriginatorinfo not found
		// decl for proc_pidpath not found
		// decl for proc_regionfilename not found
		// decl for proc_reset_footprint_interval not found
		// decl for proc_resume_cpumon not found
		// decl for proc_rlimit_control not found
		// decl for proc_set_cpumon_defaults not found
		// decl for proc_set_cpumon_params not found
		// decl for proc_set_cpumon_params_fatal not found
		// decl for proc_set_dirty not found
		// decl for proc_set_wakemon_defaults not found
		// decl for proc_set_wakemon_params not found
		// decl for proc_setappstate not found
		// decl for proc_setcpu_deadline not found
		// decl for proc_setcpu_percentage not found
		// decl for proc_setcpu_percentage_withdeadline not found
		// decl for proc_setpcontrol not found
		// decl for proc_setthread_cpupercent not found
		// decl for proc_terminate not found
		// decl for proc_trace_log not found
		// decl for proc_track_dirty not found
		// decl for proc_udata_info not found
		// decl for proc_uuid_policy not found
		"processor_assign" = "iIIi";
		"processor_control" = "iI^iI";
		"processor_exit" = "iI";
		"processor_get_assignment" = "iI^I";
		"processor_info" = "iIi^I^i^I";
		"processor_set_create" = "iI^I^I";
		"processor_set_default" = "iI^I";
		"processor_set_destroy" = "iI";
		"processor_set_info" = "iIi^I^i^I";
		"processor_set_max_priority" = "iIii";
		"processor_set_policy_control" = "iIi^iIi";
		"processor_set_policy_disable" = "iIii";
		"processor_set_policy_enable" = "iIi";
		"processor_set_stack_usage" = "iI^I^Q^Q^Q^Q";
		"processor_set_statistics" = "iIi^i^I";
		"processor_set_tasks" = "iI^^I^I";
		"processor_set_threads" = "iI^^I^I";
		"processor_start" = "iI";
		"pselect" = "ii^{fd_set=}^{fd_set=}^{fd_set=}^{timespec=}^I";
		// decl for pselect$DARWIN_EXTSN not found
		// decl for pselect$DARWIN_EXTSN$NOCANCEL not found
		// decl for pselect$NOCANCEL not found
		"pthread_getugid_np" = "i^I^I";
		"pthread_setugid_np" = "iII";
		// decl for ptrace not found
		"pwrite" = "qi^vQq";
		// decl for pwrite$NOCANCEL not found
		"quotactl" = "i*ii*";
		"read" = "qi^vQ";
		// decl for read$NOCANCEL not found
		"readlink" = "q**Q";
		"readlinkat" = "qi**Q";
		"readv" = "qi^{iovec=}i";
		// decl for readv$NOCANCEL not found
		"reboot" = "ii";
		// decl for reboot_np not found
		"recvfrom" = "qi^vQi^{sockaddr=}^I";
		// decl for recvfrom$NOCANCEL not found
		"recvmsg" = "qi^{msghdr=}i";
		// decl for recvmsg$NOCANCEL not found
		// decl for recvmsg_x not found
		"removexattr" = "i**i";
		"rename" = "i**";
		// decl for rename_ext not found
		"renameat" = "ii*i*";
		"renameatx_np" = "ii*i*I";
		"renamex_np" = "i**I";
		"revoke" = "i*";
		"rmdir" = "i*";
		"searchfs" = "i*^{fssearchblock=}^QII^{searchstate=}";
		"select" = "ii^{fd_set=}^{fd_set=}^{fd_set=}^{timeval=}";
		// decl for select$DARWIN_EXTSN not found
		// decl for select$DARWIN_EXTSN$NOCANCEL not found
		// decl for select$NOCANCEL not found
		"sem_close" = "i^i";
		"sem_destroy" = "i^i";
		"sem_getvalue" = "i^i^i";
		"sem_init" = "i^iiI";
		"sem_open" = "$sem_open"; // ^i*i...;
		"sem_post" = "i^i";
		"sem_trywait" = "i^i";
		"sem_unlink" = "i*";
		"sem_wait" = "i^i";
		// decl for sem_wait$NOCANCEL not found
		"semaphore_create" = "iI^Iii";
		"semaphore_destroy" = "iII";
		"semaphore_signal" = "iI";
		"semaphore_signal_all" = "iI";
		// decl for semaphore_signal_all_trap not found
		"semaphore_signal_thread" = "iII";
		// decl for semaphore_signal_thread_trap not found
		// decl for semaphore_signal_trap not found
		"semaphore_timedwait" = "iI{mach_timespec=}";
		"semaphore_timedwait_signal" = "iII{mach_timespec=}";
		// decl for semaphore_timedwait_signal_trap not found
		// decl for semaphore_timedwait_trap not found
		"semaphore_wait" = "iI";
		"semaphore_wait_signal" = "iII";
		// decl for semaphore_wait_signal_trap not found
		// decl for semaphore_wait_trap not found
		"semctl" = "$semctq"; // iiii...;
		"semget" = "iiii";
		"semop" = "ii^{sembuf=}Q";
		"semsys" = "$semsys"; // ii...;
		"sendfile" = "iiiq^q^{sf_hdtr=}i";
		"sendmsg" = "qi^{msghdr=}i";
		// decl for sendmsg$NOCANCEL not found
		// decl for sendmsg_x not found
		"sendto" = "qi^vQi^{sockaddr=}I";
		// decl for sendto$NOCANCEL not found
		"setattrlist" = "i*^v^vQI";
		"setattrlistat" = "ii*^v^vQI";
		"setaudit" = "i^{auditinfo=}";
		"setaudit_addr" = "i^{auditinfo_addr=}i";
		"setauid" = "i^I";
		"setegid" = "iI";
		"seteuid" = "iI";
		"setgid" = "iI";
		"setgroups" = "ii^I";
		"setiopolicy_np" = "iiii";
		"setitimer" = "ii^{itimerval=}^{itimerval=}";
		"setpgid" = "iii";
		"setpriority" = "iiIi";
		// decl for setprivexec not found
		"setregid" = "iII";
		"setreuid" = "iII";
		"setrlimit" = "ii^{rlimit=}";
		"setsgroups_np" = "ii[16C]";
		"setsid" = "i";
		"setsockopt" = "iiii^vI";
		"setuid" = "iI";
		"setwgroups_np" = "ii[16C]";
		"setxattr" = "i**^vQIi";
		// decl for sfi_get_class_offtime not found
		// decl for sfi_process_get_flags not found
		// decl for sfi_process_set_flags not found
		// decl for sfi_set_class_offtime not found
		"shm_open" = "$shm_open"; // i*i...;
		"shm_unlink" = "i*";
		"shmat" = "^vi^vi";
		"shmctl" = "iii^{__shmid_ds_new=}";
		"shmdt" = "i^v";
		"shmget" = "iiQi";
		"shmsys" = "$shmsys"; // ii...;
		"shutdown" = "iii";
		"sigpending" = "i^I";
		"sigprocmask" = "ii^I^I";
		"sigsuspend" = "i^I";
		// decl for sigsuspend$NOCANCEL not found
		"socket" = "iiii";
		// decl for socket_delegate not found
		"socketpair" = "iiii^i";
		// decl for stackshot_capture_with_config not found
		// decl for stackshot_config_create not found
		// decl for stackshot_config_dealloc not found
		// decl for stackshot_config_dealloc_buffer not found
		// decl for stackshot_config_get_stackshot_buffer not found
		// decl for stackshot_config_get_stackshot_size not found
		// decl for stackshot_config_set_delta_timestamp not found
		// decl for stackshot_config_set_flags not found
		// decl for stackshot_config_set_pid not found
		// decl for stackshot_config_set_size_hint not found
		"stat" = "i*^{stat=}";
		// decl for stat64 not found
		"statfs" = "i*^{statfs=}";
		// decl for statfs64 not found
		"swapon" = "i*";
		"swtch" = "i";
		"swtch_pri" = "ii";
		"symlink" = "i**";
		"symlinkat" = "i*i*";
		"sync" = "v";
		"syscall" = "$syscalq"; // ii...;
		// decl for syscall_thread_switch not found
		// decl for system_get_sfi_window not found
		// decl for system_override not found
		// decl for system_set_sfi_window not found
		"task_assign" = "iIIi";
		"task_assign_default" = "iIi";
		"task_create" = "iI^IIi^I";
		"task_for_pid" = "iIi^I";
		"task_generate_corpse" = "iI^I";
		"task_get_assignment" = "iI^I";
		"task_get_dyld_image_infos" = "iI^^{dyld_kernel_image_info=}^I";
		"task_get_emulation_vector" = "iI^i^^Q^I";
		"task_get_exception_ports" = "iII^I^I^I^i^i";
		"task_get_mach_voucher" = "iII^I";
		"task_get_special_port" = "iIi^I";
		"task_get_state" = "iIi^I^I";
		"task_info" = "iII^i^I";
		"task_inspect" = "iII^i^I";
		"task_map_corpse_info" = "iII^Q^I";
		"task_map_corpse_info_64" = "iII^Q^Q";
		"task_name_for_pid" = "iIi^I";
		"task_policy" = "iIi^iIii";
		"task_policy_get" = "iII^i^I^i";
		"task_policy_set" = "iII^iI";
		"task_purgable_info" = "iI^{vm_purgeable_info=}";
		"task_register_dyld_get_process_state" = "iI^{dyld_kernel_process_info=}";
		"task_register_dyld_image_infos" = "iI^{dyld_kernel_image_info=}I";
		"task_register_dyld_set_dyld_state" = "iIC";
		"task_register_dyld_shared_cache_image_info" = "iI{dyld_kernel_image_info=}ii";
		"task_resume" = "iI";
		"task_resume2" = "iI";
		"task_sample" = "iII";
		// decl for task_self_ not found
		"task_self_trap" = "I";
		"task_set_emulation" = "iIQi";
		"task_set_emulation_vector" = "iIi^QI";
		"task_set_exception_ports" = "iIIIii";
		"task_set_info" = "iII^iI";
		"task_set_mach_voucher" = "iII";
		"task_set_phys_footprint_limit" = "iIi^i";
		"task_set_policy" = "iIIi^iI^iIi";
		"task_set_port_space" = "iIi";
		"task_set_ras_pc" = "iIQQ";
		"task_set_special_port" = "iIiI";
		"task_set_state" = "iIi^II";
		"task_suspend" = "iI";
		"task_suspend2" = "iI^I";
		"task_swap_exception_ports" = "iIIIii^I^I^I^i^i";
		"task_swap_mach_voucher" = "iII^I";
		"task_terminate" = "iI";
		"task_threads" = "iI^^I^I";
		"task_unregister_dyld_image_infos" = "iI^{dyld_kernel_image_info=}I";
		"task_zone_info" = "iI^^{mach_zone_name=}^I^^{task_zone_info_data=}^I";
		// decl for terminate_with_payload not found
		// decl for terminate_with_reason not found
		"thread_abort" = "iI";
		"thread_abort_safely" = "iI";
		"thread_assign" = "iII";
		"thread_assign_default" = "iI";
		"thread_create" = "iI^I";
		"thread_create_running" = "iIi^II^I";
		"thread_depress_abort" = "iI";
		// decl for thread_destruct_special_reply_port not found
		"thread_get_assignment" = "iI^I";
		"thread_get_exception_ports" = "iII^I^I^I^i^i";
		"thread_get_mach_voucher" = "iII^I";
		// decl for thread_get_register_pointer_values not found
		"thread_get_special_port" = "iIi^I";
		// decl for thread_get_special_reply_port not found
		"thread_get_state" = "iIi^I^I";
		"thread_info" = "iII^i^I";
		"thread_policy" = "iIi^iIi";
		"thread_policy_get" = "iII^i^I^i";
		"thread_policy_set" = "iII^iI";
		"thread_resume" = "iI";
		"thread_sample" = "iII";
		// decl for thread_self_trap not found
		// decl for thread_selfcounts not found
		"thread_set_exception_ports" = "iIIIii";
		"thread_set_mach_voucher" = "iII";
		"thread_set_policy" = "iIIi^iI^iI";
		"thread_set_special_port" = "iIiI";
		"thread_set_state" = "iIi^II";
		"thread_suspend" = "iI";
		"thread_swap_exception_ports" = "iIIIii^I^I^I^i^i";
		"thread_swap_mach_voucher" = "iII^I";
		"thread_switch" = "iIiI";
		"thread_terminate" = "iI";
		"thread_wire" = "iIIi";
		"truncate" = "i*q";
		"umask" = "SS";
		"undelete" = "i*";
		"unlink" = "i*";
		"unlinkat" = "ii*i";
		"unmount" = "i*i";
		// decl for usrctl not found
		"utimensat" = "ii*^{timespec=}i";
		"utimes" = "i*^{timeval=}";
		"vfork" = "i";
		// decl for vfs_purge not found
		"vm_allocate" = "iI^QQi";
		"vm_allocate_cpm" = "iII^QQi";
		"vm_behavior_set" = "iIQQi";
		"vm_copy" = "iIQQQ";
		"vm_deallocate" = "iIQQ";
		"vm_inherit" = "iIQQI";
		// decl for vm_kernel_page_mask not found
		// decl for vm_kernel_page_shift not found
		// decl for vm_kernel_page_size not found
		"vm_machine_attribute" = "iIQQI^i";
		"vm_map" = "iI^QQQiIQiiiI";
		"vm_map_page_query" = "iIQ^i^i";
		"vm_msync" = "iIQQI";
		// decl for vm_page_mask not found
		// decl for vm_page_shift not found
		// decl for vm_page_size not found
		// decl for vm_pressure_monitor not found
		"vm_protect" = "iIQQii";
		"vm_purgable_control" = "iIQi^i";
		"vm_read" = "iIQQ^Q^I";
		"vm_read_list" = "iI[256{vm_read_entry=}]I";
		"vm_read_overwrite" = "iIQQQ^Q";
		"vm_region_64" = "iI^Q^Qi^i^I^I";
		"vm_region_recurse_64" = "iI^Q^Q^I^i^I";
		"vm_remap" = "iI^QQQiIQi^i^iI";
		"vm_wire" = "iIIQQi";
		"vm_write" = "iIQQI";
		"voucher_mach_msg_adopt" = "^{voucher_mach_msg_state_s=}^{?=}";
		"voucher_mach_msg_clear" = "v^{?=}";
		"voucher_mach_msg_revert" = "v^{voucher_mach_msg_state_s=}";
		"voucher_mach_msg_set" = "i^{?=}";
		// decl for vprintf_stderr_func not found
		"wait4" = "ii^ii^{rusage=}";
		// decl for waitevent not found
		"waitid" = "iiI^{__siginfo=}i";
		// decl for waitid$NOCANCEL not found
		// decl for watchevent not found
		// decl for work_interval_copy_port not found
		// decl for work_interval_create not found
		// decl for work_interval_destroy not found
		// decl for work_interval_instance_alloc not found
		// decl for work_interval_instance_clear not found
		// decl for work_interval_instance_finish not found
		// decl for work_interval_instance_free not found
		// decl for work_interval_instance_get_complexity not found
		// decl for work_interval_instance_get_deadline not found
		// decl for work_interval_instance_get_finish not found
		// decl for work_interval_instance_get_id not found
		// decl for work_interval_instance_get_start not found
		// decl for work_interval_instance_set_complexity not found
		// decl for work_interval_instance_set_deadline not found
		// decl for work_interval_instance_set_finish not found
		// decl for work_interval_instance_set_start not found
		// decl for work_interval_instance_start not found
		// decl for work_interval_instance_update not found
		// decl for work_interval_join not found
		// decl for work_interval_join_port not found
		// decl for work_interval_leave not found
		// decl for work_interval_notify not found
		// decl for work_interval_notify_simple not found
		"write" = "qi^vQ";
		// decl for write$NOCANCEL not found
		"writev" = "qi^{iovec=}i";
		// decl for writev$NOCANCEL not found
		// decl for _FE_DFL_DISABLE_DENORMS_ENV not found
		// decl for _FE_DFL_ENV not found
		// decl for __Libm_version not found
		// decl for __cos_d2 not found
		// decl for __cos_f4 not found
		"__cospi" = "dd";
		"__cospif" = "ff";
		"__exp10" = "dd";
		"__exp10f" = "ff";
		// decl for __fegetfltrounds not found
		"__fpclassifyd" = "id";
		"__fpclassifyf" = "if";
		"__fpclassifyl" = "iD";
		"__inline_isfinited" = "id";
		"__inline_isfinitef" = "if";
		"__inline_isfinitel" = "iD";
		"__inline_isinfd" = "id";
		"__inline_isinff" = "if";
		"__inline_isinfl" = "iD";
		"__inline_isnand" = "id";
		"__inline_isnanf" = "if";
		"__inline_isnanl" = "iD";
		"__inline_isnormald" = "id";
		"__inline_isnormalf" = "if";
		"__inline_isnormall" = "iD";
		"__inline_signbitd" = "id";
		"__inline_signbitf" = "if";
		"__inline_signbitl" = "iD";
		// decl for __invert_d2 not found
		// decl for __invert_d3 not found
		// decl for __invert_d4 not found
		// decl for __invert_f2 not found
		// decl for __invert_f3 not found
		// decl for __invert_f4 not found
		// decl for __isfinited not found
		// decl for __isfinitef not found
		// decl for __isfinitel not found
		// decl for __isinfd not found
		// decl for __isinff not found
		// decl for __isinfl not found
		// decl for __isnand not found
		// decl for __isnanf not found
		// decl for __isnanl not found
		// decl for __isnormald not found
		// decl for __isnormalf not found
		// decl for __isnormall not found
		"__math_errhandling" = "i";
		// decl for __signbitd not found
		// decl for __signbitf not found
		// decl for __signbitl not found
		// decl for __sin_d2 not found
		// decl for __sin_f4 not found
		"__sincos" = "vd^d^d";
		"__sincos_stret" = "{__double2=}d";
		"__sincosf" = "vf^f^f";
		"__sincosf_stret" = "{__float2=}f";
		"__sincospi" = "vd^d^d";
		"__sincospi_stret" = "{__double2=}d";
		"__sincospif" = "vf^f^f";
		"__sincospif_stret" = "{__float2=}f";
		"__sinpi" = "dd";
		"__sinpif" = "ff";
		"__tanpi" = "dd";
		"__tanpif" = "ff";
		// decl for _simd_acos_d2 not found
		// decl for _simd_acos_f4 not found
		// decl for _simd_acosh_d2 not found
		// decl for _simd_acosh_f4 not found
		// decl for _simd_asin_d2 not found
		// decl for _simd_asin_f4 not found
		// decl for _simd_asinh_d2 not found
		// decl for _simd_asinh_f4 not found
		// decl for _simd_atan2_d2 not found
		// decl for _simd_atan2_f4 not found
		// decl for _simd_atan_d2 not found
		// decl for _simd_atan_f4 not found
		// decl for _simd_atanh_d2 not found
		// decl for _simd_atanh_f4 not found
		// decl for _simd_cbrt_d2 not found
		// decl for _simd_cbrt_f4 not found
		// decl for _simd_cos_d2 not found
		// decl for _simd_cos_f4 not found
		// decl for _simd_cosh_d2 not found
		// decl for _simd_cosh_f4 not found
		// decl for _simd_cospi_d2 not found
		// decl for _simd_cospi_f4 not found
		// decl for _simd_erf_d2 not found
		// decl for _simd_erf_f4 not found
		// decl for _simd_erfc_d2 not found
		// decl for _simd_erfc_f4 not found
		// decl for _simd_exp10_d2 not found
		// decl for _simd_exp10_f4 not found
		// decl for _simd_exp2_d2 not found
		// decl for _simd_exp2_f4 not found
		// decl for _simd_exp_d2 not found
		// decl for _simd_exp_f4 not found
		// decl for _simd_expm1_d2 not found
		// decl for _simd_expm1_f4 not found
		// decl for _simd_fma_d2 not found
		// decl for _simd_fma_f4 not found
		// decl for _simd_fmod_d2 not found
		// decl for _simd_fmod_f4 not found
		// decl for _simd_hypot_d2 not found
		// decl for _simd_hypot_f4 not found
		// decl for _simd_incircle_pd2 not found
		// decl for _simd_incircle_pf2 not found
		// decl for _simd_insphere_pd3 not found
		// decl for _simd_insphere_pf3 not found
		// decl for _simd_log10_d2 not found
		// decl for _simd_log10_f4 not found
		// decl for _simd_log1p_d2 not found
		// decl for _simd_log1p_f4 not found
		// decl for _simd_log2_d2 not found
		// decl for _simd_log2_f4 not found
		// decl for _simd_log_d2 not found
		// decl for _simd_log_f4 not found
		// decl for _simd_nextafter_d2 not found
		// decl for _simd_nextafter_f4 not found
		// decl for _simd_orient_pd2 not found
		// decl for _simd_orient_pd3 not found
		// decl for _simd_orient_pf2 not found
		// decl for _simd_orient_pf3 not found
		// decl for _simd_orient_vd2 not found
		// decl for _simd_orient_vd3 not found
		// decl for _simd_orient_vf2 not found
		// decl for _simd_orient_vf3 not found
		// decl for _simd_pow_d2 not found
		// decl for _simd_pow_f4 not found
		// decl for _simd_remainder_d2 not found
		// decl for _simd_remainder_f4 not found
		// decl for _simd_round_d2 not found
		// decl for _simd_round_f4 not found
		// decl for _simd_sin_d2 not found
		// decl for _simd_sin_f4 not found
		// decl for _simd_sinh_d2 not found
		// decl for _simd_sinh_f4 not found
		// decl for _simd_sinpi_d2 not found
		// decl for _simd_sinpi_f4 not found
		// decl for _simd_tan_d2 not found
		// decl for _simd_tan_f4 not found
		// decl for _simd_tanh_d2 not found
		// decl for _simd_tanh_f4 not found
		// decl for _simd_tanpi_d2 not found
		// decl for _simd_tanpi_f4 not found
		// decl for _simd_tgamma_d2 not found
		// decl for _simd_tgamma_f4 not found
		"acos" = "dd";
		"acosf" = "ff";
		"acosh" = "dd";
		"acoshf" = "ff";
		"acoshl" = "DD";
		"acosl" = "DD";
		"asin" = "dd";
		"asinf" = "ff";
		"asinh" = "dd";
		"asinhf" = "ff";
		"asinhl" = "DD";
		"asinl" = "DD";
		"atan" = "dd";
		"atan2" = "ddd";
		"atan2f" = "fff";
		"atan2l" = "DDD";
		"atanf" = "ff";
		"atanh" = "dd";
		"atanhf" = "ff";
		"atanhl" = "DD";
		"atanl" = "DD";
		// decl for cabs not found
		// decl for cabsf not found
		// decl for cabsl not found
		// decl for cacos not found
		// decl for cacosf not found
		// decl for cacosh not found
		// decl for cacoshf not found
		// decl for cacoshl not found
		// decl for cacosl not found
		// decl for carg not found
		// decl for cargf not found
		// decl for cargl not found
		// decl for casin not found
		// decl for casinf not found
		// decl for casinh not found
		// decl for casinhf not found
		// decl for casinhl not found
		// decl for casinl not found
		// decl for catan not found
		// decl for catanf not found
		// decl for catanh not found
		// decl for catanhf not found
		// decl for catanhl not found
		// decl for catanl not found
		"cbrt" = "dd";
		"cbrtf" = "ff";
		"cbrtl" = "DD";
		// decl for ccos not found
		// decl for ccosf not found
		// decl for ccosh not found
		// decl for ccoshf not found
		// decl for ccoshl not found
		// decl for ccosl not found
		"ceil" = "dd";
		"ceilf" = "ff";
		"ceill" = "DD";
		// decl for cexp not found
		// decl for cexpf not found
		// decl for cexpl not found
		// decl for cimag not found
		// decl for cimagf not found
		// decl for cimagl not found
		// decl for clog not found
		// decl for clogf not found
		// decl for clogl not found
		// decl for conj not found
		// decl for conjf not found
		// decl for conjl not found
		"copysign" = "ddd";
		"copysignf" = "fff";
		"copysignl" = "DDD";
		"cos" = "dd";
		"cosf" = "ff";
		"cosh" = "dd";
		"coshf" = "ff";
		"coshl" = "DD";
		"cosl" = "DD";
		// decl for cpow not found
		// decl for cpowf not found
		// decl for cpowl not found
		// decl for cproj not found
		// decl for cprojf not found
		// decl for cprojl not found
		// decl for creal not found
		// decl for crealf not found
		// decl for creall not found
		// decl for csin not found
		// decl for csinf not found
		// decl for csinh not found
		// decl for csinhf not found
		// decl for csinhl not found
		// decl for csinl not found
		// decl for csqrt not found
		// decl for csqrtf not found
		// decl for csqrtl not found
		// decl for ctan not found
		// decl for ctanf not found
		// decl for ctanh not found
		// decl for ctanhf not found
		// decl for ctanhl not found
		// decl for ctanl not found
		"erf" = "dd";
		"erfc" = "dd";
		"erfcf" = "ff";
		"erfcl" = "DD";
		"erff" = "ff";
		"erfl" = "DD";
		"exp" = "dd";
		"exp2" = "dd";
		"exp2f" = "ff";
		"exp2l" = "DD";
		"expf" = "ff";
		"expl" = "DD";
		"expm1" = "dd";
		"expm1f" = "ff";
		"expm1l" = "DD";
		"fabs" = "dd";
		"fabsf" = "ff";
		"fabsl" = "DD";
		"fdim" = "ddd";
		"fdimf" = "fff";
		"fdiml" = "DDD";
		"feclearexcept" = "ii";
		"fegetenv" = "i^{?=}";
		"fegetexceptflag" = "i^Si";
		"fegetround" = "i";
		"feholdexcept" = "i^{?=}";
		"feraiseexcept" = "ii";
		"fesetenv" = "i^{?=}";
		"fesetexceptflag" = "i^Si";
		"fesetround" = "ii";
		"fetestexcept" = "ii";
		"feupdateenv" = "i^{?=}";
		"floor" = "dd";
		"floorf" = "ff";
		"floorl" = "DD";
		"fma" = "dddd";
		"fmaf" = "ffff";
		"fmal" = "DDDD";
		"fmax" = "ddd";
		"fmaxf" = "fff";
		"fmaxl" = "DDD";
		"fmin" = "ddd";
		"fminf" = "fff";
		"fminl" = "DDD";
		"fmod" = "ddd";
		"fmodf" = "fff";
		"fmodl" = "DDD";
		"frexp" = "dd^i";
		"frexpf" = "ff^i";
		"frexpl" = "DD^i";
		"hypot" = "ddd";
		"hypotf" = "fff";
		"hypotl" = "DDD";
		"ilogb" = "id";
		"ilogbf" = "if";
		"ilogbl" = "iD";
		// decl for isinf not found
		// decl for isnan not found
		"j0" = "dd";
		"j1" = "dd";
		"jn" = "did";
		"ldexp" = "ddi";
		"ldexpf" = "ffi";
		"ldexpl" = "DDi";
		"lgamma" = "dd";
		"lgamma_r" = "dd^i";
		"lgammaf" = "ff";
		"lgammaf_r" = "ff^i";
		"lgammal" = "DD";
		"lgammal_r" = "DD^i";
		"llrint" = "qd";
		"llrintf" = "qf";
		"llrintl" = "qD";
		"llround" = "qd";
		"llroundf" = "qf";
		"llroundl" = "qD";
		"log" = "dd";
		"log10" = "dd";
		"log10f" = "ff";
		"log10l" = "DD";
		"log1p" = "dd";
		"log1pf" = "ff";
		"log1pl" = "DD";
		"log2" = "dd";
		"log2f" = "ff";
		"log2l" = "DD";
		"logb" = "dd";
		"logbf" = "ff";
		"logbl" = "DD";
		"logf" = "ff";
		"logl" = "DD";
		"lrint" = "qd";
		"lrintf" = "qf";
		"lrintl" = "qD";
		"lround" = "qd";
		"lroundf" = "qf";
		"lroundl" = "qD";
		// decl for matrix_identity_double2x2 not found
		// decl for matrix_identity_double3x3 not found
		// decl for matrix_identity_double4x4 not found
		// decl for matrix_identity_float2x2 not found
		// decl for matrix_identity_float3x3 not found
		// decl for matrix_identity_float4x4 not found
		"modf" = "dd^d";
		"modff" = "ff^f";
		"modfl" = "DD^D";
		"nan" = "d*";
		"nanf" = "f*";
		"nanl" = "D*";
		"nearbyint" = "dd";
		"nearbyintf" = "ff";
		"nearbyintl" = "DD";
		"nextafter" = "ddd";
		"nextafterf" = "fff";
		"nextafterl" = "DDD";
		"nexttoward" = "ddD";
		"nexttowardf" = "ffD";
		"nexttowardl" = "DDD";
		"pow" = "ddd";
		"powf" = "fff";
		"powl" = "DDD";
		"remainder" = "ddd";
		"remainderf" = "fff";
		"remainderl" = "DDD";
		"remquo" = "ddd^i";
		"remquof" = "fff^i";
		"remquol" = "DDD^i";
		"rint" = "dd";
		"rintf" = "ff";
		"rintl" = "DD";
		"round" = "dd";
		"roundf" = "ff";
		"roundl" = "DD";
		"scalb" = "ddd";
		"scalbln" = "ddq";
		"scalblnf" = "ffq";
		"scalblnl" = "DDq";
		"scalbn" = "ddi";
		"scalbnf" = "ffi";
		"scalbnl" = "DDi";
		// decl for signgam not found
		"sin" = "dd";
		"sinf" = "ff";
		"sinh" = "dd";
		"sinhf" = "ff";
		"sinhl" = "DD";
		"sinl" = "DD";
		"sqrt" = "dd";
		"sqrtf" = "ff";
		"sqrtl" = "DD";
		"tan" = "dd";
		"tanf" = "ff";
		"tanh" = "dd";
		"tanhf" = "ff";
		"tanhl" = "DD";
		"tanl" = "DD";
		"tgamma" = "dd";
		"tgammaf" = "ff";
		"tgammal" = "DD";
		"trunc" = "dd";
		"truncf" = "ff";
		"truncl" = "DD";
		"y0" = "dd";
		"y1" = "dd";
		"yn" = "did";
		// decl for nanov2_allocate$VARIANT$armv81 not found
		// decl for nanov2_allocate$VARIANT$mp not found
		// decl for nanov2_allocate_from_block$VARIANT$armv81 not found
		// decl for nanov2_allocate_from_block$VARIANT$mp not found
		// decl for nanov2_batch_free$VARIANT$armv81 not found
		// decl for nanov2_batch_free$VARIANT$mp not found
		// decl for nanov2_batch_malloc$VARIANT$armv81 not found
		// decl for nanov2_batch_malloc$VARIANT$mp not found
		// decl for nanov2_calloc$VARIANT$armv81 not found
		// decl for nanov2_calloc$VARIANT$mp not found
		// decl for nanov2_claimed_address$VARIANT$armv81 not found
		// decl for nanov2_claimed_address$VARIANT$mp not found
		// decl for nanov2_find_block_and_allocate$VARIANT$armv81 not found
		// decl for nanov2_find_block_and_allocate$VARIANT$mp not found
		// decl for nanov2_forked_batch_free$VARIANT$armv81 not found
		// decl for nanov2_forked_batch_free$VARIANT$mp not found
		// decl for nanov2_forked_free$VARIANT$armv81 not found
		// decl for nanov2_forked_free$VARIANT$mp not found
		// decl for nanov2_forked_free_definite_size$VARIANT$armv81 not found
		// decl for nanov2_forked_free_definite_size$VARIANT$mp not found
		// decl for nanov2_forked_malloc$VARIANT$armv81 not found
		// decl for nanov2_forked_malloc$VARIANT$mp not found
		// decl for nanov2_forked_realloc$VARIANT$armv81 not found
		// decl for nanov2_forked_realloc$VARIANT$mp not found
		// decl for nanov2_free$VARIANT$armv81 not found
		// decl for nanov2_free$VARIANT$mp not found
		// decl for nanov2_free_definite_size$VARIANT$armv81 not found
		// decl for nanov2_free_definite_size$VARIANT$mp not found
		// decl for nanov2_free_to_block$VARIANT$armv81 not found
		// decl for nanov2_free_to_block$VARIANT$mp not found
		// decl for nanov2_madvise_block$VARIANT$armv81 not found
		// decl for nanov2_madvise_block$VARIANT$mp not found
		// decl for nanov2_malloc$VARIANT$armv81 not found
		// decl for nanov2_malloc$VARIANT$mp not found
		// decl for nanov2_pointer_size$VARIANT$armv81 not found
		// decl for nanov2_pointer_size$VARIANT$mp not found
		// decl for nanov2_pressure_relief$VARIANT$armv81 not found
		// decl for nanov2_pressure_relief$VARIANT$mp not found
		// decl for nanov2_realloc$VARIANT$armv81 not found
		// decl for nanov2_realloc$VARIANT$mp not found
		// decl for nanov2_size$VARIANT$armv81 not found
		// decl for nanov2_size$VARIANT$mp not found
		// decl for nanozone_check_counter not found
		// decl for nanozone_check_modulo not found
		// decl for nanozone_check_start not found
		// decl for __disk_stack_logging_log_stack not found
		// decl for __invalid_stack_id not found
		// decl for __mach_stack_logging_copy_uniquing_table not found
		// decl for __mach_stack_logging_enumerate_records not found
		// decl for __mach_stack_logging_frames_for_uniqued_stack not found
		// decl for __mach_stack_logging_get_frames not found
		// decl for __mach_stack_logging_get_frames_for_stackid not found
		// decl for __mach_stack_logging_set_file_path not found
		// decl for __mach_stack_logging_shared_memory_address not found
		// decl for __mach_stack_logging_stackid_for_vm_region not found
		// decl for __mach_stack_logging_start_reading not found
		// decl for __mach_stack_logging_stop_reading not found
		// decl for __mach_stack_logging_uniquing_table_copy_from_serialized not found
		// decl for __mach_stack_logging_uniquing_table_read_stack not found
		// decl for __mach_stack_logging_uniquing_table_release not found
		// decl for __mach_stack_logging_uniquing_table_retain not found
		// decl for __mach_stack_logging_uniquing_table_serialize not found
		// decl for __mach_stack_logging_uniquing_table_sizeof not found
		// decl for __malloc_init not found
		// decl for __stack_log_file_path__ not found
		// decl for __stack_logging_early_finished not found
		// decl for __stack_logging_fork_child not found
		// decl for __stack_logging_fork_parent not found
		// decl for __stack_logging_fork_prepare not found
		// decl for _malloc_fork_child not found
		// decl for _malloc_fork_parent not found
		// decl for _malloc_fork_prepare not found
		// decl for _malloc_no_asl_log not found
		// decl for _os_cpu_number_override not found
		// decl for bitarray_create not found
		// decl for bitarray_first_set not found
		// decl for bitarray_get not found
		// decl for bitarray_set not found
		// decl for bitarray_size not found
		// decl for bitarray_zap not found
		// decl for bitarray_zap_first_set not found
		// decl for bitarray_zap_first_set_multiple not found
		// decl for block_units_by_size_class not found
		"calloc" = "^vQQ";
		// decl for first_block_offset_by_size_class not found
		"free" = "v^v";
		// decl for is_stack_logging_lite_enabled not found
		// decl for last_block_offset_by_size_class not found
		// decl for mag_set_thread_index not found
		"malloc" = "^vQ";
		// decl for malloc_check_counter not found
		// decl for malloc_check_each not found
		// decl for malloc_check_start not found
		// decl for malloc_claimed_address not found
		// decl for malloc_create_legacy_default_zone not found
		"malloc_create_zone" = "^{_malloc_zone_t=}QI";
		// decl for malloc_debug not found
		"malloc_default_purgeable_zone" = "^{_malloc_zone_t=}";
		"malloc_default_zone" = "^{_malloc_zone_t=}";
		"malloc_destroy_zone" = "v^{_malloc_zone_t=}";
		// decl for malloc_engaged_nano not found
		// decl for malloc_enter_process_memory_limit_warn_mode not found
		// decl for malloc_error not found
		// decl for malloc_freezedry not found
		"malloc_get_all_zones" = "iI^?^?^I";
		"malloc_get_zone_name" = "*^{_malloc_zone_t=}";
		"malloc_good_size" = "QQ";
		// decl for malloc_jumpstart not found
		// decl for malloc_logger not found
		"malloc_make_nonpurgeable" = "i^v";
		"malloc_make_purgeable" = "v^v";
		// decl for malloc_memory_event_handler not found
		// decl for malloc_num_zones not found
		// decl for malloc_num_zones_allocated not found
		"malloc_printf" = "$malloc_printf"; // v*...;
		"malloc_set_zone_name" = "v^{_malloc_zone_t=}*";
		// decl for malloc_singlethreaded not found
		"malloc_size" = "Q^v";
		"malloc_zone_batch_free" = "v^{_malloc_zone_t=}^?I";
		"malloc_zone_batch_malloc" = "I^{_malloc_zone_t=}Q^?I";
		"malloc_zone_calloc" = "^v^{_malloc_zone_t=}QQ";
		"malloc_zone_check" = "i^{_malloc_zone_t=}";
		// decl for malloc_zone_claimed_address not found
		"malloc_zone_disable_discharge_checking" = "v^{_malloc_zone_t=}";
		"malloc_zone_discharge" = "v^{_malloc_zone_t=}^v";
		"malloc_zone_enable_discharge_checking" = "i^{_malloc_zone_t=}";
		"malloc_zone_enumerate_discharged_pointers" = "v^{_malloc_zone_t=}^?";
		"malloc_zone_free" = "v^{_malloc_zone_t=}^v";
		"malloc_zone_from_ptr" = "^{_malloc_zone_t=}^v";
		"malloc_zone_log" = "v^{_malloc_zone_t=}^v";
		"malloc_zone_malloc" = "^v^{_malloc_zone_t=}Q";
		"malloc_zone_memalign" = "^v^{_malloc_zone_t=}QQ";
		"malloc_zone_pressure_relief" = "Q^{_malloc_zone_t=}Q";
		"malloc_zone_print" = "v^{_malloc_zone_t=}i";
		"malloc_zone_print_ptr_info" = "v^v";
		"malloc_zone_realloc" = "^v^{_malloc_zone_t=}^vQ";
		"malloc_zone_register" = "v^{_malloc_zone_t=}";
		"malloc_zone_statistics" = "v^{_malloc_zone_t=}^{malloc_statistics_t=}";
		"malloc_zone_unregister" = "v^{_malloc_zone_t=}";
		"malloc_zone_valloc" = "^v^{_malloc_zone_t=}Q";
		// decl for malloc_zones not found
		"mstats" = "{mstats=}";
		// decl for nanov2_allocate_new_region not found
		// decl for nanov2_madvise_policy not found
		// decl for nanov2_policy_config not found
		"posix_memalign" = "i^?QQ";
		// decl for ptr_offset_to_size_class not found
		// decl for radix_tree_count not found
		// decl for radix_tree_create not found
		// decl for radix_tree_delete not found
		// decl for radix_tree_destory not found
		// decl for radix_tree_init not found
		// decl for radix_tree_insert not found
		// decl for radix_tree_lookup not found
		// decl for radix_tree_size not found
		"realloc" = "^v^vQ";
		// decl for reallocarray$DARWIN_EXTSN not found
		// decl for reallocarrayf$DARWIN_EXTSN not found
		// decl for scalable_zone_info not found
		// decl for scalable_zone_statistics not found
		// decl for set_malloc_singlethreaded not found
		// decl for slots_by_size_class not found
		// decl for stack_logging_dontcompact not found
		// decl for stack_logging_enable_logging not found
		// decl for stack_logging_finished_init not found
		// decl for stack_logging_lite_batch_free not found
		// decl for stack_logging_lite_batch_malloc not found
		// decl for stack_logging_mode not found
		// decl for stack_logging_postponed not found
		// decl for szone_check_counter not found
		// decl for szone_check_modulo not found
		// decl for szone_check_start not found
		// decl for turn_off_stack_logging not found
		// decl for turn_on_stack_logging not found
		"valloc" = "^vQ";
		// decl for vfree not found
		// decl for zeroify_scalable_zone not found
		// decl for NETCORE_XPC_TYPE_ANY not found
		// decl for __nw_create_backtrace_string not found
		// decl for __nw_should_simulate_crash not found
		// decl for __nwlog_debug_c not found
		// decl for __nwlog_default_c not found
		// decl for __nwlog_enable_stderr not found
		// decl for __nwlog_err_c not found
		// decl for __nwlog_err_set_disable_simulate_crash not found
		// decl for __nwlog_err_simulate_crash_add_description_to_list not found
		// decl for __nwlog_err_simulate_crash_libsystem not found
		// decl for __nwlog_err_simulate_crash_register_override not found
		// decl for __nwlog_info_c not found
		// decl for __nwlog_is_datapath_logging_enabled not found
		// decl for __nwlog_register_helper not found
		// decl for __system_networkVersionNumber not found
		// decl for __system_networkVersionString not found
		// decl for copyassocids not found
		// decl for copyconnids not found
		// decl for copyconninfo not found
		// decl for freeassocids not found
		// decl for freeconnids not found
		// decl for freeconninfo not found
		// decl for libnetcore_symptom_to_string not found
		// decl for net_flowhash not found
		// decl for net_flowhash_jhash not found
		// decl for net_flowhash_mh3_x64_128 not found
		// decl for net_flowhash_mh3_x86_32 not found
		// decl for netcore_append_format not found
		// decl for netcore_bool_to_string not found
		// decl for netcore_delta_nanos not found
		// decl for netcore_dispatch_data_to_iovec not found
		// decl for netcore_dispatch_data_to_iovec_partial not found
		// decl for netcore_is_cellular_fallback_enabled_in_metrics_testing not found
		// decl for netcore_mach_absolute_time not found
		// decl for netcore_nanos_since_start not found
		// decl for netcore_queue not found
		// decl for netcore_stats_network_event_type_to_string not found
		// decl for netcore_stats_tcp_report_copy_description not found
		// decl for netcore_stats_tcp_report_reason_to_string not found
		// decl for netcore_xpc_array_get_value_of_type not found
		// decl for netcore_xpc_dictionary_get_value_of_type not found
		// decl for netutil_ifindex_to_ifname not found
		// decl for netutil_ifname_to_ifindex not found
		// decl for network_config_cellular_blocked_observer_cancel not found
		// decl for network_config_cellular_blocked_observer_create not found
		// decl for network_config_cellular_failed_observer_create not found
		// decl for network_config_check_interface_settings not found
		// decl for network_config_copy_setting not found
		// decl for network_config_copy_waldo_public_ip not found
		// decl for network_config_get_bool_setting not found
		// decl for network_config_get_bool_setting_with_default not found
		// decl for network_config_get_int64_setting not found
		// decl for network_config_get_int64_setting_with_default not found
		// decl for network_config_has_cellular_fallback_enabled_in_metrics_testing not found
		// decl for network_config_has_proxies_configured not found
		// decl for network_config_open_kernel_network_advisory_socket not found
		// decl for network_config_pool_set_limit not found
		// decl for network_config_set_bool_setting not found
		// decl for network_config_set_bool_sysctl_setting not found
		// decl for network_config_set_int64_setting not found
		// decl for network_config_set_int_sysctl_setting not found
		// decl for network_config_set_opportunistic_blocked not found
		// decl for network_config_set_persistent_interface not found
		// decl for network_config_set_setting not found
		// decl for network_config_wifi_blocked_observer_create not found
		// decl for network_release not found
		// decl for network_retain not found
		// decl for networkd_privileged_key_agent_uuid not found
		// decl for networkd_privileged_key_hash not found
		// decl for networkd_privileged_key_interface_name not found
		// decl for networkd_privileged_key_interface_name_array not found
		// decl for networkd_privileged_key_kernel_socket_fd not found
		// decl for networkd_privileged_key_opportunistic_disable not found
		// decl for networkd_privileged_key_opportunistic_ifname not found
		// decl for networkd_privileged_key_opportunistic_inuse not found
		// decl for networkd_privileged_key_remove not found
		// decl for networkd_privileged_key_result not found
		// decl for networkd_privileged_key_settings not found
		// decl for networkd_privileged_key_settings_file_prefix not found
		// decl for networkd_privileged_key_settings_key not found
		// decl for networkd_privileged_key_settings_value not found
		// decl for networkd_privileged_key_type not found
		// decl for networkd_privileged_reload_managed_network_settings not found
		// decl for networkd_privileged_service not found
		// decl for networkd_privileged_type_to_string not found
		// decl for networkd_settings_copy not found
		// decl for networkd_settings_copy_value_of_type not found
		// decl for networkd_settings_get_bool not found
		// decl for networkd_settings_get_int64 not found
		// decl for networkd_settings_get_int64_with_default not found
		// decl for nw_DNSServiceErrorType_to_str not found
		// decl for nw_SSLAllocBuffer not found
		// decl for nw_SSLCopyBuffer not found
		// decl for nw_SSLCopyBufferFromData not found
		// decl for nw_SSLFreeBuffer not found
		// decl for nw_allow_use_of_dispatch_libsystem not found
		// decl for nw_array_append not found
		// decl for nw_array_apply not found
		// decl for nw_array_contains_object not found
		// decl for nw_array_create not found
		// decl for nw_array_create_by_removal not found
		// decl for nw_array_duplicate_array_without_object not found
		// decl for nw_array_get_count not found
		// decl for nw_array_get_object_at_index not found
		// decl for nw_channel_close not found
		// decl for nw_channel_create_with_nexus not found
		// decl for nw_channel_dispose not found
		// decl for nw_channel_get_key not found
		// decl for nw_channel_get_nexus_instance not found
		// decl for nw_channel_get_protocol_handler not found
		// decl for nw_channel_set_protocol_level not found
		// decl for nw_data_mode_to_string not found
		// decl for nw_default_fallback_rtt_ms not found
		// decl for nw_default_first_address_family_count not found
		// decl for nw_default_ipv4_delay_ns not found
		// decl for nw_default_ipv6_delay_ns not found
		// decl for nw_default_ipv6_head_start_delay_ms not found
		// decl for nw_default_statistics_report_denominator not found
		// decl for nw_default_statistics_report_numerator not found
		// decl for nw_default_strong_fallback_delay_ms not found
		// decl for nw_default_trigger_agent_delay_ms not found
		// decl for nw_dictionary_apply not found
		// decl for nw_dictionary_copy not found
		// decl for nw_dictionary_create not found
		// decl for nw_dictionary_get_count not found
		// decl for nw_dictionary_get_value not found
		// decl for nw_dictionary_set_value not found
		// decl for nw_endpoint_address_endpoint_matches_address not found
		// decl for nw_endpoint_copy_address_string not found
		// decl for nw_endpoint_copy_dictionary not found
		// decl for nw_endpoint_copy_interface not found
		// decl for nw_endpoint_copy_port_string not found
		// decl for nw_endpoint_create_address not found
		// decl for nw_endpoint_create_address_with_port not found
		// decl for nw_endpoint_create_bonjour_service not found
		// decl for nw_endpoint_create_custom not found
		// decl for nw_endpoint_create_from_dictionary not found
		// decl for nw_endpoint_create_host not found
		// decl for nw_endpoint_create_host_with_numeric_port not found
		// decl for nw_endpoint_dispose not found
		// decl for nw_endpoint_get_address not found
		// decl for nw_endpoint_get_address_family not found
		// decl for nw_endpoint_get_bonjour_service_domain not found
		// decl for nw_endpoint_get_bonjour_service_name not found
		// decl for nw_endpoint_get_bonjour_service_type not found
		// decl for nw_endpoint_get_custom_data not found
		// decl for nw_endpoint_get_custom_resolver_block not found
		// decl for nw_endpoint_get_description not found
		// decl for nw_endpoint_get_domain_for_policy not found
		// decl for nw_endpoint_get_hash not found
		// decl for nw_endpoint_get_hostname not found
		// decl for nw_endpoint_get_parent_endpoint_domain not found
		// decl for nw_endpoint_get_port not found
		// decl for nw_endpoint_get_proxy_original_endpoint not found
		// decl for nw_endpoint_get_txt_record not found
		// decl for nw_endpoint_get_txt_record_length not found
		// decl for nw_endpoint_get_type not found
		// decl for nw_endpoint_is_custom_type not found
		// decl for nw_endpoint_is_equal not found
		// decl for nw_endpoint_set_interface not found
		// decl for nw_endpoint_set_parent_endpoint_domain not found
		// decl for nw_endpoint_set_proxy_original_endpoint not found
		// decl for nw_endpoint_set_txt_record not found
		// decl for nw_endpoint_set_txt_record_object not found
		// decl for nw_fallback_delay_max_limit_ms not found
		// decl for nw_fd_wrapper_close not found
		// decl for nw_fd_wrapper_create not found
		// decl for nw_fd_wrapper_get_fd not found
		// decl for nw_fd_wrapper_unset_without_closing not found
		// decl for nw_file_path_settings not found
		// decl for nw_file_path_settings_managed not found
		// decl for nw_foldHash not found
		// decl for nw_frame_array_append not found
		// decl for nw_frame_array_first not found
		// decl for nw_frame_array_foreach not found
		// decl for nw_frame_array_init not found
		// decl for nw_frame_array_insert_after not found
		// decl for nw_frame_array_is_empty not found
		// decl for nw_frame_array_next not found
		// decl for nw_frame_array_prepend_array not found
		// decl for nw_frame_array_remove not found
		// decl for nw_frame_buffer_used_malloc not found
		// decl for nw_frame_claim not found
		// decl for nw_frame_collapse not found
		// decl for nw_frame_create not found
		// decl for nw_frame_create_external not found
		// decl for nw_frame_dispose not found
		// decl for nw_frame_effective_length not found
		// decl for nw_frame_finalize not found
		// decl for nw_frame_get_buffer not found
		// decl for nw_frame_get_external_data not found
		// decl for nw_frame_get_metadata not found
		// decl for nw_frame_reset not found
		// decl for nw_frame_set_buffer_used_malloc not found
		// decl for nw_frame_set_external_data not found
		// decl for nw_frame_unclaim not found
		// decl for nw_frame_unclaimed_bytes not found
		// decl for nw_frame_unclaimed_length not found
		// decl for nw_frame_uses_external_data not found
		// decl for nw_frame_will_free_buffer_externally not found
		// decl for nw_get_host_stats not found
		// decl for nw_get_rtt_ms_for_interface_index not found
		// decl for nw_hash_node_get_extra not found
		// decl for nw_hash_node_get_object not found
		// decl for nw_hash_table_add_object not found
		// decl for nw_hash_table_apply not found
		// decl for nw_hash_table_count not found
		// decl for nw_hash_table_create not found
		// decl for nw_hash_table_get_node not found
		// decl for nw_hash_table_release not found
		// decl for nw_hash_table_release_all_objects not found
		// decl for nw_hash_table_remove_node not found
		// decl for nw_interface_copy_delegate_interface not found
		// decl for nw_interface_copy_dictionary not found
		// decl for nw_interface_create_from_dictionary not found
		// decl for nw_interface_create_from_necp not found
		// decl for nw_interface_create_with_index not found
		// decl for nw_interface_create_with_index_and_name not found
		// decl for nw_interface_create_with_name not found
		// decl for nw_interface_deep_compare not found
		// decl for nw_interface_dispose not found
		// decl for nw_interface_functional_type_to_interface_subtype not found
		// decl for nw_interface_functional_type_to_interface_type not found
		// decl for nw_interface_get_active_state not found
		// decl for nw_interface_get_generation not found
		// decl for nw_interface_get_index not found
		// decl for nw_interface_get_mtu not found
		// decl for nw_interface_get_name not found
		// decl for nw_interface_get_shallow_hash not found
		// decl for nw_interface_get_subtype not found
		// decl for nw_interface_get_type not found
		// decl for nw_interface_get_update_time not found
		// decl for nw_interface_is_expensive not found
		// decl for nw_interface_query_lqm not found
		// decl for nw_interface_register_get_blocks not found
		// decl for nw_interface_set_active not found
		// decl for nw_interface_shallow_compare not found
		// decl for nw_interface_subtype_get_description not found
		// decl for nw_interface_type_get_description not found
		// decl for nw_interface_type_to_functional_type not found
		// decl for nw_is_dispatch_allowed not found
		// decl for nw_max_ipv6_head_start_delay_ms not found
		// decl for nw_max_resolver_delay_ns not found
		// decl for nw_min_resolver_delay_ns not found
		// decl for nw_nat64_can_v4_address_be_synthesized not found
		// decl for nw_nat64_copy_prefixes not found
		// decl for nw_nat64_copy_prefixes_async not found
		// decl for nw_nat64_copy_prefixes_async_override_dns not found
		// decl for nw_nat64_extract_v4 not found
		// decl for nw_nat64_synthesize_v6 not found
		// decl for nw_nat64_write_prefix_to_string not found
		// decl for nw_network_agent_add_persistent_agent_to_interface not found
		// decl for nw_network_agent_add_to_interface not found
		// decl for nw_network_agent_copy_dictionary_for_uuid not found
		// decl for nw_network_agent_copy_dictionary_from_necp not found
		// decl for nw_network_agent_copy_full_description not found
		// decl for nw_network_agent_copy_uuid not found
		// decl for nw_network_agent_create_agent_from_data not found
		// decl for nw_network_agent_ctl_copy_received_agent_message not found
		// decl for nw_network_agent_ctl_send_assign_message not found
		// decl for nw_network_agent_ctl_send_uuid_message not found
		// decl for nw_network_agent_ctl_setsockopt not found
		// decl for nw_network_agent_get_agent_classs not found
		// decl for nw_network_agent_get_agent_from_dictionary not found
		// decl for nw_network_agent_get_data not found
		// decl for nw_network_agent_get_description not found
		// decl for nw_network_agent_get_domain not found
		// decl for nw_network_agent_get_type not found
		// decl for nw_network_agent_get_use_count not found
		// decl for nw_network_agent_is_active not found
		// decl for nw_network_agent_is_kernel_activated not found
		// decl for nw_network_agent_is_user_activated not found
		// decl for nw_network_agent_is_voluntary not found
		// decl for nw_network_agent_open_control_socket not found
		// decl for nw_network_agent_register not found
		// decl for nw_network_agent_release not found
		// decl for nw_network_agent_remove_from_interface not found
		// decl for nw_network_agent_set_use_count not found
		// decl for nw_network_agent_start not found
		// decl for nw_network_agent_stop not found
		// decl for nw_network_agent_unregister not found
		// decl for nw_network_agent_update_registration not found
		// decl for nw_nexus_bind_client_port not found
		// decl for nw_nexus_close not found
		// decl for nw_nexus_close_channel_and_instance not found
		// decl for nw_nexus_create not found
		// decl for nw_nexus_create_channel_to_new_instance not found
		// decl for nw_nexus_dispose not found
		// decl for nw_notification_name_settings not found
		// decl for nw_oslog_subsystem not found
		// decl for nw_parameters_add_to_protocol_stack not found
		// decl for nw_parameters_are_equal not found
		// decl for nw_parameters_are_valid not found
		// decl for nw_parameters_copy not found
		// decl for nw_parameters_copy_connected not found
		// decl for nw_parameters_copy_description not found
		// decl for nw_parameters_copy_dictionary not found
		// decl for nw_parameters_copy_effective_proxy_settings not found
		// decl for nw_parameters_copy_initial_data_payload not found
		// decl for nw_parameters_copy_local_address not found
		// decl for nw_parameters_copy_metadata not found
		// decl for nw_parameters_copy_preferred_netagent_domains not found
		// decl for nw_parameters_copy_preferred_netagent_types not found
		// decl for nw_parameters_copy_preferred_netagent_uuids not found
		// decl for nw_parameters_copy_prohibited_interface_subtypes not found
		// decl for nw_parameters_copy_prohibited_interface_types not found
		// decl for nw_parameters_copy_prohibited_interfaces not found
		// decl for nw_parameters_copy_prohibited_netagent_domains not found
		// decl for nw_parameters_copy_prohibited_netagent_types not found
		// decl for nw_parameters_copy_prohibited_netagent_uuids not found
		// decl for nw_parameters_copy_proxy_configuration not found
		// decl for nw_parameters_copy_required_interface not found
		// decl for nw_parameters_copy_required_netagent_domains not found
		// decl for nw_parameters_copy_required_netagent_types not found
		// decl for nw_parameters_copy_required_netagent_uuids not found
		// decl for nw_parameters_copy_tls_session_id not found
		// decl for nw_parameters_create not found
		// decl for nw_parameters_create_from_dictionary not found
		// decl for nw_parameters_dispose not found
		// decl for nw_parameters_get_account_id not found
		// decl for nw_parameters_get_background_traffic_management not found
		// decl for nw_parameters_get_bundle_id_to_uuid_mapping_failed not found
		// decl for nw_parameters_get_connected_by_socket not found
		// decl for nw_parameters_get_data_mode not found
		// decl for nw_parameters_get_disable_blackhole_detection not found
		// decl for nw_parameters_get_e_proc_uuid not found
		// decl for nw_parameters_get_ecn_mode not found
		// decl for nw_parameters_get_effective_audit_token not found
		// decl for nw_parameters_get_effective_bundle_id not found
		// decl for nw_parameters_get_extended_background_idle not found
		// decl for nw_parameters_get_hash not found
		// decl for nw_parameters_get_hw_checksum not found
		// decl for nw_parameters_get_indefinite not found
		// decl for nw_parameters_get_ip_protocol not found
		// decl for nw_parameters_get_keepalive_enabled not found
		// decl for nw_parameters_get_keepalive_idle_time not found
		// decl for nw_parameters_get_keepalive_interval not found
		// decl for nw_parameters_get_keepalive_offload not found
		// decl for nw_parameters_get_local_address not found
		// decl for nw_parameters_get_maximum_tls_protocol_version not found
		// decl for nw_parameters_get_minimum_tls_protocol_version not found
		// decl for nw_parameters_get_mtu_override not found
		// decl for nw_parameters_get_multipath not found
		// decl for nw_parameters_get_multipath_fallback not found
		// decl for nw_parameters_get_no_delay not found
		// decl for nw_parameters_get_no_fallback not found
		// decl for nw_parameters_get_no_proxy not found
		// decl for nw_parameters_get_parent_id not found
		// decl for nw_parameters_get_pid not found
		// decl for nw_parameters_get_pid_to_uuid_mapping_failed not found
		// decl for nw_parameters_get_proc_uuid not found
		// decl for nw_parameters_get_prohibit_cellular not found
		// decl for nw_parameters_get_prohibit_expensive not found
		// decl for nw_parameters_get_protocol_count not found
		// decl for nw_parameters_get_read_buffer_size not found
		// decl for nw_parameters_get_receive_any_interface not found
		// decl for nw_parameters_get_reduce_buffering not found
		// decl for nw_parameters_get_required_address_family not found
		// decl for nw_parameters_get_required_interface_index not found
		// decl for nw_parameters_get_required_interface_type not found
		// decl for nw_parameters_get_resolve_ptr not found
		// decl for nw_parameters_get_reuse_local_address not found
		// decl for nw_parameters_get_sfo not found
		// decl for nw_parameters_get_should_trust_invalid_certificates not found
		// decl for nw_parameters_get_sleep_keepalive_interval not found
		// decl for nw_parameters_get_ssl_cipher_suites not found
		// decl for nw_parameters_get_tfo not found
		// decl for nw_parameters_get_tfo_no_cookie not found
		// decl for nw_parameters_get_tls not found
		// decl for nw_parameters_get_tls_session_ticket_enabled not found
		// decl for nw_parameters_get_traffic_class not found
		// decl for nw_parameters_get_uid not found
		// decl for nw_parameters_get_url not found
		// decl for nw_parameters_get_use_awdl not found
		// decl for nw_parameters_get_use_long_outstanding_queries not found
		// decl for nw_parameters_get_use_p2p not found
		// decl for nw_parameters_has_delegated_proc_pid not found
		// decl for nw_parameters_has_delegated_proc_uuid not found
		// decl for nw_parameters_has_initial_data_payload not found
		// decl for nw_parameters_has_non_empty_proxy_configuration not found
		// decl for nw_parameters_has_preferred_netagents not found
		// decl for nw_parameters_has_prohibited_interface_subtypes not found
		// decl for nw_parameters_has_prohibited_interface_types not found
		// decl for nw_parameters_has_prohibited_interfaces not found
		// decl for nw_parameters_has_prohibited_netagents not found
		// decl for nw_parameters_has_protocol_stack not found
		// decl for nw_parameters_has_required_interface_type not found
		// decl for nw_parameters_has_required_netagents not found
		// decl for nw_parameters_is_custom_protocols_only not found
		// decl for nw_parameters_iterate_protocol_stack not found
		// decl for nw_parameters_remove_from_protocol_stack not found
		// decl for nw_parameters_require_interface not found
		// decl for nw_parameters_require_interface_type not found
		// decl for nw_parameters_set_account_id not found
		// decl for nw_parameters_set_background_traffic_management not found
		// decl for nw_parameters_set_bundle_id_to_uuid_mapping_failed not found
		// decl for nw_parameters_set_connected_by_socket not found
		// decl for nw_parameters_set_custom_protocols_only not found
		// decl for nw_parameters_set_data_mode not found
		// decl for nw_parameters_set_disable_blackhole_detection not found
		// decl for nw_parameters_set_e_proc_uuid not found
		// decl for nw_parameters_set_ecn_mode not found
		// decl for nw_parameters_set_effective_audit_token not found
		// decl for nw_parameters_set_effective_bundle_id not found
		// decl for nw_parameters_set_effective_proxy_settings not found
		// decl for nw_parameters_set_extended_background_idle not found
		// decl for nw_parameters_set_hw_checksum not found
		// decl for nw_parameters_set_indefinite not found
		// decl for nw_parameters_set_initial_data_payload not found
		// decl for nw_parameters_set_ip_protocol not found
		// decl for nw_parameters_set_keepalive_enabled not found
		// decl for nw_parameters_set_keepalive_idle_time not found
		// decl for nw_parameters_set_keepalive_interval not found
		// decl for nw_parameters_set_keepalive_offload not found
		// decl for nw_parameters_set_local_address not found
		// decl for nw_parameters_set_maximum_tls_protocol_version not found
		// decl for nw_parameters_set_metadata not found
		// decl for nw_parameters_set_minimum_tls_protocol_version not found
		// decl for nw_parameters_set_mtu_override not found
		// decl for nw_parameters_set_multipath not found
		// decl for nw_parameters_set_multipath_fallback not found
		// decl for nw_parameters_set_no_delay not found
		// decl for nw_parameters_set_no_fallback not found
		// decl for nw_parameters_set_no_proxy not found
		// decl for nw_parameters_set_parent_id not found
		// decl for nw_parameters_set_pid not found
		// decl for nw_parameters_set_pid_to_uuid_mapping_failed not found
		// decl for nw_parameters_set_preferred_netagent_classes not found
		// decl for nw_parameters_set_preferred_netagent_uuids not found
		// decl for nw_parameters_set_proc_uuid not found
		// decl for nw_parameters_set_prohibit_expensive not found
		// decl for nw_parameters_set_prohibited_interface_subtypes not found
		// decl for nw_parameters_set_prohibited_interface_types not found
		// decl for nw_parameters_set_prohibited_interfaces not found
		// decl for nw_parameters_set_prohibited_netagent_classes not found
		// decl for nw_parameters_set_prohibited_netagent_uuids not found
		// decl for nw_parameters_set_proxy_configuration not found
		// decl for nw_parameters_set_read_buffer_size not found
		// decl for nw_parameters_set_receive_any_interface not found
		// decl for nw_parameters_set_reduce_buffering not found
		// decl for nw_parameters_set_required_address_family not found
		// decl for nw_parameters_set_required_netagent_classes not found
		// decl for nw_parameters_set_required_netagent_uuids not found
		// decl for nw_parameters_set_resolve_ptr not found
		// decl for nw_parameters_set_reuse_local_address not found
		// decl for nw_parameters_set_sfo not found
		// decl for nw_parameters_set_should_trust_invalid_certificates not found
		// decl for nw_parameters_set_sleep_keepalive_interval not found
		// decl for nw_parameters_set_source_application not found
		// decl for nw_parameters_set_source_application_by_bundle_id not found
		// decl for nw_parameters_set_ssl_cipher_suites not found
		// decl for nw_parameters_set_tfo not found
		// decl for nw_parameters_set_tfo_no_cookie not found
		// decl for nw_parameters_set_tls not found
		// decl for nw_parameters_set_tls_session_id not found
		// decl for nw_parameters_set_tls_session_ticket_enabled not found
		// decl for nw_parameters_set_traffic_class not found
		// decl for nw_parameters_set_uid not found
		// decl for nw_parameters_set_url not found
		// decl for nw_parameters_set_use_awdl not found
		// decl for nw_parameters_set_use_long_outstanding_queries not found
		// decl for nw_parameters_set_use_p2p not found
		// decl for nw_path_allows_multipath not found
		// decl for nw_path_assert_agent not found
		// decl for nw_path_can_resolve_endpoint not found
		// decl for nw_path_can_support_endpoint not found
		// decl for nw_path_copy_all_client_ids not found
		// decl for nw_path_copy_all_local_paths not found
		// decl for nw_path_copy_derived_endpoint not found
		// decl for nw_path_copy_derived_parameters not found
		// decl for nw_path_copy_description not found
		// decl for nw_path_copy_dictionary not found
		// decl for nw_path_copy_endpoint not found
		// decl for nw_path_copy_flow_divert_token not found
		// decl for nw_path_copy_inactive_agent_uuids not found
		// decl for nw_path_copy_interface not found
		// decl for nw_path_copy_interface_from_cache not found
		// decl for nw_path_copy_netagent_dictionary not found
		// decl for nw_path_copy_parameters not found
		// decl for nw_path_copy_path_for_client not found
		// decl for nw_path_copy_proxy_settings not found
		// decl for nw_path_copy_scoped_interface not found
		// decl for nw_path_create_assign_message not found
		// decl for nw_path_create_default_evaluator not found
		// decl for nw_path_create_evaluator_for_endpoint not found
		// decl for nw_path_create_fake not found
		// decl for nw_path_create_necp_agent_action not found
		// decl for nw_path_create_necp_parameters not found
		// decl for nw_path_create_with_dictionary not found
		// decl for nw_path_dispose not found
		// decl for nw_path_endpoint_is_always_satisfied not found
		// decl for nw_path_evaluator_cancel not found
		// decl for nw_path_evaluator_copy_path not found
		// decl for nw_path_evaluator_dispose not found
		// decl for nw_path_evaluator_get_client_id not found
		// decl for nw_path_evaluator_get_error_string not found
		// decl for nw_path_evaluator_request_nexus not found
		// decl for nw_path_evaluator_set_cancel_handler not found
		// decl for nw_path_evaluator_set_update_handler not found
		// decl for nw_path_evaluator_trigger_agents not found
		// decl for nw_path_fallback_is_weak not found
		// decl for nw_path_fallback_should_not_use_timer not found
		// decl for nw_path_get_client_id not found
		// decl for nw_path_get_delegate_interface not found
		// decl for nw_path_get_direct_interface not found
		// decl for nw_path_get_dns_search_domains not found
		// decl for nw_path_get_dns_servers not found
		// decl for nw_path_get_dns_service_id not found
		// decl for nw_path_get_effective_local_endpoint not found
		// decl for nw_path_get_effective_remote_endpoint not found
		// decl for nw_path_get_endpoint not found
		// decl for nw_path_get_fallback_agent not found
		// decl for nw_path_get_fallback_interface_index not found
		// decl for nw_path_get_filter_unit not found
		// decl for nw_path_get_flow_divert_unit not found
		// decl for nw_path_get_interface_index not found
		// decl for nw_path_get_mtu not found
		// decl for nw_path_get_nexus_agent_uuid not found
		// decl for nw_path_get_nexus_instance not found
		// decl for nw_path_get_nexus_key not found
		// decl for nw_path_get_nexus_protocol_level not found
		// decl for nw_path_get_parameters not found
		// decl for nw_path_get_policy_id not found
		// decl for nw_path_get_reason not found
		// decl for nw_path_get_reason_description not found
		// decl for nw_path_get_scoped_interface_index not found
		// decl for nw_path_get_status not found
		// decl for nw_path_get_vpn_config_id not found
		// decl for nw_path_has_dns not found
		// decl for nw_path_has_ipv4 not found
		// decl for nw_path_has_ipv6 not found
		// decl for nw_path_has_proxy_settings not found
		// decl for nw_path_has_unsatisfied_cellular_agent not found
		// decl for nw_path_has_unsatisfied_fallback_agent not found
		// decl for nw_path_has_unsatisfied_route not found
		// decl for nw_path_increment_agent_use_count not found
		// decl for nw_path_ipv4_default_address not found
		// decl for nw_path_ipv6_default_address not found
		// decl for nw_path_is_direct not found
		// decl for nw_path_is_eligible_for_CrazyIvan46 not found
		// decl for nw_path_is_equal not found
		// decl for nw_path_is_expensive not found
		// decl for nw_path_is_flow_divert not found
		// decl for nw_path_is_local not found
		// decl for nw_path_is_preferred not found
		// decl for nw_path_is_roaming not found
		// decl for nw_path_may_span_multiple_interfaces not found
		// decl for nw_path_parse_necp_client_id not found
		// decl for nw_path_parse_necp_parameters not found
		// decl for nw_path_parse_necp_result not found
		// decl for nw_path_request_nexus not found
		// decl for nw_path_set_derived_endpoint not found
		// decl for nw_path_set_proxy_settings not found
		// decl for nw_path_set_reason_description not found
		// decl for nw_path_should_fallback not found
		// decl for nw_path_should_use_proxy not found
		// decl for nw_path_status_get_description not found
		// decl for nw_path_trigger_agent not found
		// decl for nw_path_trigger_inactive_cellular_agent_if_necessary not found
		// decl for nw_path_unassert_agent not found
		// decl for nw_path_update_parameters_for_fallback not found
		// decl for nw_path_uses_interface_subtype not found
		// decl for nw_path_uses_interface_type not found
		// decl for nw_path_uses_nexus not found
		// decl for nw_path_voluntary_agent_matches_address not found
		// decl for nw_protocol_create not found
		// decl for nw_protocol_is_registered not found
		// decl for nw_protocol_modify_parameters not found
		// decl for nw_protocol_register not found
		// decl for nw_protocol_register_extended not found
		// decl for nw_protocol_register_parameter_modifier not found
		// decl for nw_protocol_set_default_one_to_one_callbacks not found
		// decl for nw_protocol_unregister not found
		// decl for nw_protocols_are_equal not found
		// decl for nw_queue_async not found
		// decl for nw_queue_cancel_source not found
		// decl for nw_queue_create_source not found
		// decl for nw_queue_dispatch_queue not found
		// decl for nw_queue_register_dispatch_queue not found
		// decl for nw_queue_resume_source not found
		// decl for nw_queue_set_timer_values not found
		// decl for nw_queue_source_get_data not found
		// decl for nw_queue_suspend_source not found
		// decl for nw_queue_sync not found
		// decl for nw_read_request_consume_data not found
		// decl for nw_read_request_copy_internal_data_buffer_for_reading not found
		// decl for nw_read_request_create not found
		// decl for nw_read_request_create_multiple not found
		// decl for nw_read_request_create_pattern not found
		// decl for nw_read_request_create_with_buffer not found
		// decl for nw_read_request_create_with_timeout not found
		// decl for nw_read_request_dispose not found
		// decl for nw_read_request_fail not found
		// decl for nw_read_request_get_datagram_count not found
		// decl for nw_read_request_get_type not found
		// decl for nw_read_request_has_timeout_requirement not found
		// decl for nw_read_request_is_satisfied not found
		// decl for nw_read_request_list_append not found
		// decl for nw_read_request_list_check_satisfied not found
		// decl for nw_read_request_list_depth not found
		// decl for nw_read_request_list_remove_satisfied not found
		// decl for nw_read_request_next not found
		// decl for nw_read_request_next_incomplete not found
		// decl for nw_read_request_remaining_max not found
		// decl for nw_read_request_remaining_min not found
		// decl for nw_read_request_set_next not found
		// decl for nw_read_request_set_timeout_block not found
		// decl for nw_resolver_cancel not found
		// decl for nw_resolver_create_with_endpoint not found
		// decl for nw_resolver_create_with_path not found
		// decl for nw_resolver_get_error not found
		// decl for nw_resolver_get_status not found
		// decl for nw_resolver_set_cancel_handler not found
		// decl for nw_resolver_set_update_handler not found
		// decl for nw_route_get_ifindex not found
		// decl for nw_setting_compare_bypass_stats not found
		// decl for nw_setting_compare_failure_threshold not found
		// decl for nw_setting_libnetcore_datapath_debug not found
		// decl for nw_setting_libnetcore_debug not found
		// decl for nw_setting_statistics_report_denominator not found
		// decl for nw_setting_statistics_report_numerator not found
		// decl for nw_setting_tcpconn_disable_simulate_crash not found
		// decl for nw_setting_tcpconn_fallback_delay_cap_ms not found
		// decl for nw_setting_tcpconn_fallback_metrics_testing not found
		// decl for nw_setting_tcpconn_fallback_wifi_advantage_per_rtt_ms not found
		// decl for nw_setting_tcpconn_first_address_family_count not found
		// decl for nw_setting_tcpconn_ipv4_delay not found
		// decl for nw_setting_tcpconn_ipv6_delay not found
		// decl for nw_setting_tcpconn_keepalive_cnt not found
		// decl for nw_setting_tcpconn_keepalive_time not found
		// decl for nw_setting_tcpconn_max_delay not found
		// decl for nw_setting_tcpconn_min_delay not found
		// decl for nw_setting_tcpconn_rtt_leeway not found
		// decl for nw_setting_tcpconn_rtt_leeway_small not found
		// decl for nw_setting_tcpconn_strong_fallback_delay not found
		// decl for nw_setting_tcpconn_trigger_agent_delay not found
		// decl for nw_setting_tcpconn_v6_head_start not found
		// decl for nw_setting_tcpconn_weak_fallback_delay not found
		// decl for nw_settings_managed_settings not found
		// decl for nw_settings_register_networkd_privileged not found
		// decl for nw_sslAddSession not found
		// decl for nw_sslCleanupSession not found
		// decl for nw_sslDeleteSession not found
		// decl for nw_sslGetSession not found
		// decl for nw_wifi_advantage_per_rtt_delay_ms not found
		// decl for nw_write_request_consume_bytes not found
		// decl for nw_write_request_consume_bytes_at_index not found
		// decl for nw_write_request_create not found
		// decl for nw_write_request_create_close not found
		// decl for nw_write_request_create_multiple not found
		// decl for nw_write_request_dispose not found
		// decl for nw_write_request_fail not found
		// decl for nw_write_request_get_content_type not found
		// decl for nw_write_request_get_data not found
		// decl for nw_write_request_get_data_at_index not found
		// decl for nw_write_request_get_type not found
		// decl for nw_write_request_is_satisfied not found
		// decl for nw_write_request_list_append not found
		// decl for nw_write_request_list_iterate not found
		// decl for nw_write_request_list_remove_satisfied not found
		// decl for nw_write_request_next not found
		// decl for nw_write_request_next_incomplete_data not found
		// decl for nw_write_request_remaining_bytes not found
		// decl for nw_write_request_remaining_datagram_count not found
		// decl for nw_write_request_set_content_type not found
		// decl for nw_write_request_set_next not found
		// decl for nw_write_request_to_iovec not found
		// decl for nwlog_is_debug_logging_enabled not found
		// decl for nwlog_legacy_f not found
		// decl for nwlog_legacy_update_level_from_settings not found
		// decl for nwlog_legacy_v not found
		// decl for sa_dst_compare not found
		// decl for sa_dst_compare_internal not found
		// decl for sa_dst_compare_no_dependencies not found
		// decl for sa_dst_compare_no_stats not found
		// decl for tcp_connection_fallback_is_fast not found
		// decl for tcp_connection_fallback_watcher_create not found
		// decl for tcp_connection_fallback_watcher_destroy not found
		// decl for tcp_fallback_watcher_fallback_inuse not found
		// decl for NEHelperCacheAddRedirectedAddress not found
		// decl for NEHelperCacheClearRedirectedAddresses not found
		// decl for NEHelperCacheClearUUIDs not found
		// decl for NEHelperCacheCopyAppUUIDMapping not found
		// decl for NEHelperCacheCopySigningIdentifierMapping not found
		// decl for NEHelperCacheSetDomainDictionaries not found
		// decl for NEHelperCacheSetRoutes not found
		// decl for NEHelperCopyAggregatePathRules not found
		// decl for NEHelperCopyAppInfo not found
		// decl for NEHelperCopyPerAppDomains not found
		// decl for NEHelperCopyResponse not found
		// decl for NEHelperGetIKESocket not found
		// decl for NEHelperGetKernelControlSocket not found
		// decl for NEHelperGetKernelControlSocketExtended not found
		// decl for NEHelperGetNECPSessionFD not found
		// decl for NEHelperGetPFKeySocket not found
		// decl for NEHelperInterfaceRemoveAddress not found
		// decl for NEHelperInterfaceSetAddress not found
		// decl for NEHelperInterfaceSetMTU not found
		// decl for NEHelperInterfaceSetOption not found
		// decl for NEHelperSendRequest not found
		// decl for NEHelperSettingsSetArray not found
		// decl for NEHelperSettingsSetBool not found
		// decl for NEHelperSettingsSetNumber not found
		// decl for g_ne_read_uuid_cache not found
		// decl for g_ne_uuid_cache_hit not found
		// decl for ne_copy_cached_bundle_identifier_for_uuid not found
		// decl for ne_copy_cached_uuids_for_bundle_identifier not found
		// decl for ne_copy_signature_info_for_pid not found
		// decl for ne_copy_signing_identifier_for_pid not found
		// decl for ne_copy_uuid_cache not found
		// decl for ne_get_configuration_generation not found
		// decl for ne_log_large_obj not found
		// decl for ne_log_obj not found
		// decl for ne_options_set_debug_logging not found
		// decl for ne_print_backtrace not found
		// decl for ne_session_address_matches_subnets not found
		// decl for ne_session_agent_get_advisory not found
		// decl for ne_session_agent_get_advisory_interface_index not found
		// decl for ne_session_always_on_vpn_configs_present not found
		// decl for ne_session_app_vpn_configs_present not found
		// decl for ne_session_cancel not found
		// decl for ne_session_copy_app_data_from_flow_divert_socket not found
		// decl for ne_session_copy_app_data_from_flow_divert_token not found
		// decl for ne_session_copy_policy_match not found
		// decl for ne_session_copy_security_session_info not found
		// decl for ne_session_copy_socket_attributes not found
		// decl for ne_session_create not found
		// decl for ne_session_disable_restrictions not found
		// decl for ne_session_enable_on_demand not found
		// decl for ne_session_establish_ipc not found
		// decl for ne_session_fallback_advisory not found
		// decl for ne_session_fallback_default not found
		// decl for ne_session_get_config_id_from_network_agent not found
		// decl for ne_session_get_configuration_id not found
		// decl for ne_session_get_info not found
		// decl for ne_session_get_info2 not found
		// decl for ne_session_get_status not found
		// decl for ne_session_info_type_to_string not found
		// decl for ne_session_initialize_necp_drop_all not found
		// decl for ne_session_manager_get_pid not found
		// decl for ne_session_manager_has_active_sessions not found
		// decl for ne_session_manager_is_running not found
		// decl for ne_session_on_demand_configs_present not found
		// decl for ne_session_policy_copy_flow_divert_token not found
		// decl for ne_session_policy_copy_flow_divert_token_with_key not found
		// decl for ne_session_policy_match_get_filter_unit not found
		// decl for ne_session_policy_match_get_flow_divert_unit not found
		// decl for ne_session_policy_match_get_scoped_interface_index not found
		// decl for ne_session_policy_match_get_service not found
		// decl for ne_session_policy_match_get_service_action not found
		// decl for ne_session_policy_match_get_service_type not found
		// decl for ne_session_policy_match_is_drop not found
		// decl for ne_session_policy_match_is_flow_divert not found
		// decl for ne_session_policy_match_service_is_registered not found
		// decl for ne_session_release not found
		// decl for ne_session_retain not found
		// decl for ne_session_send_barrier not found
		// decl for ne_session_service_get_dns_service_id not found
		// decl for ne_session_service_matches_address not found
		// decl for ne_session_set_event_handler not found
		// decl for ne_session_set_socket_attributes not found
		// decl for ne_session_should_disable_nexus not found
		// decl for ne_session_start not found
		// decl for ne_session_start_on_behalf_of not found
		// decl for ne_session_start_with_options not found
		// decl for ne_session_status_to_string not found
		// decl for ne_session_stop not found
		// decl for ne_session_stop_all_with_plugin_type not found
		// decl for ne_session_stop_reason_to_string not found
		// decl for ne_session_system_app_vpn_configs_present not found
		// decl for ne_session_type_to_string not found
		// decl for ne_session_use_as_system_vpn not found
		// decl for ne_session_use_ikev2provider not found
		// decl for nehelper_copy_connection not found
		// decl for nehelper_queue not found
		// decl for nelog_is_debug_logging_enabled not found
		// decl for nelog_is_extra_vpn_logging_enabled not found
		// decl for nelog_is_info_logging_enabled not found
		// decl for _notify_fork_child not found
		"notify_cancel" = "Ii";
		"notify_check" = "Ii^i";
		// decl for notify_dump_status not found
		// decl for notify_get_event not found
		"notify_get_state" = "Ii^Q";
		"notify_is_valid_token" = "Bi";
		// decl for notify_monitor_file not found
		// decl for notify_peek not found
		"notify_post" = "I*";
		"notify_register_check" = "I*^i";
		"notify_register_dispatch" = "I*^i^{dispatch_queue_s=}^?";
		"notify_register_file_descriptor" = "I*^ii^i";
		"notify_register_mach_port" = "I*^Ii^i";
		// decl for notify_register_plain not found
		"notify_register_signal" = "I*i^i";
		"notify_resume" = "Ii";
		// decl for notify_resume_pid not found
		// decl for notify_set_options not found
		"notify_set_state" = "IiQ";
		// decl for notify_simple_post not found
		"notify_suspend" = "Ii";
		// decl for notify_suspend_pid not found
		"OSAtomicAdd32" = "ii^i";
		"OSAtomicAdd32Barrier" = "ii^i";
		"OSAtomicAdd64" = "qq^q";
		"OSAtomicAdd64Barrier" = "qq^q";
		"OSAtomicAnd32" = "iI^I";
		"OSAtomicAnd32Barrier" = "iI^I";
		"OSAtomicAnd32Orig" = "iI^I";
		"OSAtomicAnd32OrigBarrier" = "iI^I";
		"OSAtomicCompareAndSwap32" = "Bii^i";
		"OSAtomicCompareAndSwap32Barrier" = "Bii^i";
		"OSAtomicCompareAndSwap64" = "Bqq^q";
		"OSAtomicCompareAndSwap64Barrier" = "Bqq^q";
		"OSAtomicCompareAndSwapInt" = "Bii^i";
		"OSAtomicCompareAndSwapIntBarrier" = "Bii^i";
		"OSAtomicCompareAndSwapLong" = "Bqq^q";
		"OSAtomicCompareAndSwapLongBarrier" = "Bqq^q";
		"OSAtomicCompareAndSwapPtr" = "B^v^v^?";
		"OSAtomicCompareAndSwapPtrBarrier" = "B^v^v^?";
		"OSAtomicDecrement32" = "i^i";
		"OSAtomicDecrement32Barrier" = "i^i";
		"OSAtomicDecrement64" = "q^q";
		"OSAtomicDecrement64Barrier" = "q^q";
		"OSAtomicDequeue" = "^v^{?=}Q";
		"OSAtomicEnqueue" = "v^{?=}^vQ";
		"OSAtomicIncrement32" = "i^i";
		"OSAtomicIncrement32Barrier" = "i^i";
		"OSAtomicIncrement64" = "q^q";
		"OSAtomicIncrement64Barrier" = "q^q";
		"OSAtomicOr32" = "iI^I";
		"OSAtomicOr32Barrier" = "iI^I";
		"OSAtomicOr32Orig" = "iI^I";
		"OSAtomicOr32OrigBarrier" = "iI^I";
		"OSAtomicTestAndClear" = "BI^v";
		"OSAtomicTestAndClearBarrier" = "BI^v";
		"OSAtomicTestAndSet" = "BI^v";
		"OSAtomicTestAndSetBarrier" = "BI^v";
		"OSAtomicXor32" = "iI^I";
		"OSAtomicXor32Barrier" = "iI^I";
		"OSAtomicXor32Orig" = "iI^I";
		"OSAtomicXor32OrigBarrier" = "iI^I";
		"OSMemoryBarrier" = "v";
		"OSSpinLockLock" = "v^i";
		"OSSpinLockTry" = "B^i";
		"OSSpinLockUnlock" = "v^i";
		// decl for __bzero not found
		// decl for __libplatform_init not found
		// decl for __os_once_reset not found
		// decl for __platform_sigaction not found
		"_longjmp" = "$longjmp";
		// decl for _os_alloc_once not found
		// decl for _os_lock_type_handoff not found
		// decl for _os_lock_type_nospin not found
		// decl for _os_lock_type_spin not found
		// decl for _os_lock_type_unfair not found
		// decl for _os_nospin_lock_lock not found
		// decl for _os_nospin_lock_trylock not found
		// decl for _os_nospin_lock_unlock not found
		// decl for _os_once not found
		// decl for _os_semaphore_create not found
		// decl for _os_semaphore_dispose not found
		// decl for _os_semaphore_signal not found
		// decl for _os_semaphore_wait not found
		// decl for _platform_bzero not found
		// decl for _platform_memccpy not found
		// decl for _platform_memchr not found
		// decl for _platform_memcmp not found
		// decl for _platform_memmove not found
		// decl for _platform_memset not found
		// decl for _platform_memset_pattern16 not found
		// decl for _platform_memset_pattern4 not found
		// decl for _platform_memset_pattern8 not found
		// decl for _platform_strchr not found
		// decl for _platform_strcmp not found
		// decl for _platform_strcpy not found
		// decl for _platform_strlcat not found
		// decl for _platform_strlcpy not found
		// decl for _platform_strlen not found
		// decl for _platform_strncmp not found
		// decl for _platform_strncpy not found
		// decl for _platform_strnlen not found
		// decl for _platform_strstr not found
		"_setjmp" = "$setjmp";
		// decl for _simple_asl_log not found
		// decl for _simple_asl_log_prog not found
		// decl for _simple_asl_msg_new not found
		// decl for _simple_asl_msg_set not found
		// decl for _simple_asl_send not found
		// decl for _simple_dprintf not found
		// decl for _simple_esappend not found
		// decl for _simple_esprintf not found
		// decl for _simple_getenv not found
		// decl for _simple_put not found
		// decl for _simple_putline not found
		// decl for _simple_salloc not found
		// decl for _simple_sappend not found
		// decl for _simple_sfree not found
		// decl for _simple_sprintf not found
		// decl for _simple_sresize not found
		// decl for _simple_string not found
		// decl for _simple_vdprintf not found
		// decl for _simple_vesprintf not found
		// decl for _simple_vsprintf not found
		// decl for _spin_lock not found
		// decl for _spin_lock_try not found
		// decl for _spin_unlock not found
		"ffs" = "ii";
		"ffsl" = "iq";
		"ffsll" = "iq";
		"fls" = "ii";
		"flsl" = "iq";
		"flsll" = "iq";
		// decl for getcontext not found
		"longjmp" = "$longjmp";
		// decl for makecontext not found
		// decl for os_lock_lock not found
		// decl for os_lock_trylock not found
		// decl for os_lock_unlock not found
		"os_unfair_lock_assert_not_owner" = "v^{os_unfair_lock_s=}";
		"os_unfair_lock_assert_owner" = "v^{os_unfair_lock_s=}";
		"os_unfair_lock_lock" = "v^{os_unfair_lock_s=}";
		// decl for os_unfair_lock_lock_no_tsd_4libpthread not found
		// decl for os_unfair_lock_lock_with_options not found
		// decl for os_unfair_lock_lock_with_options_4Libc not found
		"os_unfair_lock_trylock" = "B^{os_unfair_lock_s=}";
		"os_unfair_lock_unlock" = "v^{os_unfair_lock_s=}";
		// decl for os_unfair_lock_unlock_4Libc not found
		// decl for os_unfair_lock_unlock_no_tsd_4libpthread not found
		// decl for os_unfair_recursive_lock_lock_with_options not found
		// decl for os_unfair_recursive_lock_trylock not found
		// decl for os_unfair_recursive_lock_tryunlock4objc not found
		// decl for os_unfair_recursive_lock_unlock not found
		// decl for platform_task_attach not found
		// decl for platform_task_copy_next_thread not found
		// decl for platform_task_detach not found
		// decl for platform_task_is_64_bit not found
		// decl for platform_task_perform not found
		// decl for platform_task_resume_threads not found
		// decl for platform_task_suspend_threads not found
		// decl for platform_task_update_threads not found
		// decl for platform_thread_abort_safely not found
		// decl for platform_thread_get_pthread not found
		// decl for platform_thread_get_state not found
		// decl for platform_thread_get_unique_id not found
		// decl for platform_thread_info not found
		// decl for platform_thread_perform not found
		// decl for platform_thread_release not found
		// decl for platform_thread_resume not found
		// decl for platform_thread_set_state not found
		// decl for platform_thread_suspend not found
		// decl for setcontext not found
		"setjmp" = "$setjmp";
		// decl for siglongjmp not found
		// decl for sigsetjmp not found
		// decl for spin_lock not found
		// decl for spin_lock_try not found
		// decl for spin_unlock not found
		// decl for swapcontext not found
		"sys_cache_control" = "ii^vQ";
		"sys_dcache_flush" = "v^vQ";
		"sys_icache_invalidate" = "v^vQ";
		// decl for pthread_dependency_fulfill_np$VARIANT$armv81 not found
		// decl for pthread_dependency_fulfill_np$VARIANT$mp not found
		// decl for pthread_dependency_wait_np$VARIANT$armv81 not found
		// decl for pthread_dependency_wait_np$VARIANT$mp not found
		// decl for ___chkstk_darwin not found
		// decl for __is_threaded not found
		// decl for __pthread_init not found
		// decl for __pthread_workqueue_setkill not found
		// decl for __unix_conforming not found
		// decl for _pthread_atfork_child not found
		// decl for _pthread_atfork_child_handlers not found
		// decl for _pthread_atfork_parent not found
		// decl for _pthread_atfork_parent_handlers not found
		// decl for _pthread_atfork_prepare not found
		// decl for _pthread_atfork_prepare_handlers not found
		// decl for _pthread_clear_qos_tsd not found
		// decl for _pthread_exit_if_canceled not found
		// decl for _pthread_fork_child not found
		// decl for _pthread_fork_child_postinit not found
		// decl for _pthread_fork_parent not found
		// decl for _pthread_fork_prepare not found
		// decl for _pthread_is_threaded not found
		// decl for _pthread_joiner_wake not found
		// decl for _pthread_override_qos_class_end_direct not found
		// decl for _pthread_override_qos_class_start_direct not found
		// decl for _pthread_qos_class_decode not found
		// decl for _pthread_qos_class_encode not found
		// decl for _pthread_qos_class_encode_workqueue not found
		// decl for _pthread_qos_override_end_direct not found
		// decl for _pthread_qos_override_start_direct not found
		// decl for _pthread_self not found
		// decl for _pthread_set_properties_self not found
		// decl for _pthread_set_self not found
		// decl for _pthread_setspecific_static not found
		// decl for _pthread_start not found
		// decl for _pthread_testcancel not found
		// decl for _pthread_workloop_create not found
		// decl for _pthread_workloop_destroy not found
		// decl for _pthread_workqueue_addthreads not found
		// decl for _pthread_workqueue_asynchronous_override_add not found
		// decl for _pthread_workqueue_asynchronous_override_reset_all_self not found
		// decl for _pthread_workqueue_asynchronous_override_reset_self not found
		// decl for _pthread_workqueue_init not found
		// decl for _pthread_workqueue_init_with_kevent not found
		// decl for _pthread_workqueue_init_with_workloop not found
		// decl for _pthread_workqueue_override_reset not found
		// decl for _pthread_workqueue_override_start_direct not found
		// decl for _pthread_workqueue_override_start_direct_check_owner not found
		// decl for _pthread_workqueue_set_event_manager_priority not found
		// decl for _pthread_workqueue_should_narrow not found
		// decl for _pthread_workqueue_supported not found
		// decl for _pthread_wqthread not found
		// decl for cthread_yield not found
		// decl for posix_spawnattr_get_qos_class_np not found
		// decl for posix_spawnattr_set_qos_class_np not found
		"pthread_atfork" = "i^?^?^?";
		"pthread_attr_destroy" = "i^{_opaque_pthread_attr_t=}";
		"pthread_attr_get_qos_class_np" = "i^{_opaque_pthread_attr_t=}^I^i";
		"pthread_attr_getdetachstate" = "i^{_opaque_pthread_attr_t=}^i";
		"pthread_attr_getguardsize" = "i^{_opaque_pthread_attr_t=}^Q";
		"pthread_attr_getinheritsched" = "i^{_opaque_pthread_attr_t=}^i";
		"pthread_attr_getschedparam" = "i^{_opaque_pthread_attr_t=}^{sched_param=}";
		"pthread_attr_getschedpolicy" = "i^{_opaque_pthread_attr_t=}^i";
		"pthread_attr_getscope" = "i^{_opaque_pthread_attr_t=}^i";
		"pthread_attr_getstack" = "i^{_opaque_pthread_attr_t=}^?^Q";
		"pthread_attr_getstackaddr" = "i^{_opaque_pthread_attr_t=}^?";
		"pthread_attr_getstacksize" = "i^{_opaque_pthread_attr_t=}^Q";
		"pthread_attr_init" = "i^{_opaque_pthread_attr_t=}";
		"pthread_attr_set_qos_class_np" = "i^{_opaque_pthread_attr_t=}Ii";
		// decl for pthread_attr_setcpupercent_np not found
		"pthread_attr_setdetachstate" = "i^{_opaque_pthread_attr_t=}i";
		"pthread_attr_setguardsize" = "i^{_opaque_pthread_attr_t=}Q";
		"pthread_attr_setinheritsched" = "i^{_opaque_pthread_attr_t=}i";
		"pthread_attr_setschedparam" = "i^{_opaque_pthread_attr_t=}^{sched_param=}";
		"pthread_attr_setschedpolicy" = "i^{_opaque_pthread_attr_t=}i";
		"pthread_attr_setscope" = "i^{_opaque_pthread_attr_t=}i";
		"pthread_attr_setstack" = "i^{_opaque_pthread_attr_t=}^vQ";
		"pthread_attr_setstackaddr" = "i^{_opaque_pthread_attr_t=}^v";
		"pthread_attr_setstacksize" = "i^{_opaque_pthread_attr_t=}Q";
		"pthread_cancel" = "i^{_opaque_pthread_t=}";
		// decl for pthread_chdir_np not found
		"pthread_cond_broadcast" = "i^{_opaque_pthread_cond_t=}";
		"pthread_cond_destroy" = "i^{_opaque_pthread_cond_t=}";
		"pthread_cond_init" = "i^{_opaque_pthread_cond_t=}^{_opaque_pthread_condattr_t=}";
		"pthread_cond_signal" = "i^{_opaque_pthread_cond_t=}";
		"pthread_cond_signal_thread_np" = "i^{_opaque_pthread_cond_t=}^{_opaque_pthread_t=}";
		"pthread_cond_timedwait" = "i^{_opaque_pthread_cond_t=}^{_opaque_pthread_mutex_t=}^{timespec=}";
		// decl for pthread_cond_timedwait$NOCANCEL not found
		"pthread_cond_timedwait_relative_np" = "i^{_opaque_pthread_cond_t=}^{_opaque_pthread_mutex_t=}^{timespec=}";
		"pthread_cond_wait" = "i^{_opaque_pthread_cond_t=}^{_opaque_pthread_mutex_t=}";
		// decl for pthread_cond_wait$NOCANCEL not found
		"pthread_condattr_destroy" = "i^{_opaque_pthread_condattr_t=}";
		"pthread_condattr_getpshared" = "i^{_opaque_pthread_condattr_t=}^i";
		"pthread_condattr_init" = "i^{_opaque_pthread_condattr_t=}";
		"pthread_condattr_setpshared" = "i^{_opaque_pthread_condattr_t=}i";
		"pthread_create" = "i^^{_opaque_pthread_t=}^{_opaque_pthread_attr_t=}^?^v";
		// decl for pthread_create_from_mach_thread not found
		"pthread_create_suspended_np" = "i^^{_opaque_pthread_t=}^{_opaque_pthread_attr_t=}^?^v";
		// decl for pthread_dependency_fulfill_np not found
		// decl for pthread_dependency_init_np not found
		// decl for pthread_dependency_wait_np not found
		"pthread_detach" = "i^{_opaque_pthread_t=}";
		"pthread_equal" = "i^{_opaque_pthread_t=}^{_opaque_pthread_t=}";
		"pthread_exit" = "v^v";
		// decl for pthread_fchdir_np not found
		"pthread_from_mach_thread_np" = "^{_opaque_pthread_t=}I";
		"pthread_get_qos_class_np" = "i^{_opaque_pthread_t=}^I^i";
		"pthread_get_stackaddr_np" = "^v^{_opaque_pthread_t=}";
		"pthread_get_stacksize_np" = "Q^{_opaque_pthread_t=}";
		"pthread_getconcurrency" = "i";
		"pthread_getname_np" = "i^{_opaque_pthread_t=}*Q";
		"pthread_getschedparam" = "i^{_opaque_pthread_t=}^i^{sched_param=}";
		"pthread_getspecific" = "^vQ";
		// decl for pthread_introspection_hook_install not found
		"pthread_is_threaded_np" = "i";
		"pthread_join" = "i^{_opaque_pthread_t=}^?";
		// decl for pthread_join$NOCANCEL not found
		"pthread_key_create" = "i^Q^?";
		"pthread_key_delete" = "iQ";
		// decl for pthread_key_init_np not found
		"pthread_kill" = "i^{_opaque_pthread_t=}i";
		// decl for pthread_layout_offsets not found
		"pthread_mach_thread_np" = "I^{_opaque_pthread_t=}";
		"pthread_main_np" = "i";
		// decl for pthread_main_thread_np not found
		"pthread_mutex_destroy" = "i^{_opaque_pthread_mutex_t=}";
		"pthread_mutex_getprioceiling" = "i^{_opaque_pthread_mutex_t=}^i";
		"pthread_mutex_init" = "i^{_opaque_pthread_mutex_t=}^{_opaque_pthread_mutexattr_t=}";
		"pthread_mutex_lock" = "i^{_opaque_pthread_mutex_t=}";
		"pthread_mutex_setprioceiling" = "i^{_opaque_pthread_mutex_t=}i^i";
		"pthread_mutex_trylock" = "i^{_opaque_pthread_mutex_t=}";
		"pthread_mutex_unlock" = "i^{_opaque_pthread_mutex_t=}";
		"pthread_mutexattr_destroy" = "i^{_opaque_pthread_mutexattr_t=}";
		"pthread_mutexattr_getpolicy_np" = "i^{_opaque_pthread_mutexattr_t=}^i";
		"pthread_mutexattr_getprioceiling" = "i^{_opaque_pthread_mutexattr_t=}^i";
		"pthread_mutexattr_getprotocol" = "i^{_opaque_pthread_mutexattr_t=}^i";
		"pthread_mutexattr_getpshared" = "i^{_opaque_pthread_mutexattr_t=}^i";
		"pthread_mutexattr_gettype" = "i^{_opaque_pthread_mutexattr_t=}^i";
		"pthread_mutexattr_init" = "i^{_opaque_pthread_mutexattr_t=}";
		"pthread_mutexattr_setpolicy_np" = "i^{_opaque_pthread_mutexattr_t=}i";
		"pthread_mutexattr_setprioceiling" = "i^{_opaque_pthread_mutexattr_t=}i";
		"pthread_mutexattr_setprotocol" = "i^{_opaque_pthread_mutexattr_t=}i";
		"pthread_mutexattr_setpshared" = "i^{_opaque_pthread_mutexattr_t=}i";
		"pthread_mutexattr_settype" = "i^{_opaque_pthread_mutexattr_t=}i";
		"pthread_once" = "i^{_opaque_pthread_once_t=}^?";
		"pthread_override_qos_class_end_np" = "i^{pthread_override_s=}";
		"pthread_override_qos_class_start_np" = "^{pthread_override_s=}^{_opaque_pthread_t=}Ii";
		// decl for pthread_qos_max_parallelism not found
		"pthread_rwlock_destroy" = "i^{_opaque_pthread_rwlock_t=}";
		"pthread_rwlock_init" = "i^{_opaque_pthread_rwlock_t=}^{_opaque_pthread_rwlockattr_t=}";
		"pthread_rwlock_rdlock" = "i^{_opaque_pthread_rwlock_t=}";
		"pthread_rwlock_tryrdlock" = "i^{_opaque_pthread_rwlock_t=}";
		"pthread_rwlock_trywrlock" = "i^{_opaque_pthread_rwlock_t=}";
		"pthread_rwlock_unlock" = "i^{_opaque_pthread_rwlock_t=}";
		"pthread_rwlock_wrlock" = "i^{_opaque_pthread_rwlock_t=}";
		"pthread_rwlockattr_destroy" = "i^{_opaque_pthread_rwlockattr_t=}";
		"pthread_rwlockattr_getpshared" = "i^{_opaque_pthread_rwlockattr_t=}^i";
		"pthread_rwlockattr_init" = "i^{_opaque_pthread_rwlockattr_t=}";
		"pthread_rwlockattr_setpshared" = "i^{_opaque_pthread_rwlockattr_t=}i";
		"pthread_self" = "^{_opaque_pthread_t=}";
		// decl for pthread_set_fixedpriority_self not found
		// decl for pthread_set_qos_class_np not found
		"pthread_set_qos_class_self_np" = "iIi";
		// decl for pthread_set_timeshare_self not found
		"pthread_setcancelstate" = "ii^i";
		"pthread_setcanceltype" = "ii^i";
		"pthread_setconcurrency" = "ii";
		"pthread_setname_np" = "i*";
		"pthread_setschedparam" = "i^{_opaque_pthread_t=}i^{sched_param=}";
		"pthread_setspecific" = "iQ^v";
		"pthread_sigmask" = "ii^I^I";
		// decl for pthread_stack_frame_decode_np not found
		"pthread_testcancel" = "v";
		"pthread_threadid_np" = "i^{_opaque_pthread_t=}^Q";
		// decl for pthread_time_constraint_max_parallelism not found
		// decl for pthread_workqueue_addthreads_np not found
		// decl for pthread_workqueue_setdispatch_np not found
		// decl for pthread_workqueue_setdispatchoffset_np not found
		"pthread_yield_np" = "v";
		"qos_class_main" = "I";
		"qos_class_self" = "I";
		"sched_get_priority_max" = "ii";
		"sched_get_priority_min" = "ii";
		"sched_yield" = "i";
		"sigwait" = "i^I^i";
		// decl for sigwait$NOCANCEL not found
		// decl for start_wqthread not found
		// decl for thread_chkstk_darwin not found
		// decl for thread_start not found
		// decl for APP_SANDBOX_IOKIT_CLIENT not found
		// decl for APP_SANDBOX_MACH not found
		// decl for APP_SANDBOX_READ not found
		// decl for APP_SANDBOX_READ_WRITE not found
		// decl for IOS_SANDBOX_APPLICATION_GROUP not found
		// decl for IOS_SANDBOX_CONTAINER not found
		// decl for SANDBOX_CHECK_CANONICAL not found
		// decl for SANDBOX_CHECK_NOFOLLOW not found
		// decl for SANDBOX_CHECK_NO_APPROVAL not found
		// decl for SANDBOX_CHECK_NO_REPORT not found
		// decl for SANDBOX_EXTENSION_CANONICAL not found
		// decl for SANDBOX_EXTENSION_DEFAULT not found
		// decl for SANDBOX_EXTENSION_MAGIC not found
		// decl for SANDBOX_EXTENSION_NO_REPORT not found
		// decl for SANDBOX_EXTENSION_PREFIXMATCH not found
		// decl for SANDBOX_EXTENSION_UNRESOLVED not found
		// decl for _amkrtemp not found
		// decl for _sandbox_in_a_container not found
		// decl for rootless_allows_task_for_pid not found
		// decl for rootless_check_datavault_flag not found
		// decl for rootless_check_restricted_flag not found
		// decl for rootless_check_trusted not found
		// decl for rootless_check_trusted_class not found
		// decl for rootless_check_trusted_fd not found
		// decl for rootless_convert_to_datavault not found
		// decl for rootless_mkdir_datavault not found
		// decl for rootless_mkdir_nounlink not found
		// decl for rootless_mkdir_restricted not found
		// decl for rootless_protected_volume not found
		// decl for rootless_register_trusted_storage_class not found
		// decl for rootless_restricted_environment not found
		// decl for rootless_suspend not found
		// decl for rootless_trusted_by_self_token not found
		// decl for rootless_verify_trusted_by_self_token not found
		// decl for sandbox_check not found
		// decl for sandbox_check_bulk not found
		// decl for sandbox_check_by_audit_token not found
		// decl for sandbox_check_by_reference not found
		// decl for sandbox_check_by_uniqueid not found
		// decl for sandbox_consume_extension not found
		// decl for sandbox_consume_fs_extension not found
		// decl for sandbox_consume_mach_extension not found
		// decl for sandbox_container_path_for_pid not found
		// decl for sandbox_extension_consume not found
		// decl for sandbox_extension_issue_file not found
		// decl for sandbox_extension_issue_file_to_process not found
		// decl for sandbox_extension_issue_file_to_process_by_pid not found
		// decl for sandbox_extension_issue_file_to_self not found
		// decl for sandbox_extension_issue_generic not found
		// decl for sandbox_extension_issue_generic_to_process not found
		// decl for sandbox_extension_issue_generic_to_process_by_pid not found
		// decl for sandbox_extension_issue_iokit_registry_entry_class not found
		// decl for sandbox_extension_issue_iokit_registry_entry_class_to_process not found
		// decl for sandbox_extension_issue_iokit_registry_entry_class_to_process_by_pid not found
		// decl for sandbox_extension_issue_iokit_user_client_class not found
		// decl for sandbox_extension_issue_mach not found
		// decl for sandbox_extension_issue_mach_to_process not found
		// decl for sandbox_extension_issue_mach_to_process_by_pid not found
		// decl for sandbox_extension_issue_posix_ipc not found
		// decl for sandbox_extension_reap not found
		// decl for sandbox_extension_release not found
		// decl for sandbox_extension_release_file not found
		// decl for sandbox_extension_update_file not found
		"sandbox_free_error" = "v*";
		"sandbox_init" = "i*Q^?";
		// decl for sandbox_init_from_pid not found
		// decl for sandbox_init_with_extensions not found
		// decl for sandbox_init_with_parameters not found
		// decl for sandbox_issue_extension not found
		// decl for sandbox_issue_fs_extension not found
		// decl for sandbox_issue_fs_rw_extension not found
		// decl for sandbox_issue_mach_extension not found
		// decl for sandbox_note not found
		// decl for sandbox_passthrough_access not found
		// decl for sandbox_reference_release not found
		// decl for sandbox_reference_retain_by_audit_token not found
		// decl for sandbox_release_fs_extension not found
		// decl for sandbox_set_container_path_for_application_group not found
		// decl for sandbox_set_container_path_for_signing_id not found
		// decl for sandbox_spawnattrs_getcontainer not found
		// decl for sandbox_spawnattrs_getprofilename not found
		// decl for sandbox_spawnattrs_init not found
		// decl for sandbox_spawnattrs_setcontainer not found
		// decl for sandbox_spawnattrs_setprofilename not found
		// decl for sandbox_suspend not found
		// decl for sandbox_unsuspend not found
		// decl for _symptoms_daemon_fallback_initial_disposition not found
		// decl for _symptoms_daemon_fallback_subseq_disposition not found
		// decl for _symptoms_is_daemon_fallback_blacklisted not found
		// decl for symptom_framework_init not found
		// decl for symptom_framework_set_version not found
		// decl for symptom_new not found
		// decl for symptom_send not found
		// decl for symptom_send_immediate not found
		// decl for symptom_set_additional_qualifier not found
		// decl for symptom_set_qualifier not found
		// decl for _libtrace_fork_child not found
		// decl for _libtrace_init not found
		"_os_activity_create" = "^{os_activity_s=}^v*^{os_activity_s=}I";
		// decl for _os_activity_current not found
		"_os_activity_initiate" = "v^v*I^?";
		"_os_activity_initiate_f" = "v^v*I^v^?";
		"_os_activity_label_useraction" = "v^v*";
		// decl for _os_activity_none not found
		"_os_activity_set_breadcrumb" = "v^v*";
		"_os_activity_start" = "^{os_activity_s=}^v*I";
		// decl for _os_activity_stream_entry_encode not found
		// decl for _os_log_create not found
		// decl for _os_log_debug not found
		// decl for _os_log_default not found
		// decl for _os_log_disabled not found
		// decl for _os_log_error not found
		// decl for _os_log_error_impl not found
		// decl for _os_log_fault not found
		// decl for _os_log_fault_impl not found
		// decl for _os_log_impl not found
		// decl for _os_log_internal not found
		// decl for _os_log_pack_fill not found
		// decl for _os_log_pack_size not found
		// decl for _os_log_preferences_compute not found
		// decl for _os_log_preferences_load not found
		// decl for _os_log_release not found
		// decl for _os_log_set_nscf_formatter not found
		// decl for _os_signpost_emit_impl not found
		// decl for _os_signpost_emit_unreliably_impl not found
		// decl for _os_signpost_emit_unreliably_with_name_impl not found
		// decl for _os_signpost_emit_with_name_impl not found
		// decl for _os_signpost_pack_fill not found
		// decl for _os_signpost_pack_send not found
		// decl for _os_state_request_for_pidlist not found
		// decl for _os_trace_atm_diagnostic_config not found
		// decl for _os_trace_calloc not found
		// decl for _os_trace_fdscandir_b not found
		// decl for _os_trace_get_boot_uuid not found
		// decl for _os_trace_get_image_info not found
		// decl for _os_trace_get_times_now not found
		// decl for _os_trace_intprefsdir_path not found
		// decl for _os_trace_is_development_build not found
		// decl for _os_trace_log_simple not found
		// decl for _os_trace_macho_for_each_slice not found
		// decl for _os_trace_malloc not found
		// decl for _os_trace_memdup not found
		// decl for _os_trace_mmap not found
		// decl for _os_trace_mmap_at not found
		// decl for _os_trace_mode_match_4tests not found
		// decl for _os_trace_prefs_latest_version_4tests not found
		// decl for _os_trace_prefsdir_path not found
		// decl for _os_trace_read_file_at not found
		// decl for _os_trace_read_plist_at not found
		// decl for _os_trace_realloc not found
		// decl for _os_trace_scandir_free_namelist not found
		// decl for _os_trace_set_diagnostic_flags not found
		// decl for _os_trace_strdup not found
		// decl for _os_trace_sysprefsdir_path not found
		"_os_trace_with_buffer" = "v^v*C^vQ^?";
		// decl for _os_trace_write not found
		// decl for _os_trace_writev not found
		// decl for _os_trace_zalloc not found
		"os_activity_apply" = "v^{os_activity_s=}^?";
		"os_activity_apply_f" = "v^{os_activity_s=}^v^?";
		// decl for os_activity_diagnostic_for_pid not found
		"os_activity_end" = "v^{os_activity_s=}";
		// decl for os_activity_for_task_thread not found
		// decl for os_activity_for_thread not found
		"os_activity_get_active" = "I^Q^I";
		"os_activity_get_identifier" = "Q^{os_activity_s=}^Q";
		// decl for os_activity_iterate_activities not found
		// decl for os_activity_iterate_breadcrumbs not found
		// decl for os_activity_iterate_messages not found
		// decl for os_activity_iterate_processes not found
		// decl for os_activity_messages_for_thread not found
		"os_activity_scope_enter" = "v^{os_activity_s=}^{os_activity_scope_state_s=}";
		"os_activity_scope_leave" = "v^{os_activity_scope_state_s=}";
		// decl for os_log_backtrace_copy_description not found
		// decl for os_log_backtrace_copy_serialized_buffer not found
		// decl for os_log_backtrace_create_from_buffer not found
		// decl for os_log_backtrace_create_from_current not found
		// decl for os_log_backtrace_create_from_pcs not found
		// decl for os_log_backtrace_destroy not found
		// decl for os_log_backtrace_get_frames not found
		// decl for os_log_backtrace_get_length not found
		// decl for os_log_backtrace_print_to_blob not found
		// decl for os_log_backtrace_serialize_to_blob not found
		// decl for os_log_create not found
		// decl for os_log_errors_count not found
		// decl for os_log_faults_count not found
		// decl for os_log_fmt_compose not found
		// decl for os_log_fmt_convert_trace not found
		// decl for os_log_fmt_extract_pubdata not found
		// decl for os_log_fmt_get_plugin not found
		// decl for os_log_get_type not found
		// decl for os_log_is_debug_enabled not found
		// decl for os_log_is_enabled not found
		// decl for os_log_pack_compose not found
		// decl for os_log_pack_send not found
		// decl for os_log_pack_send_and_compose not found
		// decl for os_log_set_client_type not found
		// decl for os_log_set_enabled not found
		// decl for os_log_shim_enabled not found
		// decl for os_log_shim_legacy_logging_enabled not found
		// decl for os_log_shim_with_CFString not found
		// decl for os_log_type_enabled not found
		// decl for os_log_with_args not found
		// decl for os_signpost_enabled not found
		// decl for os_signpost_id_generate not found
		// decl for os_signpost_id_make_with_pointer not found
		// decl for os_signpost_set_introspection_hook_4Perf not found
		// decl for os_state_add_handler not found
		// decl for os_state_remove_handler not found
		// decl for os_trace_add_task_mode not found
		// decl for os_trace_clear_task_mode not found
		"os_trace_debug_enabled" = "B";
		// decl for os_trace_get_code not found
		// decl for os_trace_get_mode not found
		// decl for os_trace_get_task_mode not found
		// decl for os_trace_get_type not found
		"os_trace_info_enabled" = "B";
		// decl for os_trace_set_mode not found
		// decl for os_trace_set_mode_mask not found
		// decl for os_trace_set_task_mode not found
		// decl for _Unwind_Backtrace not found
		// decl for _Unwind_FindEnclosingFunction not found
		// decl for _Unwind_Find_FDE not found
		// decl for _Unwind_ForcedUnwind not found
		// decl for _Unwind_RaiseException not found
		// decl for _Unwind_Resume not found
		// decl for _Unwind_Resume_or_Rethrow not found
		// decl for __deregister_frame not found
		// decl for __register_frame not found
		"unw_get_fpreg" = "i^{unw_cursor_t=}i^d";
		"unw_get_proc_info" = "i^{unw_cursor_t=}^{unw_proc_info_t=}";
		"unw_get_proc_name" = "i^{unw_cursor_t=}*Q^Q";
		"unw_get_reg" = "i^{unw_cursor_t=}i^Q";
		"unw_init_local" = "i^{unw_cursor_t=}^{unw_context_t=}";
		"unw_is_fpreg" = "i^{unw_cursor_t=}i";
		"unw_is_signal_frame" = "i^{unw_cursor_t=}";
		// decl for unw_iterate_dwarf_unwind_cache not found
		"unw_regname" = "*^{unw_cursor_t=}i";
		"unw_resume" = "i^{unw_cursor_t=}";
		"unw_set_fpreg" = "i^{unw_cursor_t=}id";
		"unw_set_reg" = "i^{unw_cursor_t=}iQ";
		"unw_step" = "i^{unw_cursor_t=}";
		// decl for _Unwind_DeleteException not found
		// decl for _Unwind_GetCFA not found
		// decl for _Unwind_GetDataRelBase not found
		// decl for _Unwind_GetGR not found
		// decl for _Unwind_GetIP not found
		// decl for _Unwind_GetIPInfo not found
		// decl for _Unwind_GetLanguageSpecificData not found
		// decl for _Unwind_GetRegionStart not found
		// decl for _Unwind_GetTextRelBase not found
		// decl for _Unwind_SetGR not found
		// decl for _Unwind_SetIP not found
		"unw_getcontext" = "i^{unw_context_t=}";
		// decl for _vminterpose_init not found
		// decl for XPC_ACTIVITY_ALLOW_BATTERY not found
		// decl for XPC_ACTIVITY_APP_REFRESH not found
		// decl for XPC_ACTIVITY_CHECK_IN not found
		// decl for XPC_ACTIVITY_COMMUNICATES_WITH_PAIRED_DEVICE not found
		// decl for XPC_ACTIVITY_CPU_INTENSIVE not found
		// decl for XPC_ACTIVITY_DELAY not found
		// decl for XPC_ACTIVITY_DESIRED_MOTION_STATE not found
		// decl for XPC_ACTIVITY_DO_IT_LATER not found
		// decl for XPC_ACTIVITY_DUET_ACTIVITY_SCHEDULER_DATA not found
		// decl for XPC_ACTIVITY_DUET_ATTRIBUTE_COST not found
		// decl for XPC_ACTIVITY_DUET_ATTRIBUTE_NAME not found
		// decl for XPC_ACTIVITY_DUET_ATTRIBUTE_VALUE not found
		// decl for XPC_ACTIVITY_EXCLUSIVE not found
		// decl for XPC_ACTIVITY_EXPECTED_DURATION not found
		// decl for XPC_ACTIVITY_GRACE_PERIOD not found
		// decl for XPC_ACTIVITY_GROUP_CONCURRENCY_LIMIT not found
		// decl for XPC_ACTIVITY_GROUP_NAME not found
		// decl for XPC_ACTIVITY_INTERVAL not found
		// decl for XPC_ACTIVITY_INTERVAL_15_MIN not found
		// decl for XPC_ACTIVITY_INTERVAL_1_DAY not found
		// decl for XPC_ACTIVITY_INTERVAL_1_HOUR not found
		// decl for XPC_ACTIVITY_INTERVAL_1_MIN not found
		// decl for XPC_ACTIVITY_INTERVAL_30_MIN not found
		// decl for XPC_ACTIVITY_INTERVAL_4_HOURS not found
		// decl for XPC_ACTIVITY_INTERVAL_5_MIN not found
		// decl for XPC_ACTIVITY_INTERVAL_7_DAYS not found
		// decl for XPC_ACTIVITY_INTERVAL_8_HOURS not found
		// decl for XPC_ACTIVITY_MAY_REBOOT_DEVICE not found
		// decl for XPC_ACTIVITY_MEMORY_INTENSIVE not found
		// decl for XPC_ACTIVITY_MOTION_STATE_AUTOMOTIVE not found
		// decl for XPC_ACTIVITY_MOTION_STATE_AUTOMOTIVE_MOVING not found
		// decl for XPC_ACTIVITY_MOTION_STATE_AUTOMOTIVE_STATIONARY not found
		// decl for XPC_ACTIVITY_MOTION_STATE_CYCLING not found
		// decl for XPC_ACTIVITY_MOTION_STATE_RUNNING not found
		// decl for XPC_ACTIVITY_MOTION_STATE_STATIONARY not found
		// decl for XPC_ACTIVITY_MOTION_STATE_WALKING not found
		// decl for XPC_ACTIVITY_NETWORK_TRANSFER_BIDIRECTIONAL not found
		// decl for XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION not found
		// decl for XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION_DOWNLOAD not found
		// decl for XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION_UPLOAD not found
		// decl for XPC_ACTIVITY_NETWORK_TRANSFER_SIZE not found
		// decl for XPC_ACTIVITY_POST_INSTALL not found
		// decl for XPC_ACTIVITY_POWER_NAP not found
		// decl for XPC_ACTIVITY_PRIORITY not found
		// decl for XPC_ACTIVITY_PRIORITY_MAINTENANCE not found
		// decl for XPC_ACTIVITY_PRIORITY_UTILITY not found
		// decl for XPC_ACTIVITY_RANDOM_INITIAL_DELAY not found
		// decl for XPC_ACTIVITY_REPEATING not found
		// decl for XPC_ACTIVITY_REPLY_ENDPOINT not found
		// decl for XPC_ACTIVITY_REQUIRES_CLASS_A not found
		// decl for XPC_ACTIVITY_REQUIRES_CLASS_B not found
		// decl for XPC_ACTIVITY_REQUIRES_CLASS_C not found
		// decl for XPC_ACTIVITY_REQUIRE_BATTERY_LEVEL not found
		// decl for XPC_ACTIVITY_REQUIRE_HDD_SPINNING not found
		// decl for XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY not found
		// decl for XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY not found
		// decl for XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP not found
		// decl for XPC_ACTIVITY_REQUIRE_SIGNIFICANT_USER_INACTIVITY not found
		// decl for XPC_ACTIVITY_SEQUENCE_NUMBER not found
		// decl for XPC_ACTIVITY_SHOULD_WAKE_DEVICE not found
		// decl for XPC_ACTIVITY_USES_DUET_POWER_BUDGETING not found
		// decl for XPC_COALITION_INFO_KEY_BUNDLE_IDENTIFIER not found
		// decl for XPC_COALITION_INFO_KEY_CID not found
		// decl for XPC_COALITION_INFO_KEY_NAME not found
		// decl for XPC_COALITION_INFO_KEY_RESOURCE_USAGE_BLOB not found
		// decl for _launch_msg2 not found
		// decl for _libxpc_initializer not found
		// decl for _spawn_via_launchd not found
		// decl for _system_version_copy_string_plist not found
		// decl for _system_version_copy_string_sysctl not found
		// decl for _system_version_fallback not found
		// decl for _system_version_parse_string not found
		// decl for _vproc_get_last_exit_status not found
		// decl for _vproc_grab_subset not found
		// decl for _vproc_kickstart_by_label not found
		// decl for _vproc_log not found
		// decl for _vproc_log_error not found
		// decl for _vproc_logv not found
		// decl for _vproc_pid_is_managed not found
		// decl for _vproc_post_fork_ping not found
		// decl for _vproc_send_signal_by_label not found
		// decl for _vproc_set_global_on_demand not found
		// decl for _vproc_standby_begin not found
		// decl for _vproc_standby_count not found
		// decl for _vproc_standby_end not found
		// decl for _vproc_standby_timeout not found
		// decl for _vproc_transaction_begin not found
		// decl for _vproc_transaction_count not found
		// decl for _vproc_transaction_count_for_pid not found
		// decl for _vproc_transaction_end not found
		// decl for _vproc_transaction_set_clean_callback not found
		// decl for _vproc_transaction_try_exit not found
		// decl for _vproc_transactions_enable not found
		// decl for _vprocmgr_detach_from_console not found
		// decl for _vprocmgr_getsocket not found
		// decl for _vprocmgr_init not found
		// decl for _vprocmgr_log_drain not found
		// decl for _vprocmgr_log_forward not found
		// decl for _vprocmgr_move_subset_to_user not found
		// decl for _vprocmgr_switch_to_session not found
		// decl for _xpc_bool_create_distinct not found
		// decl for _xpc_bool_false not found
		// decl for _xpc_bool_set_value not found
		// decl for _xpc_bool_true not found
		// decl for _xpc_connection_set_event_handler_f not found
		// decl for _xpc_data_set_value not found
		// decl for _xpc_dictionary_create_reply_with_port not found
		// decl for _xpc_dictionary_get_pointer_by_handle not found
		// decl for _xpc_dictionary_get_reply_msg_id not found
		// decl for _xpc_dictionary_get_reply_port not found
		// decl for _xpc_dictionary_set_pointer_by_handle not found
		// decl for _xpc_dictionary_set_remote_connection not found
		// decl for _xpc_dictionary_set_reply_msg_id not found
		// decl for _xpc_double_set_value not found
		// decl for _xpc_error_connection_interrupted not found
		// decl for _xpc_error_connection_invalid not found
		// decl for _xpc_error_key_description not found
		// decl for _xpc_error_termination_imminent not found
		// decl for _xpc_event_key_name not found
		// decl for _xpc_event_key_stream_name not found
		// decl for _xpc_int64_set_value not found
		// decl for _xpc_pipe_handle_mig not found
		// decl for _xpc_runtime_get_entitlements_data not found
		// decl for _xpc_runtime_get_self_entitlements not found
		// decl for _xpc_runtime_is_app_sandboxed not found
		// decl for _xpc_serializer_create_from_wire not found
		// decl for _xpc_serializer_unpack not found
		// decl for _xpc_service_last_xref_cancel not found
		// decl for _xpc_spawnattr_pack_string not found
		// decl for _xpc_spawnattr_pack_string_fragment not found
		// decl for _xpc_spawnattr_unpack_string not found
		// decl for _xpc_spawnattr_unpack_strings not found
		// decl for _xpc_string_set_value not found
		// decl for _xpc_type_activity not found
		// decl for _xpc_type_array not found
		// decl for _xpc_type_base not found
		// decl for _xpc_type_bool not found
		// decl for _xpc_type_bundle not found
		// decl for _xpc_type_connection not found
		// decl for _xpc_type_data not found
		// decl for _xpc_type_date not found
		// decl for _xpc_type_dictionary not found
		// decl for _xpc_type_double not found
		// decl for _xpc_type_endpoint not found
		// decl for _xpc_type_error not found
		// decl for _xpc_type_fd not found
		// decl for _xpc_type_file_transfer not found
		// decl for _xpc_type_int64 not found
		// decl for _xpc_type_mach_recv not found
		// decl for _xpc_type_mach_send not found
		// decl for _xpc_type_null not found
		// decl for _xpc_type_pipe not found
		// decl for _xpc_type_pointer not found
		// decl for _xpc_type_serializer not found
		// decl for _xpc_type_service not found
		// decl for _xpc_type_service_instance not found
		// decl for _xpc_type_shmem not found
		// decl for _xpc_type_string not found
		// decl for _xpc_type_uint64 not found
		// decl for _xpc_type_uuid not found
		// decl for bootstrap_check_in not found
		// decl for bootstrap_check_in2 not found
		// decl for bootstrap_check_in3 not found
		// decl for bootstrap_create_server not found
		// decl for bootstrap_create_service not found
		// decl for bootstrap_get_root not found
		// decl for bootstrap_info not found
		// decl for bootstrap_init not found
		// decl for bootstrap_look_up not found
		// decl for bootstrap_look_up2 not found
		// decl for bootstrap_look_up3 not found
		// decl for bootstrap_look_up_per_user not found
		// decl for bootstrap_lookup_children not found
		// decl for bootstrap_parent not found
		// decl for bootstrap_register not found
		// decl for bootstrap_register2 not found
		// decl for bootstrap_status not found
		// decl for bootstrap_strerror not found
		// decl for bootstrap_subset not found
		// decl for bootstrap_unprivileged not found
		// decl for create_and_switch_to_per_session_launchd not found
		// decl for launch_activate_socket not found
		// decl for launch_add_external_service not found
		// decl for launch_bootout_user_service_4coresim not found
		// decl for launch_copy_busy_extension_instances not found
		// decl for launch_copy_extension_properties not found
		// decl for launch_copy_extension_properties_for_pid not found
		// decl for launch_copy_properties_for_pid_4assertiond not found
		// decl for launch_create_persona not found
		// decl for launch_data_alloc not found
		// decl for launch_data_array_get_count not found
		// decl for launch_data_array_get_index not found
		// decl for launch_data_array_set_index not found
		// decl for launch_data_copy not found
		// decl for launch_data_dict_get_count not found
		// decl for launch_data_dict_insert not found
		// decl for launch_data_dict_iterate not found
		// decl for launch_data_dict_lookup not found
		// decl for launch_data_dict_remove not found
		// decl for launch_data_free not found
		// decl for launch_data_get_bool not found
		// decl for launch_data_get_errno not found
		// decl for launch_data_get_fd not found
		// decl for launch_data_get_integer not found
		// decl for launch_data_get_machport not found
		// decl for launch_data_get_opaque not found
		// decl for launch_data_get_opaque_size not found
		// decl for launch_data_get_real not found
		// decl for launch_data_get_string not found
		// decl for launch_data_get_type not found
		// decl for launch_data_new_bool not found
		// decl for launch_data_new_errno not found
		// decl for launch_data_new_fd not found
		// decl for launch_data_new_integer not found
		// decl for launch_data_new_machport not found
		// decl for launch_data_new_opaque not found
		// decl for launch_data_new_real not found
		// decl for launch_data_new_string not found
		// decl for launch_data_pack not found
		// decl for launch_data_set_bool not found
		// decl for launch_data_set_errno not found
		// decl for launch_data_set_fd not found
		// decl for launch_data_set_integer not found
		// decl for launch_data_set_machport not found
		// decl for launch_data_set_opaque not found
		// decl for launch_data_set_real not found
		// decl for launch_data_set_string not found
		// decl for launch_data_unpack not found
		// decl for launch_destroy_persona not found
		// decl for launch_disable_directory not found
		// decl for launch_enable_directory not found
		// decl for launch_extension_check_in_live_4UIKit not found
		// decl for launch_extension_property_bundle_id not found
		// decl for launch_extension_property_host_bundle_id not found
		// decl for launch_extension_property_host_pid not found
		// decl for launch_extension_property_path not found
		// decl for launch_extension_property_pid not found
		// decl for launch_extension_property_version not found
		// decl for launch_extension_property_xpc_bundle not found
		// decl for launch_get_fd not found
		// decl for launch_get_service_enabled not found
		// decl for launch_get_system_service_enabled not found
		// decl for launch_msg not found
		// decl for launch_path_for_user_service_4coresim not found
		// decl for launch_remove_external_service not found
		// decl for launch_set_service_enabled not found
		// decl for launch_set_system_service_enabled not found
		// decl for launch_socket_service_check_in not found
		// decl for launch_version_for_user_service_4coresim not found
		// decl for launch_wait not found
		// decl for launchd_close not found
		// decl for launchd_fdopen not found
		// decl for launchd_getfd not found
		// decl for launchd_msg_recv not found
		// decl for launchd_msg_send not found
		// decl for load_launchd_jobs_at_loginwindow_prompt not found
		// decl for mpm_uncork_fork not found
		// decl for mpm_wait not found
		// decl for os_system_version_get_current_version not found
		// decl for os_system_version_sim_get_current_host_version not found
		// decl for os_transaction_copy_description not found
		// decl for os_transaction_create not found
		// decl for os_transaction_needs_more_time not found
		// decl for place_hold_on_real_loginwindow not found
		// decl for reboot2 not found
		// decl for reboot3 not found
		// decl for vproc_release not found
		// decl for vproc_retain not found
		// decl for vproc_standby_begin not found
		// decl for vproc_standby_end not found
		// decl for vproc_swap_complex not found
		// decl for vproc_swap_integer not found
		// decl for vproc_swap_string not found
		// decl for vproc_transaction_begin not found
		// decl for vproc_transaction_end not found
		// decl for vprocmgr_lookup_vproc not found
		// decl for xpc_activate_endpoint not found
		// decl for xpc_activity_copy_criteria not found
		// decl for xpc_activity_copy_dispatch_queue not found
		// decl for xpc_activity_debug not found
		// decl for xpc_activity_defer_until_network_change not found
		// decl for xpc_activity_defer_until_percentage not found
		// decl for xpc_activity_get_percentage not found
		// decl for xpc_activity_get_state not found
		// decl for xpc_activity_list not found
		// decl for xpc_activity_register not found
		// decl for xpc_activity_run not found
		// decl for xpc_activity_set_criteria not found
		// decl for xpc_activity_set_network_threshold not found
		// decl for xpc_activity_set_state not found
		// decl for xpc_activity_should_defer not found
		// decl for xpc_activity_unregister not found
		// decl for xpc_add_bundle not found
		// decl for xpc_add_bundles_for_domain not found
		// decl for xpc_array_append_value not found
		// decl for xpc_array_apply not found
		// decl for xpc_array_apply_f not found
		// decl for xpc_array_copy_mach_send not found
		// decl for xpc_array_create not found
		// decl for xpc_array_create_connection not found
		// decl for xpc_array_dup_fd not found
		// decl for xpc_array_get_array not found
		// decl for xpc_array_get_bool not found
		// decl for xpc_array_get_count not found
		// decl for xpc_array_get_data not found
		// decl for xpc_array_get_date not found
		// decl for xpc_array_get_dictionary not found
		// decl for xpc_array_get_double not found
		// decl for xpc_array_get_int64 not found
		// decl for xpc_array_get_pointer not found
		// decl for xpc_array_get_string not found
		// decl for xpc_array_get_uint64 not found
		// decl for xpc_array_get_uuid not found
		// decl for xpc_array_get_value not found
		// decl for xpc_array_set_bool not found
		// decl for xpc_array_set_connection not found
		// decl for xpc_array_set_data not found
		// decl for xpc_array_set_date not found
		// decl for xpc_array_set_double not found
		// decl for xpc_array_set_fd not found
		// decl for xpc_array_set_int64 not found
		// decl for xpc_array_set_mach_send not found
		// decl for xpc_array_set_pointer not found
		// decl for xpc_array_set_string not found
		// decl for xpc_array_set_uint64 not found
		// decl for xpc_array_set_uuid not found
		// decl for xpc_array_set_value not found
		// decl for xpc_atfork_child not found
		// decl for xpc_atfork_parent not found
		// decl for xpc_atfork_prepare not found
		// decl for xpc_bool_create not found
		// decl for xpc_bool_get_value not found
		// decl for xpc_bootstrap_process not found
		// decl for xpc_bootstrap_system not found
		// decl for xpc_bundle_copy_info_dictionary not found
		// decl for xpc_bundle_copy_resource_path not found
		// decl for xpc_bundle_copy_services not found
		// decl for xpc_bundle_create not found
		// decl for xpc_bundle_create_from_origin not found
		// decl for xpc_bundle_create_main not found
		// decl for xpc_bundle_get_executable_path not found
		// decl for xpc_bundle_get_info_dictionary not found
		// decl for xpc_bundle_get_path not found
		// decl for xpc_bundle_get_property not found
		// decl for xpc_bundle_get_xpcservice_dictionary not found
		// decl for xpc_bundle_populate not found
		// decl for xpc_bundle_resolve not found
		// decl for xpc_coalition_copy_info not found
		// decl for xpc_coalition_history_pipe_async not found
		// decl for xpc_connection_activate not found
		// decl for xpc_connection_cancel not found
		// decl for xpc_connection_copy_bundle_id not found
		// decl for xpc_connection_copy_entitlement_value not found
		// decl for xpc_connection_create not found
		// decl for xpc_connection_create_from_endpoint not found
		// decl for xpc_connection_create_listener not found
		// decl for xpc_connection_create_mach_service not found
		// decl for xpc_connection_enable_sim2host_4sim not found
		// decl for xpc_connection_enable_termination_imminent_event not found
		// decl for xpc_connection_get_asid not found
		// decl for xpc_connection_get_audit_token not found
		// decl for xpc_connection_get_context not found
		// decl for xpc_connection_get_egid not found
		// decl for xpc_connection_get_euid not found
		// decl for xpc_connection_get_instance not found
		// decl for xpc_connection_get_name not found
		// decl for xpc_connection_get_pid not found
		// decl for xpc_connection_is_extension not found
		// decl for xpc_connection_kill not found
		// decl for xpc_connection_resume not found
		// decl for xpc_connection_send_barrier not found
		// decl for xpc_connection_send_message not found
		// decl for xpc_connection_send_message_with_reply not found
		// decl for xpc_connection_send_message_with_reply_sync not found
		// decl for xpc_connection_send_notification not found
		// decl for xpc_connection_set_bootstrap not found
		// decl for xpc_connection_set_context not found
		// decl for xpc_connection_set_event_channel not found
		// decl for xpc_connection_set_event_handler not found
		// decl for xpc_connection_set_finalizer_f not found
		// decl for xpc_connection_set_instance not found
		// decl for xpc_connection_set_legacy not found
		// decl for xpc_connection_set_non_launching not found
		// decl for xpc_connection_set_oneshot_instance not found
		// decl for xpc_connection_set_privileged not found
		// decl for xpc_connection_set_qos_class_fallback not found
		// decl for xpc_connection_set_qos_class_floor not found
		// decl for xpc_connection_set_target_queue not found
		// decl for xpc_connection_set_target_uid not found
		// decl for xpc_connection_suspend not found
		// decl for xpc_copy not found
		// decl for xpc_copy_bootstrap not found
		// decl for xpc_copy_clean_description not found
		// decl for xpc_copy_code_signing_identity_for_token not found
		// decl for xpc_copy_debug_description not found
		// decl for xpc_copy_description not found
		// decl for xpc_copy_domain not found
		// decl for xpc_copy_entitlement_for_token not found
		// decl for xpc_copy_entitlements_data_for_token not found
		// decl for xpc_copy_entitlements_for_pid not found
		// decl for xpc_copy_event not found
		// decl for xpc_copy_event_entitlements not found
		// decl for xpc_copy_extension_sdk_entry not found
		// decl for xpc_copy_short_description not found
		// decl for xpc_create_from_plist not found
		// decl for xpc_create_from_plist_descriptor not found
		// decl for xpc_create_from_serialization not found
		// decl for xpc_create_from_serialization_with_ool not found
		// decl for xpc_create_reply_with_format not found
		// decl for xpc_create_reply_with_format_and_arguments not found
		// decl for xpc_create_with_format not found
		// decl for xpc_create_with_format_and_arguments not found
		// decl for xpc_data_create not found
		// decl for xpc_data_create_with_dispatch_data not found
		// decl for xpc_data_get_bytes not found
		// decl for xpc_data_get_bytes_ptr not found
		// decl for xpc_data_get_inline_max not found
		// decl for xpc_data_get_length not found
		// decl for xpc_date_create not found
		// decl for xpc_date_create_absolute not found
		// decl for xpc_date_create_from_current not found
		// decl for xpc_date_get_value not found
		// decl for xpc_date_get_value_absolute not found
		// decl for xpc_date_is_int64_range not found
		// decl for xpc_dictionary_apply not found
		// decl for xpc_dictionary_apply_f not found
		// decl for xpc_dictionary_begin_transaction not found
		// decl for xpc_dictionary_copy_basic_description not found
		// decl for xpc_dictionary_copy_mach_send not found
		// decl for xpc_dictionary_create not found
		// decl for xpc_dictionary_create_connection not found
		// decl for xpc_dictionary_create_reply not found
		// decl for xpc_dictionary_dup_fd not found
		// decl for xpc_dictionary_expects_reply not found
		// decl for xpc_dictionary_extract_mach_recv not found
		// decl for xpc_dictionary_get_array not found
		// decl for xpc_dictionary_get_audit_token not found
		// decl for xpc_dictionary_get_bool not found
		// decl for xpc_dictionary_get_connection not found
		// decl for xpc_dictionary_get_count not found
		// decl for xpc_dictionary_get_data not found
		// decl for xpc_dictionary_get_date not found
		// decl for xpc_dictionary_get_dictionary not found
		// decl for xpc_dictionary_get_double not found
		// decl for xpc_dictionary_get_int64 not found
		// decl for xpc_dictionary_get_pointer not found
		// decl for xpc_dictionary_get_remote_connection not found
		// decl for xpc_dictionary_get_string not found
		// decl for xpc_dictionary_get_uint64 not found
		// decl for xpc_dictionary_get_uuid not found
		// decl for xpc_dictionary_get_value not found
		// decl for xpc_dictionary_send_reply not found
		// decl for xpc_dictionary_set_bool not found
		// decl for xpc_dictionary_set_connection not found
		// decl for xpc_dictionary_set_data not found
		// decl for xpc_dictionary_set_date not found
		// decl for xpc_dictionary_set_double not found
		// decl for xpc_dictionary_set_fd not found
		// decl for xpc_dictionary_set_int64 not found
		// decl for xpc_dictionary_set_mach_recv not found
		// decl for xpc_dictionary_set_mach_send not found
		// decl for xpc_dictionary_set_pointer not found
		// decl for xpc_dictionary_set_string not found
		// decl for xpc_dictionary_set_uint64 not found
		// decl for xpc_dictionary_set_uuid not found
		// decl for xpc_dictionary_set_value not found
		// decl for xpc_dictionary_taint not found
		// decl for xpc_double_create not found
		// decl for xpc_double_get_value not found
		// decl for xpc_endpoint_copy_listener_port_4sim not found
		// decl for xpc_endpoint_create not found
		// decl for xpc_endpoint_create_mach_port_4sim not found
		// decl for xpc_equal not found
		// decl for xpc_event_publisher_activate not found
		// decl for xpc_event_publisher_create not found
		// decl for xpc_event_publisher_fire not found
		// decl for xpc_event_publisher_fire_noboost not found
		// decl for xpc_event_publisher_fire_with_reply not found
		// decl for xpc_event_publisher_get_subscriber_asid not found
		// decl for xpc_event_publisher_set_error_handler not found
		// decl for xpc_event_publisher_set_handler not found
		// decl for xpc_event_publisher_set_initial_load_completed_handler_4remoted not found
		// decl for xpc_event_publisher_set_subscriber_keepalive not found
		// decl for xpc_event_stream_check_in not found
		// decl for xpc_event_stream_check_in2 not found
		// decl for xpc_extension_type_init not found
		// decl for xpc_fd_create not found
		// decl for xpc_fd_dup not found
		// decl for xpc_file_transfer_cancel not found
		// decl for xpc_file_transfer_copy_io not found
		// decl for xpc_file_transfer_create_with_fd not found
		// decl for xpc_file_transfer_create_with_path not found
		// decl for xpc_file_transfer_get_size not found
		// decl for xpc_file_transfer_get_transfer_id not found
		// decl for xpc_file_transfer_send_finished not found
		// decl for xpc_file_transfer_set_transport_writing_callbacks not found
		// decl for xpc_file_transfer_write_finished not found
		// decl for xpc_file_transfer_write_to_fd not found
		// decl for xpc_file_transfer_write_to_path not found
		// decl for xpc_generate_audit_token not found
		// decl for xpc_get_attachment_endpoint not found
		// decl for xpc_get_class4NSXPC not found
		// decl for xpc_get_event_name not found
		// decl for xpc_get_type not found
		// decl for xpc_handle_service not found
		// decl for xpc_handle_subservice not found
		// decl for xpc_hash not found
		// decl for xpc_impersonate_user not found
		// decl for xpc_init_services not found
		// decl for xpc_inspect_copy_description not found
		// decl for xpc_inspect_copy_description_local not found
		// decl for xpc_inspect_copy_short_description not found
		// decl for xpc_inspect_copy_short_description_local not found
		// decl for xpc_install_remote_hooks not found
		// decl for xpc_int64_create not found
		// decl for xpc_int64_get_value not found
		// decl for xpc_look_up_endpoint not found
		// decl for xpc_mach_recv_create not found
		// decl for xpc_mach_recv_extract_right not found
		// decl for xpc_mach_send_copy_right not found
		// decl for xpc_mach_send_create not found
		// decl for xpc_mach_send_get_right not found
		// decl for xpc_main not found
		// decl for xpc_make_serialization not found
		// decl for xpc_make_serialization_with_ool not found
		// decl for xpc_null_create not found
		// decl for xpc_pipe_create not found
		// decl for xpc_pipe_create_from_port not found
		// decl for xpc_pipe_invalidate not found
		// decl for xpc_pipe_receive not found
		// decl for xpc_pipe_routine not found
		// decl for xpc_pipe_routine_async not found
		// decl for xpc_pipe_routine_forward not found
		// decl for xpc_pipe_routine_reply not found
		// decl for xpc_pipe_simpleroutine not found
		// decl for xpc_pipe_try_receive not found
		// decl for xpc_pointer_create not found
		// decl for xpc_pointer_get_value not found
		// decl for xpc_release not found
		// decl for xpc_retain not found
		// decl for xpc_serializer_create_wire_object not found
		// decl for xpc_service_create not found
		// decl for xpc_service_get_rendezvous_token not found
		// decl for xpc_service_instance_dup2 not found
		// decl for xpc_service_instance_get_context not found
		// decl for xpc_service_instance_get_host_pid not found
		// decl for xpc_service_instance_get_pid not found
		// decl for xpc_service_instance_get_type not found
		// decl for xpc_service_instance_is_configurable not found
		// decl for xpc_service_instance_run not found
		// decl for xpc_service_instance_set_binpref not found
		// decl for xpc_service_instance_set_context not found
		// decl for xpc_service_instance_set_cwd not found
		// decl for xpc_service_instance_set_endpoint not found
		// decl for xpc_service_instance_set_environment not found
		// decl for xpc_service_instance_set_finalizer_f not found
		// decl for xpc_service_instance_set_jetsam_properties not found
		// decl for xpc_service_instance_set_path not found
		// decl for xpc_service_instance_set_start_suspended not found
		// decl for xpc_service_set_attach_handler not found
		// decl for xpc_set_event not found
		// decl for xpc_set_event_state not found
		// decl for xpc_set_event_stream_handler not found
		// decl for xpc_set_event_with_flags not found
		// decl for xpc_set_idle_handler not found
		// decl for xpc_shmem_create not found
		// decl for xpc_shmem_create_readonly not found
		// decl for xpc_shmem_get_length not found
		// decl for xpc_shmem_map not found
		// decl for xpc_strerror not found
		// decl for xpc_string_create not found
		// decl for xpc_string_create_no_copy not found
		// decl for xpc_string_create_with_format not found
		// decl for xpc_string_create_with_format_and_arguments not found
		// decl for xpc_string_get_length not found
		// decl for xpc_string_get_string_ptr not found
		// decl for xpc_test_symbols_exported not found
		// decl for xpc_track_activity not found
		// decl for xpc_transaction_begin not found
		// decl for xpc_transaction_end not found
		// decl for xpc_transaction_exit_clean not found
		// decl for xpc_transaction_interrupt_clean_exit not found
		// decl for xpc_transactions_enable not found
		// decl for xpc_uint64_create not found
		// decl for xpc_uint64_get_value not found
		// decl for xpc_unbootstrap_system not found
		// decl for xpc_uuid_create not found
		// decl for xpc_uuid_get_bytes not found
		"__cxa_atexit" = "$__cxa_atexit";
	};
	"objc shims" = {
		"-[* initWithFormat:]" = "$NSSomethingWithFormat";
		"+[* stringWithFormat:]" = "$NSSomethingWithFormat";
		"-[* stringByAppendingFormat:]" = "$NSSomethingWithFormat";
		"-[* appendFormat:]" = "$NSSomethingWithFormat";
		"+[NSPredicate predicateWithFormat:]" = "$NSSomethingWithFormat";
		"+[NSException raise:format:]" = "$NSException_raise_format";
		"-[* initWithObjectsAndKeys:]" = "$nilTerminatedListOfObjects";
		"+[* dictionaryWithObjectsAndKeys:]" = "$nilTerminatedListOfObjects";
		"-[* initWithObjects:]" = "$nilTerminatedListOfObjects";
		"-[* arrayWithObjects:]" = "$nilTerminatedListOfObjects";
		"-[* setWithObjects:]" = "$nilTerminatedListOfObjects";
		"-[* orderedSetWithObjects:]" = "$nilTerminatedListOfObjects";
		"-[UIActionSheet initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:]" = "$nilTerminatedListOfObjects";
		// not actually shims
		"-[_UIAppearance setTintColor:]" = "v@:@";
	};
	"/usr/lib/libobjc.A.dylib" = {
		"_objc_getClassForTag" = "#S";
		"_objc_registerTaggedPointerClass" = "vS#";
		"NXCompareHashTables" = "B^{?=}^{?=}";
		"NXCompareMapTables" = "B^{?=}^{?=}";
		"NXCopyHashTable" = "^{?=}^{?=}";
		"NXCountHashTable" = "I^{?=}";
		"NXCountMapTable" = "I^{?=}";
		"NXCreateHashTable" = "^{?=}{?=^?^?^?i}I^v";
		"NXCreateHashTableFromZone" = "^{?=}{?=^?^?^?i}I^v^v";
		"NXCreateMapTable" = "^{?=}{?=^?^?^?i}I";
		"NXCreateMapTableFromZone" = "^{?=}{?=^?^?^?i}I^v";
		"NXEmptyHashTable" = "v^{?=}";
		"NXFreeHashTable" = "v^{?=}";
		"NXFreeMapTable" = "v^v";
		"NXHashGet" = "^v^{?=}^v";
		"NXHashInsert" = "^v^{?=}^v";
		"NXHashInsertIfAbsent" = "^v^{?=}^v";
		"NXHashMember" = "i^{?=}^v";
		"NXHashRemove" = "^v^{?=}^v";
		"NXInitHashState" = "{?=ii}^{?=}";
		"NXInitMapState" = "{?=i}^v";
		"NXMapGet" = "^v^v^v";
		"NXMapInsert" = "^v^v^v^v";
		"NXMapMember" = "^v^v^v^?";
		"NXMapRemove" = "^v^v^v";
		"NXNextHashState" = "i^{?=}^{?=}^?";
		"NXNextMapState" = "i^v^v^v^?";
		"NXNoEffectFree" = "v^v^v";
		"NXPtrHash" = "Q^v^v";
		"NXPtrIsEqual" = "i^v^v^v";
		"NXReallyFree" = "v^v^v";
		"NXResetHashTable" = "v^{?=}";
		"NXResetMapTable" = "v^v";
		"NXStrHash" = "Q^v^v";
		"NXStrIsEqual" = "i^v^v^v";
		"__objc_personality_v0" = "iiiQ^?^?";
		"_class_getIvarMemoryManagement" = "i#^?";
		"_class_isFutureClass" = "B#";
		"_objcInit" = "v";
		"_objc_atfork_child" = "v";
		"_objc_atfork_parent" = "v";
		"_objc_atfork_prepare" = "v";
		"_objc_autoreleasePoolPop" = "v^?";
		"_objc_autoreleasePoolPrint" = "v";
		"_objc_autoreleasePoolPush" = "^?";
		"_objc_deallocOnMainThreadHelper" = "v^?";
		"_objc_flush_caches" = "v#";
		"_objc_getFreedObjectClass" = "#";
		"_objc_init" = "v";
		"_objc_msgForward" = "$objc_msgForward";
		"_objc_realizeClassFromSwift" = "##^v";
		"_objc_rootAlloc" = "@#";
		"_objc_rootAllocWithZone" = "@#^?^?";
		"_objc_rootAutorelease" = "@@";
		"_objc_rootDealloc" = "v@";
		"_objc_rootFinalize" = "v@";
		"_objc_rootHash" = "Q@";
		"_objc_rootInit" = "@@";
		"_objc_rootIsDeallocating" = "B@";
		"_objc_rootRelease" = "v@";
		"_objc_rootReleaseWasZero" = "B@";
		"_objc_rootRetain" = "@@";
		"_objc_rootRetainCount" = "Q@";
		"_objc_rootTryRetain" = "B@";
		"_objc_rootZone" = "^?@";
		"_objc_setBadAllocHandler" = "v^?";
		"_objc_setClassCopyFixupHandler" = "v^?";
		"_protocol_getMethodTypeEncoding" = "*@:BB";
		"class_addIvar" = "B#*QC*";
		"class_addMethod" = "B#:^?*";
		"class_addMethodsBulk" = "^?#^?^?^?I^?";
		"class_addProperty" = "B#*^{?=}I";
		"class_addProtocol" = "B#@";
		"class_conformsToProtocol" = "B#@";
		"class_copyIvarList" = "^^{objc_ivar=}#^I";
		"class_copyMethodList" = "^^{objc_method=}#^I";
		"class_copyPropertyList" = "^^{objc_property=}#^I";
		"class_copyProtocolList" = "^?#^I";
		"class_createInstance" = "@#Q";
		"class_createInstances" = "I#Q^?I";
		"class_getClassMethod" = "^{objc_method=}#:";
		"class_getClassVariable" = "^{objc_ivar=}#*";
		"class_getImageName" = "*#";
		"class_getInstanceMethod" = "^{objc_method=}#:";
		"class_getInstanceSize" = "Q#";
		"class_getInstanceVariable" = "^{objc_ivar=}#*";
		"class_getIvarLayout" = "^C#";
		"class_getMethodImplementation" = "^?#:";
		"class_getName" = "*#";
		"class_getProperty" = "^{objc_property=}#*";
		"class_getSuperclass" = "##";
		"class_getVersion" = "i#";
		"class_getWeakIvarLayout" = "^C#";
		"class_isMetaClass" = "B#";
		"class_lookupMethod" = "^?#:";
		"class_replaceMethod" = "^?#:^?*";
		"class_replaceMethodsBulk" = "v#^?^?^?I";
		"class_replaceProperty" = "v#*^{?=}I";
		"class_respondsToMethod" = "B#:";
		"class_respondsToSelector" = "B#:";
		"class_setIvarLayout" = "v#^C";
		"class_setSuperclass" = "###";
		"class_setVersion" = "v#i";
		"class_setWeakIvarLayout" = "v#^C";
		"gdb_class_getClass" = "##";
		"gdb_object_getClass" = "#@";
		"imp_getBlock" = "@^?";
		"imp_implementationWithBlock" = "^?@";
		"imp_removeBlock" = "B^?";
		"instrumentObjcMessageSends" = "vB";
		"ivar_getName" = "*^{objc_ivar=}";
		"ivar_getOffset" = "q^{objc_ivar=}";
		"ivar_getTypeEncoding" = "*^{objc_ivar=}";
		"method_copyArgumentType" = "*^{objc_method=}I";
		"method_copyReturnType" = "*^{objc_method=}";
		"method_exchangeImplementations" = "v^{objc_method=}^{objc_method=}";
		"method_getArgumentType" = "v^{objc_method=}I*Q";
		"method_getDescription" = "^{objc_method_description=}^{objc_method=}";
		"method_getImplementation" = "^?^{objc_method=}";
		"method_getName" = ":^{objc_method=}";
		"method_getNumberOfArguments" = "I^{objc_method=}";
		"method_getReturnType" = "v^{objc_method=}*Q";
		"method_getTypeEncoding" = "*^{objc_method=}";
		"method_invoke" = "$method_invoke";
		"method_setImplementation" = "^?^{objc_method=}^?";
		"objc_alloc" = "@#";
		"objc_allocWithZone" = "@#";
		"objc_alloc_init" = "@#"; // clang says it's "v@"?
		"objc_allocateClassPair" = "##*Q";
		"objc_allocateProtocol" = "@*";
		"objc_autorelease" = "@@";
		"objc_autoreleasePoolPop" = "v^?";
		"objc_autoreleasePoolPush" = "^?";
		"objc_autoreleaseReturnValue" = "@@";
		"objc_begin_catch" = "@^v";
		"objc_clear_deallocating" = "v@";
		"objc_constructInstance" = "@#^v";
		"objc_copyClassList" = "^#^I";
		"objc_copyClassNamesForImage" = "^?*^I";
		"objc_copyClassNamesForImageHeader" = "^?^?^I";
		"objc_copyCppObjectAtomic" = "v^?^?^?";
		"objc_copyImageNames" = "^?^I";
		"objc_copyProtocolList" = "^?^I";
		"objc_copyStruct" = "v^?^?qBB";
		"objc_copyWeak" = "v^?^?";
		// decl for objc_debug_class_rw_data_mask not found
		// decl for objc_debug_indexed_isa_index_mask not found
		// decl for objc_debug_indexed_isa_index_shift not found
		// decl for objc_debug_indexed_isa_magic_mask not found
		// decl for objc_debug_indexed_isa_magic_value not found
		// decl for objc_debug_isa_class_mask not found
		// decl for objc_debug_isa_magic_mask not found
		// decl for objc_debug_isa_magic_value not found
		// decl for objc_debug_swift_stable_abi_bit not found
		// decl for objc_debug_taggedpointer_classes not found
		// decl for objc_debug_taggedpointer_ext_classes not found
		// decl for objc_debug_taggedpointer_ext_mask not found
		// decl for objc_debug_taggedpointer_ext_payload_lshift not found
		// decl for objc_debug_taggedpointer_ext_payload_rshift not found
		// decl for objc_debug_taggedpointer_ext_slot_mask not found
		// decl for objc_debug_taggedpointer_ext_slot_shift not found
		// decl for objc_debug_taggedpointer_mask not found
		// decl for objc_debug_taggedpointer_obfuscator not found
		// decl for objc_debug_taggedpointer_payload_lshift not found
		// decl for objc_debug_taggedpointer_payload_rshift not found
		// decl for objc_debug_taggedpointer_slot_mask not found
		// decl for objc_debug_taggedpointer_slot_shift not found
		"objc_destroyWeak" = "v^?";
		"objc_destructInstance" = "^v@";
		"objc_disposeClassPair" = "v#";
		"objc_duplicateClass" = "##*Q";
		"objc_end_catch" = "v";
		"objc_enumerationMutation" = "v@";
		"objc_exception_rethrow" = "v";
		"objc_exception_throw" = "v@";
		"objc_getAssociatedObject" = "@@^v";
		"objc_getClass" = "#*";
		"objc_getClassList" = "i^#i";
		"objc_getFutureClass" = "#*";
		"objc_getMetaClass" = "#*";
		"objc_getProperty" = "@@:qB";
		"objc_getProtocol" = "@*";
		"objc_getRequiredClass" = "#*";
		"objc_initWeak" = "@^?@";
		"objc_initWeakOrNil" = "@^?@";
		"objc_initializeClassPair" = "##*##";
		"objc_loadWeak" = "@^@";
		"objc_loadWeakRetained" = "@^?";
		"objc_lookUpClass" = "#*";
		"objc_moveWeak" = "v^?^?";
		// decl for objc_msgLookup not found
		// decl for objc_msgLookupSuper2 not found
		"objc_msgSend" = "$objc_msgSend";
		"objc_msgSendSuper" = "$objc_msgSendSuper";
		"objc_msgSendSuper2" = "$objc_msgSendSuper2";
		// decl for objc_msgSendSuper2_debug not found
		// decl for objc_msgSend_debug not found
		// decl for objc_msgSend_noarg not found
		"objc_opt_class" = "@@";
		"objc_opt_isKindOfClass" = "B@@";
		"objc_opt_new" = "@#^?^?";
		"objc_opt_respondsToSelector" = "B@:";
		"objc_opt_self" = "@@";
		"objc_readClassPair" = "##^?";
		"objc_registerClassPair" = "v#";
		"objc_registerProtocol" = "v@";
		"objc_release" = "v@";
		"objc_removeAssociatedObjects" = "v@";
		"objc_retain" = "@@";
		"objc_retainAutorelease" = "@@";
		"objc_retainAutoreleaseReturnValue" = "@@";
		"objc_retainAutoreleasedReturnValue" = "@@";
		"objc_retainBlock" = "@@";
		"objc_retain_autorelease" = "@@";
		"objc_retainedObject" = "@^v";
		"objc_setAssociatedObject" = "v@^v@Q";
		"objc_setEnumerationMutationHandler" = "v^?";
		"objc_setExceptionMatcher" = "^?^?";
		"objc_setExceptionPreprocessor" = "^?^?";
		"objc_setForwardHandler" = "v^v^v";
		"objc_setHook_getClass" = "v^?^?";
		"objc_setHook_getImageName" = "v^?^?";
		"objc_setProperty" = "v@:q@Bc";
		"objc_setProperty_atomic" = "v@:q@";
		"objc_setProperty_atomic_copy" = "v@:q@";
		"objc_setProperty_nonatomic" = "v@:q@";
		"objc_setProperty_nonatomic_copy" = "v@:q@";
		"objc_setUncaughtExceptionHandler" = "^?^?";
		"objc_should_deallocate" = "B@";
		"objc_storeStrong" = "v^?@";
		"objc_storeWeak" = "@^@@";
		"objc_storeWeakOrNil" = "@^@@";
		"objc_sync_enter" = "i@";
		"objc_sync_exit" = "i@";
		"objc_terminate" = "v";
		"objc_unretainedObject" = "@^v";
		"objc_unretainedPointer" = "^v@";
		"objc_unsafeClaimAutoreleasedReturnValue" = "@@";
		"object_copy" = "@@Q";
		"object_dispose" = "@@";
		"object_getClass" = "#@";
		"object_getClassName" = "*@";
		"object_getIndexedIvars" = "^v@";
		"object_getInstanceVariable" = "^{objc_ivar=}@*^?";
		"object_getIvar" = "@@^{objc_ivar=}";
		"object_getMethodImplementation" = "^?@:";
		"object_isClass" = "B@";
		"object_setClass" = "#@#";
		"object_setInstanceVariable" = "^{objc_ivar=}@*^v";
		"object_setInstanceVariableWithStrongDefault" = "^{objc_ivar=}@*^v";
		"object_setIvar" = "v@^{objc_ivar=}@";
		"object_setIvarWithStrongDefault" = "v@^{objc_ivar=}@";
		"property_copyAttributeList" = "^{?=}^{objc_property=}^I";
		"property_copyAttributeValue" = "*^{objc_property=}*";
		"property_getAttributes" = "*^{objc_property=}";
		"property_getName" = "*^{objc_property=}";
		"protocol_addMethodDescription" = "v@:*BB";
		"protocol_addProperty" = "v@*^{?=}IBB";
		"protocol_addProtocol" = "v@@";
		"protocol_conformsToProtocol" = "B@@";
		"protocol_copyMethodDescriptionList" = "^{objc_method_description=}@BB^I";
		"protocol_copyPropertyList" = "^^{objc_property=}@^I";
		"protocol_copyPropertyList2" = "^^{objc_property=}@^IBB";
		"protocol_copyProtocolList" = "^?@^I";
		"protocol_getMethodDescription" = "{objc_method_description=}@:BB";
		"protocol_getName" = "*@";
		"protocol_getProperty" = "^{objc_property=}@*BB";
		"protocol_isEqual" = "B@@";
		"sel_getName" = "*:";
		"sel_getUid" = ":*";
		"sel_isEqual" = "B::";
		"sel_isMapped" = "B:";
		"sel_registerName" = ":*";
	};
	"/System/Library/Frameworks/Foundation.framework/Foundation" = {
		"NSLog" = "$NSLog";
		"NSAllHashTableObjects" = "^v^v";
		"NSAllMapTableKeys" = "^v^v";
		"NSAllMapTableValues" = "^v^v";
		"NSAllocateCollectable" = "^vQQ";
		"NSAllocateMemoryPages" = "^vQ";
		"NSAllocateObject" = "@#Q^v";
		"NSClassFromString" = "#^v";
		"NSCompareHashTables" = "B^v^v";
		"NSCompareMapTables" = "B^v^v";
		"NSCopyHashTableWithZone" = "^v^v^v";
		"NSCopyMapTableWithZone" = "^v^v^v";
		"NSCopyMemoryPages" = "v^v^vQ";
		"NSCopyObject" = "@@Q^v";
		"NSCountHashTable" = "Q^v";
		"NSCountMapTable" = "Q^v";
		"NSCreateHashTable" = "^v{?=}Q";
		"NSCreateHashTableWithZone" = "^v{?=}Q^v";
		"NSCreateMapTable" = "^v{?=}{?=}Q";
		"NSCreateMapTableWithZone" = "^v{?=}{?=}Q^v";
		"NSCreateZone" = "^vQQB";
		"NSDeallocateMemoryPages" = "v^vQ";
		"NSDeallocateObject" = "v@";
		"NSDecimalAdd" = "Q^v^v^vQ";
		"NSDecimalCompact" = "v^v";
		"NSDecimalCompare" = "q^v^v";
		"NSDecimalCopy" = "v^v^v";
		"NSDecimalDivide" = "Q^v^v^vQ";
		"NSDecimalMultiply" = "Q^v^v^vQ";
		"NSDecimalMultiplyByPowerOf10" = "Q^v^vsQ";
		"NSDecimalNormalize" = "Q^v^vQ";
		"NSDecimalPower" = "Q^v^vQQ";
		"NSDecimalRound" = "v^v^vqQ";
		"NSDecimalString" = "^v^v@";
		"NSDecimalSubtract" = "Q^v^v^vQ";
		"NSDecrementExtraRefCountWasZero" = "B@";
		"NSDefaultMallocZone" = "^v";
		"NSEndHashTableEnumeration" = "v^v";
		"NSEndMapTableEnumeration" = "v^v";
		"NSEnumerateHashTable" = "{?=}^v";
		"NSEnumerateMapTable" = "{?=}^v";
		"NSExtraRefCount" = "Q@";
		"NSFreeHashTable" = "v^v";
		"NSFreeMapTable" = "v^v";
		"NSFullUserName" = "^v";
		"NSGetUncaughtExceptionHandler" = "^v";
		"NSHashGet" = "^v^v^v";
		"NSHashInsert" = "v^v^v";
		"NSHashInsertIfAbsent" = "^v^v^v";
		"NSHashInsertKnownAbsent" = "v^v^v";
		"NSHashRemove" = "v^v^v";
		"NSHomeDirectory" = "^v";
		"NSHomeDirectoryForUser" = "^v^v";
		"NSIncrementExtraRefCount" = "v@";
		"NSIntersectionRange" = "{_NSRange=QQ}{_NSRange=QQ}{_NSRange=QQ}";
		"NSLogPageSize" = "Q";
		"NSMapGet" = "^v^v^v";
		"NSMapInsert" = "v^v^v^v";
		"NSMapInsertIfAbsent" = "^v^v^v^v";
		"NSMapInsertKnownAbsent" = "v^v^v^v";
		"NSMapMember" = "B^v^v^?^?";
		"NSMapRemove" = "v^v^v";
		"NSNextHashEnumeratorItem" = "^v^v";
		"NSNextMapEnumeratorPair" = "B^v^?^?";
		"NSOpenStepRootDirectory" = "^v";
		"NSPageSize" = "Q";
		"NSProtocolFromString" = "^v^v";
		"NSRangeFromString" = "{_NSRange=QQ}^v";
		"NSRealMemoryAvailable" = "Q";
		"NSReallocateCollectable" = "^v^vQQ";
		"NSRecycleZone" = "v^v";
		"NSResetHashTable" = "v^v";
		"NSResetMapTable" = "v^v";
		"NSRoundDownToMultipleOfPageSize" = "QQ";
		"NSRoundUpToMultipleOfPageSize" = "QQ";
		"NSSearchPathForDirectoriesInDomains" = "^vQQB";
		"NSSelectorFromString" = ":^v";
		"NSSetUncaughtExceptionHandler" = "v^v";
		"NSSetZoneName" = "v^v^v";
		"NSShouldRetainWithZone" = "B@^v";
		"NSStringFromClass" = "^v#";
		"NSStringFromHashTable" = "^v^v";
		"NSStringFromMapTable" = "^v^v";
		"NSStringFromProtocol" = "^v^v";
		"NSStringFromRange" = "^v{_NSRange=QQ}";
		"NSStringFromSelector" = "^v:";
		"NSTemporaryDirectory" = "^v";
		"NSUnionRange" = "{_NSRange=QQ}{_NSRange=QQ}{_NSRange=QQ}";
		"NSUserName" = "^v";
		"NSZoneCalloc" = "^v^vQQ";
		"NSZoneFree" = "v^v^v";
		"NSZoneFromPointer" = "^v^v";
		"NSZoneMalloc" = "^v^vQ";
		"NSZoneName" = "^v^v";
		"NSZoneRealloc" = "^v^v^vQ";
	};
	"/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" = {
	"CFAbsoluteTimeAddGregorianUnits" = "dd^{__CFTimeZone=}{?=}";
	"CFAbsoluteTimeGetCurrent" = "d";
	"CFAbsoluteTimeGetDayOfWeek" = "id^{__CFTimeZone=}";
	"CFAbsoluteTimeGetDayOfYear" = "id^{__CFTimeZone=}";
	"CFAbsoluteTimeGetDifferenceAsGregorianUnits" = "{?=}dd^{__CFTimeZone=}Q";
	"CFAbsoluteTimeGetGregorianDate" = "{?=}d^{__CFTimeZone=}";
	"CFAbsoluteTimeGetWeekOfYear" = "id^{__CFTimeZone=}";
	"CFAllocatorAllocate" = "^v^{__CFAllocator=}qQ";
	"CFAllocatorCreate" = "^{__CFAllocator=}^{__CFAllocator=}^{?=}";
	"CFAllocatorDeallocate" = "v^{__CFAllocator=}^v";
	"CFAllocatorGetContext" = "v^{__CFAllocator=}^{?=}";
	"CFAllocatorGetDefault" = "^{__CFAllocator=}";
	"CFAllocatorGetPreferredSizeForSize" = "q^{__CFAllocator=}qQ";
	"CFAllocatorGetTypeID" = "Q";
	"CFAllocatorReallocate" = "^v^{__CFAllocator=}^vqQ";
	"CFAllocatorSetDefault" = "v^{__CFAllocator=}";
	"CFArrayAppendArray" = "v^{__CFArray=}^{__CFArray=}{?=}";
	"CFArrayAppendValue" = "v^{__CFArray=}^v";
	"CFArrayApplyFunction" = "v^{__CFArray=}{?=}^?^v";
	"CFArrayBSearchValues" = "q^{__CFArray=}{?=}^v^?^v";
	"CFArrayContainsValue" = "C^{__CFArray=}{?=}^v";
	"CFArrayCreate" = "^{__CFArray=}^{__CFAllocator=}^?q^{?=}";
	"CFArrayCreateCopy" = "^{__CFArray=}^{__CFAllocator=}^{__CFArray=}";
	"CFArrayCreateMutable" = "^{__CFArray=}^{__CFAllocator=}q^{?=}";
	"CFArrayCreateMutableCopy" = "^{__CFArray=}^{__CFAllocator=}q^{__CFArray=}";
	"CFArrayExchangeValuesAtIndices" = "v^{__CFArray=}qq";
	"CFArrayGetCount" = "q^{__CFArray=}";
	"CFArrayGetCountOfValue" = "q^{__CFArray=}{?=}^v";
	"CFArrayGetFirstIndexOfValue" = "q^{__CFArray=}{?=}^v";
	"CFArrayGetLastIndexOfValue" = "q^{__CFArray=}{?=}^v";
	"CFArrayGetTypeID" = "Q";
	"CFArrayGetValueAtIndex" = "^v^{__CFArray=}q";
	"CFArrayGetValues" = "v^{__CFArray=}{?=}^?";
	"CFArrayInsertValueAtIndex" = "v^{__CFArray=}q^v";
	"CFArrayRemoveAllValues" = "v^{__CFArray=}";
	"CFArrayRemoveValueAtIndex" = "v^{__CFArray=}q";
	"CFArrayReplaceValues" = "v^{__CFArray=}{?=}^?q";
	"CFArraySetValueAtIndex" = "v^{__CFArray=}q^v";
	"CFArraySortValues" = "v^{__CFArray=}{?=}^?^v";
	"CFAttributedStringBeginEditing" = "v^{__CFAttributedString=}";
	"CFAttributedStringCreate" = "^{__CFAttributedString=}^{__CFAllocator=}^{__CFString=}^{__CFDictionary=}";
	"CFAttributedStringCreateCopy" = "^{__CFAttributedString=}^{__CFAllocator=}^{__CFAttributedString=}";
	"CFAttributedStringCreateMutable" = "^{__CFAttributedString=}^{__CFAllocator=}q";
	"CFAttributedStringCreateMutableCopy" = "^{__CFAttributedString=}^{__CFAllocator=}q^{__CFAttributedString=}";
	"CFAttributedStringCreateWithSubstring" = "^{__CFAttributedString=}^{__CFAllocator=}^{__CFAttributedString=}{?=}";
	"CFAttributedStringEndEditing" = "v^{__CFAttributedString=}";
	"CFAttributedStringGetAttribute" = "^v^{__CFAttributedString=}q^{__CFString=}^{?=}";
	"CFAttributedStringGetAttributeAndLongestEffectiveRange" = "^v^{__CFAttributedString=}q^{__CFString=}{?=}^{?=}";
	"CFAttributedStringGetAttributes" = "^{__CFDictionary=}^{__CFAttributedString=}q^{?=}";
	"CFAttributedStringGetAttributesAndLongestEffectiveRange" = "^{__CFDictionary=}^{__CFAttributedString=}q{?=}^{?=}";
	"CFAttributedStringGetLength" = "q^{__CFAttributedString=}";
	"CFAttributedStringGetMutableString" = "^{__CFString=}^{__CFAttributedString=}";
	"CFAttributedStringGetString" = "^{__CFString=}^{__CFAttributedString=}";
	"CFAttributedStringGetTypeID" = "Q";
	"CFAttributedStringRemoveAttribute" = "v^{__CFAttributedString=}{?=}^{__CFString=}";
	"CFAttributedStringReplaceAttributedString" = "v^{__CFAttributedString=}{?=}^{__CFAttributedString=}";
	"CFAttributedStringReplaceString" = "v^{__CFAttributedString=}{?=}^{__CFString=}";
	"CFAttributedStringSetAttribute" = "v^{__CFAttributedString=}{?=}^{__CFString=}^v";
	"CFAttributedStringSetAttributes" = "v^{__CFAttributedString=}{?=}^{__CFDictionary=}C";
	"CFAutorelease" = "^v^v";
	"CFBagAddValue" = "v^{__CFBag=}^v";
	"CFBagApplyFunction" = "v^{__CFBag=}^?^v";
	"CFBagContainsValue" = "C^{__CFBag=}^v";
	"CFBagCreate" = "^{__CFBag=}^{__CFAllocator=}^?q^{?=}";
	"CFBagCreateCopy" = "^{__CFBag=}^{__CFAllocator=}^{__CFBag=}";
	"CFBagCreateMutable" = "^{__CFBag=}^{__CFAllocator=}q^{?=}";
	"CFBagCreateMutableCopy" = "^{__CFBag=}^{__CFAllocator=}q^{__CFBag=}";
	"CFBagGetCount" = "q^{__CFBag=}";
	"CFBagGetCountOfValue" = "q^{__CFBag=}^v";
	"CFBagGetTypeID" = "Q";
	"CFBagGetValue" = "^v^{__CFBag=}^v";
	"CFBagGetValueIfPresent" = "C^{__CFBag=}^v^?";
	"CFBagGetValues" = "v^{__CFBag=}^?";
	"CFBagRemoveAllValues" = "v^{__CFBag=}";
	"CFBagRemoveValue" = "v^{__CFBag=}^v";
	"CFBagReplaceValue" = "v^{__CFBag=}^v";
	"CFBagSetValue" = "v^{__CFBag=}^v";
	"CFBinaryHeapAddValue" = "v^{__CFBinaryHeap=}^v";
	"CFBinaryHeapApplyFunction" = "v^{__CFBinaryHeap=}^?^v";
	"CFBinaryHeapContainsValue" = "C^{__CFBinaryHeap=}^v";
	"CFBinaryHeapCreate" = "^{__CFBinaryHeap=}^{__CFAllocator=}q^{?=}^{?=}";
	"CFBinaryHeapCreateCopy" = "^{__CFBinaryHeap=}^{__CFAllocator=}q^{__CFBinaryHeap=}";
	"CFBinaryHeapGetCount" = "q^{__CFBinaryHeap=}";
	"CFBinaryHeapGetCountOfValue" = "q^{__CFBinaryHeap=}^v";
	"CFBinaryHeapGetMinimum" = "^v^{__CFBinaryHeap=}";
	"CFBinaryHeapGetMinimumIfPresent" = "C^{__CFBinaryHeap=}^?";
	"CFBinaryHeapGetTypeID" = "Q";
	"CFBinaryHeapGetValues" = "v^{__CFBinaryHeap=}^?";
	"CFBinaryHeapRemoveAllValues" = "v^{__CFBinaryHeap=}";
	"CFBinaryHeapRemoveMinimumValue" = "v^{__CFBinaryHeap=}";
	"CFBitVectorContainsBit" = "C^{__CFBitVector=}{?=}I";
	"CFBitVectorCreate" = "^{__CFBitVector=}^{__CFAllocator=}^Cq";
	"CFBitVectorCreateCopy" = "^{__CFBitVector=}^{__CFAllocator=}^{__CFBitVector=}";
	"CFBitVectorCreateMutable" = "^{__CFBitVector=}^{__CFAllocator=}q";
	"CFBitVectorCreateMutableCopy" = "^{__CFBitVector=}^{__CFAllocator=}q^{__CFBitVector=}";
	"CFBitVectorFlipBitAtIndex" = "v^{__CFBitVector=}q";
	"CFBitVectorFlipBits" = "v^{__CFBitVector=}{?=}";
	"CFBitVectorGetBitAtIndex" = "I^{__CFBitVector=}q";
	"CFBitVectorGetBits" = "v^{__CFBitVector=}{?=}^C";
	"CFBitVectorGetCount" = "q^{__CFBitVector=}";
	"CFBitVectorGetCountOfBit" = "q^{__CFBitVector=}{?=}I";
	"CFBitVectorGetFirstIndexOfBit" = "q^{__CFBitVector=}{?=}I";
	"CFBitVectorGetLastIndexOfBit" = "q^{__CFBitVector=}{?=}I";
	"CFBitVectorGetTypeID" = "Q";
	"CFBitVectorSetAllBits" = "v^{__CFBitVector=}I";
	"CFBitVectorSetBitAtIndex" = "v^{__CFBitVector=}qI";
	"CFBitVectorSetBits" = "v^{__CFBitVector=}{?=}I";
	"CFBitVectorSetCount" = "v^{__CFBitVector=}q";
	"CFBooleanGetTypeID" = "Q";
	"CFBooleanGetValue" = "C^{__CFBoolean=}";
	"CFBundleCloseBundleResourceMap" = "v^{__CFBundle=}i";
	"CFBundleCopyAuxiliaryExecutableURQ" = "^{__CFURL=}^{__CFBundle=}^{__CFString=}";
	"CFBundleCopyBuiltInPlugInsURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopyBundleLocalizations" = "^{__CFArray=}^{__CFBundle=}";
	"CFBundleCopyBundleURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopyExecutableArchitectures" = "^{__CFArray=}^{__CFBundle=}";
	"CFBundleCopyExecutableArchitecturesForURQ" = "^{__CFArray=}^{__CFURL=}";
	"CFBundleCopyExecutableURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopyInfoDictionaryForURQ" = "^{__CFDictionary=}^{__CFURL=}";
	"CFBundleCopyInfoDictionaryInDirectory" = "^{__CFDictionary=}^{__CFURL=}";
	"CFBundleCopyLocalizationsForPreferences" = "^{__CFArray=}^{__CFArray=}^{__CFArray=}";
	"CFBundleCopyLocalizationsForURQ" = "^{__CFArray=}^{__CFURL=}";
	"CFBundleCopyLocalizedString" = "^{__CFString=}^{__CFBundle=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyPreferredLocalizationsFromArray" = "^{__CFArray=}^{__CFArray=}";
	"CFBundleCopyPrivateFrameworksURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopyResourceURQ" = "^{__CFURL=}^{__CFBundle=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyResourceURLForLocalization" = "^{__CFURL=}^{__CFBundle=}^{__CFString=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyResourceURLInDirectory" = "^{__CFURL=}^{__CFURL=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyResourceURLsOfType" = "^{__CFArray=}^{__CFBundle=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyResourceURLsOfTypeForLocalization" = "^{__CFArray=}^{__CFBundle=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyResourceURLsOfTypeInDirectory" = "^{__CFArray=}^{__CFURL=}^{__CFString=}^{__CFString=}";
	"CFBundleCopyResourcesDirectoryURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopySharedFrameworksURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopySharedSupportURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCopySupportFilesDirectoryURQ" = "^{__CFURL=}^{__CFBundle=}";
	"CFBundleCreate" = "^{__CFBundle=}^{__CFAllocator=}^{__CFURL=}";
	"CFBundleCreateBundlesFromDirectory" = "^{__CFArray=}^{__CFAllocator=}^{__CFURL=}^{__CFString=}";
	"CFBundleGetAllBundles" = "^{__CFArray=}";
	"CFBundleGetBundleWithIdentifier" = "^{__CFBundle=}^{__CFString=}";
	"CFBundleGetDataPointerForName" = "^v^{__CFBundle=}^{__CFString=}";
	"CFBundleGetDataPointersForNames" = "v^{__CFBundle=}^{__CFArray=}^?";
	"CFBundleGetDevelopmentRegion" = "^{__CFString=}^{__CFBundle=}";
	"CFBundleGetFunctionPointerForName" = "^v^{__CFBundle=}^{__CFString=}";
	"CFBundleGetFunctionPointersForNames" = "v^{__CFBundle=}^{__CFArray=}^?";
	"CFBundleGetIdentifier" = "^{__CFString=}^{__CFBundle=}";
	"CFBundleGetInfoDictionary" = "^{__CFDictionary=}^{__CFBundle=}";
	"CFBundleGetLocalInfoDictionary" = "^{__CFDictionary=}^{__CFBundle=}";
	"CFBundleGetMainBundle" = "^{__CFBundle=}";
	"CFBundleGetPackageInfo" = "v^{__CFBundle=}^I^I";
	"CFBundleGetPackageInfoInDirectory" = "C^{__CFURL=}^I^I";
	"CFBundleGetPlugIn" = "^{__CFBundle=}^{__CFBundle=}";
	"CFBundleGetTypeID" = "Q";
	"CFBundleGetValueForInfoDictionaryKey" = "^v^{__CFBundle=}^{__CFString=}";
	"CFBundleGetVersionNumber" = "I^{__CFBundle=}";
	"CFBundleIsExecutableLoaded" = "C^{__CFBundle=}";
	"CFBundleLoadExecutable" = "C^{__CFBundle=}";
	"CFBundleLoadExecutableAndReturnError" = "C^{__CFBundle=}^^{__CFError=}";
	"CFBundleOpenBundleResourceFiles" = "i^{__CFBundle=}^i^i";
	"CFBundleOpenBundleResourceMap" = "i^{__CFBundle=}";
	"CFBundlePreflightExecutable" = "C^{__CFBundle=}^^{__CFError=}";
	"CFBundleUnloadExecutable" = "v^{__CFBundle=}";
	"CFCalendarAddComponents" = "$CFCalendarAddComponents"; // C^{__CFCalendar=}^dQ*...
	"CFCalendarComposeAbsoluteTime" = "$CFCalendarComposeAbsoluteTime"; // C^{__CFCalendar=}^d*...
	"CFCalendarCopyCurrent" = "^{__CFCalendar=}";
	"CFCalendarCopyLocale" = "^{__CFLocale=}^{__CFCalendar=}";
	"CFCalendarCopyTimeZone" = "^{__CFTimeZone=}^{__CFCalendar=}";
	"CFCalendarCreateWithIdentifier" = "^{__CFCalendar=}^{__CFAllocator=}^{__CFString=}";
	"CFCalendarDecomposeAbsoluteTime" = "$CFCalendarDecomposeAbsoluteTime"; // C^{__CFCalendar=}d*...
	"CFCalendarGetComponentDifference" = "$CFCalendarGetComponentDifference"; // C^{__CFCalendar=}ddQ*...
	"CFCalendarGetFirstWeekday" = "q^{__CFCalendar=}";
	"CFCalendarGetIdentifier" = "^{__CFString=}^{__CFCalendar=}";
	"CFCalendarGetMaximumRangeOfUnit" = "{?=}^{__CFCalendar=}Q";
	"CFCalendarGetMinimumDaysInFirstWeek" = "q^{__CFCalendar=}";
	"CFCalendarGetMinimumRangeOfUnit" = "{?=}^{__CFCalendar=}Q";
	"CFCalendarGetOrdinalityOfUnit" = "q^{__CFCalendar=}QQd";
	"CFCalendarGetRangeOfUnit" = "{?=}^{__CFCalendar=}QQd";
	"CFCalendarGetTimeRangeOfUnit" = "C^{__CFCalendar=}Qd^d^d";
	"CFCalendarGetTypeID" = "Q";
	"CFCalendarSetFirstWeekday" = "v^{__CFCalendar=}q";
	"CFCalendarSetLocale" = "v^{__CFCalendar=}^{__CFLocale=}";
	"CFCalendarSetMinimumDaysInFirstWeek" = "v^{__CFCalendar=}q";
	"CFCalendarSetTimeZone" = "v^{__CFCalendar=}^{__CFTimeZone=}";
	"CFCharacterSetAddCharactersInRange" = "v^{__CFCharacterSet=}{?=}";
	"CFCharacterSetAddCharactersInString" = "v^{__CFCharacterSet=}^{__CFString=}";
	"CFCharacterSetCreateBitmapRepresentation" = "^{__CFData=}^{__CFAllocator=}^{__CFCharacterSet=}";
	"CFCharacterSetCreateCopy" = "^{__CFCharacterSet=}^{__CFAllocator=}^{__CFCharacterSet=}";
	"CFCharacterSetCreateInvertedSet" = "^{__CFCharacterSet=}^{__CFAllocator=}^{__CFCharacterSet=}";
	"CFCharacterSetCreateMutable" = "^{__CFCharacterSet=}^{__CFAllocator=}";
	"CFCharacterSetCreateMutableCopy" = "^{__CFCharacterSet=}^{__CFAllocator=}^{__CFCharacterSet=}";
	"CFCharacterSetCreateWithBitmapRepresentation" = "^{__CFCharacterSet=}^{__CFAllocator=}^{__CFData=}";
	"CFCharacterSetCreateWithCharactersInRange" = "^{__CFCharacterSet=}^{__CFAllocator=}{?=}";
	"CFCharacterSetCreateWithCharactersInString" = "^{__CFCharacterSet=}^{__CFAllocator=}^{__CFString=}";
	"CFCharacterSetGetPredefined" = "^{__CFCharacterSet=}q";
	"CFCharacterSetGetTypeID" = "Q";
	"CFCharacterSetHasMemberInPlane" = "C^{__CFCharacterSet=}q";
	"CFCharacterSetIntersect" = "v^{__CFCharacterSet=}^{__CFCharacterSet=}";
	"CFCharacterSetInvert" = "v^{__CFCharacterSet=}";
	"CFCharacterSetIsCharacterMember" = "C^{__CFCharacterSet=}S";
	"CFCharacterSetIsLongCharacterMember" = "C^{__CFCharacterSet=}I";
	"CFCharacterSetIsSupersetOfSet" = "C^{__CFCharacterSet=}^{__CFCharacterSet=}";
	"CFCharacterSetRemoveCharactersInRange" = "v^{__CFCharacterSet=}{?=}";
	"CFCharacterSetRemoveCharactersInString" = "v^{__CFCharacterSet=}^{__CFString=}";
	"CFCharacterSetUnion" = "v^{__CFCharacterSet=}^{__CFCharacterSet=}";
	"CFCopyDescription" = "^{__CFString=}^v";
	"CFCopyHomeDirectoryURQ" = "^{__CFURL=}";
	"CFCopyTypeIDDescription" = "^{__CFString=}Q";
	"CFDataAppendBytes" = "v^{__CFData=}^Cq";
	"CFDataCreate" = "^{__CFData=}^{__CFAllocator=}^Cq";
	"CFDataCreateCopy" = "^{__CFData=}^{__CFAllocator=}^{__CFData=}";
	"CFDataCreateMutable" = "^{__CFData=}^{__CFAllocator=}q";
	"CFDataCreateMutableCopy" = "^{__CFData=}^{__CFAllocator=}q^{__CFData=}";
	"CFDataCreateWithBytesNoCopy" = "^{__CFData=}^{__CFAllocator=}^Cq^{__CFAllocator=}";
	"CFDataDeleteBytes" = "v^{__CFData=}{?=}";
	"CFDataFind" = "{?=}^{__CFData=}^{__CFData=}{?=}Q";
	"CFDataGetBytePtr" = "^C^{__CFData=}";
	"CFDataGetBytes" = "v^{__CFData=}{?=}^C";
	"CFDataGetLength" = "q^{__CFData=}";
	"CFDataGetMutableBytePtr" = "^C^{__CFData=}";
	"CFDataGetTypeID" = "Q";
	"CFDataIncreaseLength" = "v^{__CFData=}q";
	"CFDataReplaceBytes" = "v^{__CFData=}{?=}^Cq";
	"CFDataSetLength" = "v^{__CFData=}q";
	"CFDateCompare" = "q^{__CFDate=}^{__CFDate=}^v";
	"CFDateCreate" = "^{__CFDate=}^{__CFAllocator=}d";
	"CFDateFormatterCopyProperty" = "^v^{__CFDateFormatter=}^{__CFString=}";
	"CFDateFormatterCreate" = "^{__CFDateFormatter=}^{__CFAllocator=}^{__CFLocale=}qq";
	"CFDateFormatterCreateDateFormatFromTemplate" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}Q^{__CFLocale=}";
	"CFDateFormatterCreateDateFromString" = "^{__CFDate=}^{__CFAllocator=}^{__CFDateFormatter=}^{__CFString=}^{?=}";
	"CFDateFormatterCreateISO8601Formatter" = "^{__CFDateFormatter=}^{__CFAllocator=}Q";
	"CFDateFormatterCreateStringWithAbsoluteTime" = "^{__CFString=}^{__CFAllocator=}^{__CFDateFormatter=}d";
	"CFDateFormatterCreateStringWithDate" = "^{__CFString=}^{__CFAllocator=}^{__CFDateFormatter=}^{__CFDate=}";
	"CFDateFormatterGetAbsoluteTimeFromString" = "C^{__CFDateFormatter=}^{__CFString=}^{?=}^d";
	"CFDateFormatterGetDateStyle" = "q^{__CFDateFormatter=}";
	"CFDateFormatterGetFormat" = "^{__CFString=}^{__CFDateFormatter=}";
	"CFDateFormatterGetLocale" = "^{__CFLocale=}^{__CFDateFormatter=}";
	"CFDateFormatterGetTimeStyle" = "q^{__CFDateFormatter=}";
	"CFDateFormatterGetTypeID" = "Q";
	"CFDateFormatterSetFormat" = "v^{__CFDateFormatter=}^{__CFString=}";
	"CFDateFormatterSetProperty" = "v^{__CFDateFormatter=}^{__CFString=}^v";
	"CFDateGetAbsoluteTime" = "d^{__CFDate=}";
	"CFDateGetTimeIntervalSinceDate" = "d^{__CFDate=}^{__CFDate=}";
	"CFDateGetTypeID" = "Q";
	"CFDictionaryAddValue" = "v^{__CFDictionary=}^v^v";
	"CFDictionaryApplyFunction" = "v^{__CFDictionary=}^?^v";
	"CFDictionaryContainsKey" = "C^{__CFDictionary=}^v";
	"CFDictionaryContainsValue" = "C^{__CFDictionary=}^v";
	"CFDictionaryCreate" = "^{__CFDictionary=}^{__CFAllocator=}^?^?q^{?=}^{?=}";
	"CFDictionaryCreateCopy" = "^{__CFDictionary=}^{__CFAllocator=}^{__CFDictionary=}";
	"CFDictionaryCreateMutable" = "^{__CFDictionary=}^{__CFAllocator=}q^{?=}^{?=}";
	"CFDictionaryCreateMutableCopy" = "^{__CFDictionary=}^{__CFAllocator=}q^{__CFDictionary=}";
	"CFDictionaryGetCount" = "q^{__CFDictionary=}";
	"CFDictionaryGetCountOfKey" = "q^{__CFDictionary=}^v";
	"CFDictionaryGetCountOfValue" = "q^{__CFDictionary=}^v";
	"CFDictionaryGetKeysAndValues" = "v^{__CFDictionary=}^?^?";
	"CFDictionaryGetTypeID" = "Q";
	"CFDictionaryGetValue" = "^v^{__CFDictionary=}^v";
	"CFDictionaryGetValueIfPresent" = "C^{__CFDictionary=}^v^?";
	"CFDictionaryRemoveAllValues" = "v^{__CFDictionary=}";
	"CFDictionaryRemoveValue" = "v^{__CFDictionary=}^v";
	"CFDictionaryReplaceValue" = "v^{__CFDictionary=}^v^v";
	"CFDictionarySetValue" = "v^{__CFDictionary=}^v^v";
	"CFEqual" = "C^v^v";
	"CFErrorCopyDescription" = "^{__CFString=}^{__CFError=}";
	"CFErrorCopyFailureReason" = "^{__CFString=}^{__CFError=}";
	"CFErrorCopyRecoverySuggestion" = "^{__CFString=}^{__CFError=}";
	"CFErrorCopyUserInfo" = "^{__CFDictionary=}^{__CFError=}";
	"CFErrorCreate" = "^{__CFError=}^{__CFAllocator=}^{__CFString=}q^{__CFDictionary=}";
	"CFErrorCreateWithUserInfoKeysAndValues" = "^{__CFError=}^{__CFAllocator=}^{__CFString=}q^?^?q";
	"CFErrorGetCode" = "q^{__CFError=}";
	"CFErrorGetDomain" = "^{__CFString=}^{__CFError=}";
	"CFErrorGetTypeID" = "Q";
	"CFFileDescriptorCreate" = "^{__CFFileDescriptor=}^{__CFAllocator=}iC^?^{?=}";
	"CFFileDescriptorCreateRunLoopSource" = "^{__CFRunLoopSource=}^{__CFAllocator=}^{__CFFileDescriptor=}q";
	"CFFileDescriptorDisableCallBacks" = "v^{__CFFileDescriptor=}Q";
	"CFFileDescriptorEnableCallBacks" = "v^{__CFFileDescriptor=}Q";
	"CFFileDescriptorGetContext" = "v^{__CFFileDescriptor=}^{?=}";
	"CFFileDescriptorGetNativeDescriptor" = "i^{__CFFileDescriptor=}";
	"CFFileDescriptorGetTypeID" = "Q";
	"CFFileDescriptorInvalidate" = "v^{__CFFileDescriptor=}";
	"CFFileDescriptorIsValid" = "C^{__CFFileDescriptor=}";
	"CFFileSecurityClearProperties" = "C^{__CFFileSecurity=}Q";
	"CFFileSecurityCopyAccessControlList" = "C^{__CFFileSecurity=}^^{_acl=}";
	"CFFileSecurityCopyGroupUUID" = "C^{__CFFileSecurity=}^^{__CFUUID=}";
	"CFFileSecurityCopyOwnerUUID" = "C^{__CFFileSecurity=}^^{__CFUUID=}";
	"CFFileSecurityCreate" = "^{__CFFileSecurity=}^{__CFAllocator=}";
	"CFFileSecurityCreateCopy" = "^{__CFFileSecurity=}^{__CFAllocator=}^{__CFFileSecurity=}";
	"CFFileSecurityGetGroup" = "C^{__CFFileSecurity=}^I";
	"CFFileSecurityGetMode" = "C^{__CFFileSecurity=}^S";
	"CFFileSecurityGetOwner" = "C^{__CFFileSecurity=}^I";
	"CFFileSecurityGetTypeID" = "Q";
	"CFFileSecuritySetAccessControlList" = "C^{__CFFileSecurity=}^{_acl=}";
	"CFFileSecuritySetGroup" = "C^{__CFFileSecurity=}I";
	"CFFileSecuritySetGroupUUID" = "C^{__CFFileSecurity=}^{__CFUUID=}";
	"CFFileSecuritySetMode" = "C^{__CFFileSecurity=}S";
	"CFFileSecuritySetOwner" = "C^{__CFFileSecurity=}I";
	"CFFileSecuritySetOwnerUUID" = "C^{__CFFileSecurity=}^{__CFUUID=}";
	"CFGetAllocator" = "^{__CFAllocator=}^v";
	"CFGetRetainCount" = "q^v";
	"CFGetTypeID" = "Q^v";
	"CFGregorianDateGetAbsoluteTime" = "d{?=}^{__CFTimeZone=}";
	"CFGregorianDateIsValid" = "C{?=}Q";
	"CFHash" = "Q^v";
	"CFLocaleCopyAvailableLocaleIdentifiers" = "^{__CFArray=}";
	"CFLocaleCopyCommonISOCurrencyCodes" = "^{__CFArray=}";
	"CFLocaleCopyCurrent" = "^{__CFLocale=}";
	"CFLocaleCopyDisplayNameForPropertyValue" = "^{__CFString=}^{__CFLocale=}^{__CFString=}^{__CFString=}";
	"CFLocaleCopyISOCountryCodes" = "^{__CFArray=}";
	"CFLocaleCopyISOCurrencyCodes" = "^{__CFArray=}";
	"CFLocaleCopyISOLanguageCodes" = "^{__CFArray=}";
	"CFLocaleCopyPreferredLanguages" = "^{__CFArray=}";
	"CFLocaleCreate" = "^{__CFLocale=}^{__CFAllocator=}^{__CFString=}";
	"CFLocaleCreateCanonicalLanguageIdentifierFromString" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}";
	"CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes" = "^{__CFString=}^{__CFAllocator=}ss";
	"CFLocaleCreateCanonicalLocaleIdentifierFromString" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}";
	"CFLocaleCreateComponentsFromLocaleIdentifier" = "^{__CFDictionary=}^{__CFAllocator=}^{__CFString=}";
	"CFLocaleCreateCopy" = "^{__CFLocale=}^{__CFAllocator=}^{__CFLocale=}";
	"CFLocaleCreateLocaleIdentifierFromComponents" = "^{__CFString=}^{__CFAllocator=}^{__CFDictionary=}";
	"CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode" = "^{__CFString=}^{__CFAllocator=}I";
	"CFLocaleGetIdentifier" = "^{__CFString=}^{__CFLocale=}";
	"CFLocaleGetLanguageCharacterDirection" = "q^{__CFString=}";
	"CFLocaleGetLanguageLineDirection" = "q^{__CFString=}";
	"CFLocaleGetSystem" = "^{__CFLocale=}";
	"CFLocaleGetTypeID" = "Q";
	"CFLocaleGetValue" = "^v^{__CFLocale=}^{__CFString=}";
	"CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier" = "I^{__CFString=}";
	"CFMachPortCreate" = "^{__CFMachPort=}^{__CFAllocator=}^?^{?=}^C";
	"CFMachPortCreateRunLoopSource" = "^{__CFRunLoopSource=}^{__CFAllocator=}^{__CFMachPort=}q";
	"CFMachPortCreateWithPort" = "^{__CFMachPort=}^{__CFAllocator=}I^?^{?=}^C";
	"CFMachPortGetContext" = "v^{__CFMachPort=}^{?=}";
	"CFMachPortGetInvalidationCallBack" = "^?^{__CFMachPort=}";
	"CFMachPortGetPort" = "I^{__CFMachPort=}";
	"CFMachPortGetTypeID" = "Q";
	"CFMachPortInvalidate" = "v^{__CFMachPort=}";
	"CFMachPortIsValid" = "C^{__CFMachPort=}";
	"CFMachPortSetInvalidationCallBack" = "v^{__CFMachPort=}^?";
	"CFMakeCollectable" = "^v^v";
	"CFMessagePortCreateLocal" = "^{__CFMessagePort=}^{__CFAllocator=}^{__CFString=}^?^{?=}^C";
	"CFMessagePortCreateRemote" = "^{__CFMessagePort=}^{__CFAllocator=}^{__CFString=}";
	"CFMessagePortCreateRunLoopSource" = "^{__CFRunLoopSource=}^{__CFAllocator=}^{__CFMessagePort=}q";
	"CFMessagePortGetContext" = "v^{__CFMessagePort=}^{?=}";
	"CFMessagePortGetInvalidationCallBack" = "^?^{__CFMessagePort=}";
	"CFMessagePortGetName" = "^{__CFString=}^{__CFMessagePort=}";
	"CFMessagePortGetTypeID" = "Q";
	"CFMessagePortInvalidate" = "v^{__CFMessagePort=}";
	"CFMessagePortIsRemote" = "C^{__CFMessagePort=}";
	"CFMessagePortIsValid" = "C^{__CFMessagePort=}";
	"CFMessagePortSendRequest" = "i^{__CFMessagePort=}i^{__CFData=}dd^{__CFString=}^^{__CFData=}";
	"CFMessagePortSetDispatchQueue" = "v^{__CFMessagePort=}^{dispatch_queue_s=}";
	"CFMessagePortSetInvalidationCallBack" = "v^{__CFMessagePort=}^?";
	"CFMessagePortSetName" = "C^{__CFMessagePort=}^{__CFString=}";
	"CFNotificationCenterAddObserver" = "v^{__CFNotificationCenter=}^v^?^{__CFString=}^vq";
	"CFNotificationCenterGetDarwinNotifyCenter" = "^{__CFNotificationCenter=}";
	"CFNotificationCenterGetLocalCenter" = "^{__CFNotificationCenter=}";
	"CFNotificationCenterGetTypeID" = "Q";
	"CFNotificationCenterPostNotification" = "v^{__CFNotificationCenter=}^{__CFString=}^v^{__CFDictionary=}C";
	"CFNotificationCenterPostNotificationWithOptions" = "v^{__CFNotificationCenter=}^{__CFString=}^v^{__CFDictionary=}Q";
	"CFNotificationCenterRemoveEveryObserver" = "v^{__CFNotificationCenter=}^v";
	"CFNotificationCenterRemoveObserver" = "v^{__CFNotificationCenter=}^v^{__CFString=}^v";
	"CFNullGetTypeID" = "Q";
	"CFNumberCompare" = "q^{__CFNumber=}^{__CFNumber=}^v";
	"CFNumberCreate" = "^{__CFNumber=}^{__CFAllocator=}q^v";
	"CFNumberFormatterCopyProperty" = "^v^{__CFNumberFormatter=}^{__CFString=}";
	"CFNumberFormatterCreate" = "^{__CFNumberFormatter=}^{__CFAllocator=}^{__CFLocale=}q";
	"CFNumberFormatterCreateNumberFromString" = "^{__CFNumber=}^{__CFAllocator=}^{__CFNumberFormatter=}^{__CFString=}^{?=}Q";
	"CFNumberFormatterCreateStringWithNumber" = "^{__CFString=}^{__CFAllocator=}^{__CFNumberFormatter=}^{__CFNumber=}";
	"CFNumberFormatterCreateStringWithValue" = "^{__CFString=}^{__CFAllocator=}^{__CFNumberFormatter=}q^v";
	"CFNumberFormatterGetDecimalInfoForCurrencyCode" = "C^{__CFString=}^i^d";
	"CFNumberFormatterGetFormat" = "^{__CFString=}^{__CFNumberFormatter=}";
	"CFNumberFormatterGetLocale" = "^{__CFLocale=}^{__CFNumberFormatter=}";
	"CFNumberFormatterGetStyle" = "q^{__CFNumberFormatter=}";
	"CFNumberFormatterGetTypeID" = "Q";
	"CFNumberFormatterGetValueFromString" = "C^{__CFNumberFormatter=}^{__CFString=}^{?=}q^v";
	"CFNumberFormatterSetFormat" = "v^{__CFNumberFormatter=}^{__CFString=}";
	"CFNumberFormatterSetProperty" = "v^{__CFNumberFormatter=}^{__CFString=}^v";
	"CFNumberGetByteSize" = "q^{__CFNumber=}";
	"CFNumberGetType" = "q^{__CFNumber=}";
	"CFNumberGetTypeID" = "Q";
	"CFNumberGetValue" = "C^{__CFNumber=}q^v";
	"CFNumberIsFloatType" = "C^{__CFNumber=}";
	"CFPlugInAddInstanceForFactory" = "v^{__CFUUID=}";
	"CFPlugInCreate" = "^{__CFBundle=}^{__CFAllocator=}^{__CFURL=}";
	"CFPlugInFindFactoriesForPlugInType" = "^{__CFArray=}^{__CFUUID=}";
	"CFPlugInFindFactoriesForPlugInTypeInPlugIn" = "^{__CFArray=}^{__CFUUID=}^{__CFBundle=}";
	"CFPlugInGetBundle" = "^{__CFBundle=}^{__CFBundle=}";
	"CFPlugInGetTypeID" = "Q";
	"CFPlugInInstanceCreate" = "^v^{__CFAllocator=}^{__CFUUID=}^{__CFUUID=}";
	"CFPlugInInstanceCreateWithInstanceDataSize" = "^{__CFPlugInInstance=}^{__CFAllocator=}q^?^{__CFString=}^?";
	"CFPlugInInstanceGetFactoryName" = "^{__CFString=}^{__CFPlugInInstance=}";
	"CFPlugInInstanceGetInstanceData" = "^v^{__CFPlugInInstance=}";
	"CFPlugInInstanceGetInterfaceFunctionTable" = "C^{__CFPlugInInstance=}^{__CFString=}^?";
	"CFPlugInInstanceGetTypeID" = "Q";
	"CFPlugInIsLoadOnDemand" = "C^{__CFBundle=}";
	"CFPlugInRegisterFactoryFunction" = "C^{__CFUUID=}^?";
	"CFPlugInRegisterFactoryFunctionByName" = "C^{__CFUUID=}^{__CFBundle=}^{__CFString=}";
	"CFPlugInRegisterPlugInType" = "C^{__CFUUID=}^{__CFUUID=}";
	"CFPlugInRemoveInstanceForFactory" = "v^{__CFUUID=}";
	"CFPlugInSetLoadOnDemand" = "v^{__CFBundle=}C";
	"CFPlugInUnregisterFactory" = "C^{__CFUUID=}";
	"CFPlugInUnregisterPlugInType" = "C^{__CFUUID=}^{__CFUUID=}";
	"CFPreferencesAddSuitePreferencesToApp" = "v^{__CFString=}^{__CFString=}";
	"CFPreferencesAppSynchronize" = "C^{__CFString=}";
	"CFPreferencesAppValueIsForced" = "C^{__CFString=}^{__CFString=}";
	"CFPreferencesCopyAppValue" = "^v^{__CFString=}^{__CFString=}";
	"CFPreferencesCopyApplicationList" = "^{__CFArray=}^{__CFString=}^{__CFString=}";
	"CFPreferencesCopyKeyList" = "^{__CFArray=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFPreferencesCopyMultiple" = "^{__CFDictionary=}^{__CFArray=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFPreferencesCopyValue" = "^v^{__CFString=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFPreferencesGetAppBooleanValue" = "C^{__CFString=}^{__CFString=}^C";
	"CFPreferencesGetAppIntegerValue" = "q^{__CFString=}^{__CFString=}^C";
	"CFPreferencesRemoveSuitePreferencesFromApp" = "v^{__CFString=}^{__CFString=}";
	"CFPreferencesSetAppValue" = "v^{__CFString=}^v^{__CFString=}";
	"CFPreferencesSetMultiple" = "v^{__CFDictionary=}^{__CFArray=}^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFPreferencesSetValue" = "v^{__CFString=}^v^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFPreferencesSynchronize" = "C^{__CFString=}^{__CFString=}^{__CFString=}";
	"CFPropertyListCreateData" = "^{__CFData=}^{__CFAllocator=}^vqQ^^{__CFError=}";
	"CFPropertyListCreateDeepCopy" = "^v^{__CFAllocator=}^vQ";
	"CFPropertyListCreateFromStream" = "^v^{__CFAllocator=}^{__CFReadStream=}qQ^q^^{__CFString=}";
	"CFPropertyListCreateFromXMLData" = "^v^{__CFAllocator=}^{__CFData=}Q^^{__CFString=}";
	"CFPropertyListCreateWithData" = "^v^{__CFAllocator=}^{__CFData=}Q^q^^{__CFError=}";
	"CFPropertyListCreateWithStream" = "^v^{__CFAllocator=}^{__CFReadStream=}qQ^q^^{__CFError=}";
	"CFPropertyListCreateXMLData" = "^{__CFData=}^{__CFAllocator=}^v";
	"CFPropertyListIsValid" = "C^vq";
	"CFPropertyListWrite" = "q^v^{__CFWriteStream=}qQ^^{__CFError=}";
	"CFPropertyListWriteToStream" = "q^v^{__CFWriteStream=}q^^{__CFString=}";
	"CFReadStreamClose" = "v^{__CFReadStream=}";
	"CFReadStreamCopyDispatchQueue" = "^{dispatch_queue_s=}^{__CFReadStream=}";
	"CFReadStreamCopyError" = "^{__CFError=}^{__CFReadStream=}";
	"CFReadStreamCopyProperty" = "^v^{__CFReadStream=}^{__CFString=}";
	"CFReadStreamCreateWithBytesNoCopy" = "^{__CFReadStream=}^{__CFAllocator=}^Cq^{__CFAllocator=}";
	"CFReadStreamCreateWithFile" = "^{__CFReadStream=}^{__CFAllocator=}^{__CFURL=}";
	"CFReadStreamGetBuffer" = "^C^{__CFReadStream=}q^q";
	"CFReadStreamGetError" = "{?=}^{__CFReadStream=}";
	"CFReadStreamGetStatus" = "q^{__CFReadStream=}";
	"CFReadStreamGetTypeID" = "Q";
	"CFReadStreamHasBytesAvailable" = "C^{__CFReadStream=}";
	"CFReadStreamOpen" = "C^{__CFReadStream=}";
	"CFReadStreamRead" = "q^{__CFReadStream=}^Cq";
	"CFReadStreamScheduleWithRunLoop" = "v^{__CFReadStream=}^{__CFRunLoop=}^{__CFString=}";
	"CFReadStreamSetClient" = "C^{__CFReadStream=}Q^?^{?=}";
	"CFReadStreamSetDispatchQueue" = "v^{__CFReadStream=}^{dispatch_queue_s=}";
	"CFReadStreamSetProperty" = "C^{__CFReadStream=}^{__CFString=}^v";
	"CFReadStreamUnscheduleFromRunLoop" = "v^{__CFReadStream=}^{__CFRunLoop=}^{__CFString=}";
	"CFRelease" = "v^v";
	"CFRetain" = "^v^v";
	"CFRunLoopAddCommonMode" = "v^{__CFRunLoop=}^{__CFString=}";
	"CFRunLoopAddObserver" = "v^{__CFRunLoop=}^{__CFRunLoopObserver=}^{__CFString=}";
	"CFRunLoopAddSource" = "v^{__CFRunLoop=}^{__CFRunLoopSource=}^{__CFString=}";
	"CFRunLoopAddTimer" = "v^{__CFRunLoop=}^{__CFRunLoopTimer=}^{__CFString=}";
	"CFRunLoopContainsObserver" = "C^{__CFRunLoop=}^{__CFRunLoopObserver=}^{__CFString=}";
	"CFRunLoopContainsSource" = "C^{__CFRunLoop=}^{__CFRunLoopSource=}^{__CFString=}";
	"CFRunLoopContainsTimer" = "C^{__CFRunLoop=}^{__CFRunLoopTimer=}^{__CFString=}";
	"CFRunLoopCopyAllModes" = "^{__CFArray=}^{__CFRunLoop=}";
	"CFRunLoopCopyCurrentMode" = "^{__CFString=}^{__CFRunLoop=}";
	"CFRunLoopGetCurrent" = "^{__CFRunLoop=}";
	"CFRunLoopGetMain" = "^{__CFRunLoop=}";
	"CFRunLoopGetNextTimerFireDate" = "d^{__CFRunLoop=}^{__CFString=}";
	"CFRunLoopGetTypeID" = "Q";
	"CFRunLoopIsWaiting" = "C^{__CFRunLoop=}";
	"CFRunLoopObserverCreate" = "^{__CFRunLoopObserver=}^{__CFAllocator=}QCq^?^{?=}";
	"CFRunLoopObserverCreateWithHandler" = "^{__CFRunLoopObserver=}^{__CFAllocator=}QCq^?";
	"CFRunLoopObserverDoesRepeat" = "C^{__CFRunLoopObserver=}";
	"CFRunLoopObserverGetActivities" = "Q^{__CFRunLoopObserver=}";
	"CFRunLoopObserverGetContext" = "v^{__CFRunLoopObserver=}^{?=}";
	"CFRunLoopObserverGetOrder" = "q^{__CFRunLoopObserver=}";
	"CFRunLoopObserverGetTypeID" = "Q";
	"CFRunLoopObserverInvalidate" = "v^{__CFRunLoopObserver=}";
	"CFRunLoopObserverIsValid" = "C^{__CFRunLoopObserver=}";
	"CFRunLoopPerformBlock" = "v^{__CFRunLoop=}^v^?";
	"CFRunLoopRemoveObserver" = "v^{__CFRunLoop=}^{__CFRunLoopObserver=}^{__CFString=}";
	"CFRunLoopRemoveSource" = "v^{__CFRunLoop=}^{__CFRunLoopSource=}^{__CFString=}";
	"CFRunLoopRemoveTimer" = "v^{__CFRunLoop=}^{__CFRunLoopTimer=}^{__CFString=}";
	"CFRunLoopRun" = "v";
	"CFRunLoopRunInMode" = "i^{__CFString=}dC";
	"CFRunLoopSourceCreate" = "^{__CFRunLoopSource=}^{__CFAllocator=}q^{?=}";
	"CFRunLoopSourceGetContext" = "v^{__CFRunLoopSource=}^{?=}";
	"CFRunLoopSourceGetOrder" = "q^{__CFRunLoopSource=}";
	"CFRunLoopSourceGetTypeID" = "Q";
	"CFRunLoopSourceInvalidate" = "v^{__CFRunLoopSource=}";
	"CFRunLoopSourceIsValid" = "C^{__CFRunLoopSource=}";
	"CFRunLoopSourceSignal" = "v^{__CFRunLoopSource=}";
	"CFRunLoopStop" = "v^{__CFRunLoop=}";
	"CFRunLoopTimerCreate" = "^{__CFRunLoopTimer=}^{__CFAllocator=}ddQq^?^{?=}";
	"CFRunLoopTimerCreateWithHandler" = "^{__CFRunLoopTimer=}^{__CFAllocator=}ddQq^?";
	"CFRunLoopTimerDoesRepeat" = "C^{__CFRunLoopTimer=}";
	"CFRunLoopTimerGetContext" = "v^{__CFRunLoopTimer=}^{?=}";
	"CFRunLoopTimerGetInterval" = "d^{__CFRunLoopTimer=}";
	"CFRunLoopTimerGetNextFireDate" = "d^{__CFRunLoopTimer=}";
	"CFRunLoopTimerGetOrder" = "q^{__CFRunLoopTimer=}";
	"CFRunLoopTimerGetTolerance" = "d^{__CFRunLoopTimer=}";
	"CFRunLoopTimerGetTypeID" = "Q";
	"CFRunLoopTimerInvalidate" = "v^{__CFRunLoopTimer=}";
	"CFRunLoopTimerIsValid" = "C^{__CFRunLoopTimer=}";
	"CFRunLoopTimerSetNextFireDate" = "v^{__CFRunLoopTimer=}d";
	"CFRunLoopTimerSetTolerance" = "v^{__CFRunLoopTimer=}d";
	"CFRunLoopWakeUp" = "v^{__CFRunLoop=}";
	"CFSetAddValue" = "v^{__CFSet=}^v";
	"CFSetApplyFunction" = "v^{__CFSet=}^?^v";
	"CFSetContainsValue" = "C^{__CFSet=}^v";
	"CFSetCreate" = "^{__CFSet=}^{__CFAllocator=}^?q^{?=}";
	"CFSetCreateCopy" = "^{__CFSet=}^{__CFAllocator=}^{__CFSet=}";
	"CFSetCreateMutable" = "^{__CFSet=}^{__CFAllocator=}q^{?=}";
	"CFSetCreateMutableCopy" = "^{__CFSet=}^{__CFAllocator=}q^{__CFSet=}";
	"CFSetGetCount" = "q^{__CFSet=}";
	"CFSetGetCountOfValue" = "q^{__CFSet=}^v";
	"CFSetGetTypeID" = "Q";
	"CFSetGetValue" = "^v^{__CFSet=}^v";
	"CFSetGetValueIfPresent" = "C^{__CFSet=}^v^?";
	"CFSetGetValues" = "v^{__CFSet=}^?";
	"CFSetRemoveAllValues" = "v^{__CFSet=}";
	"CFSetRemoveValue" = "v^{__CFSet=}^v";
	"CFSetReplaceValue" = "v^{__CFSet=}^v";
	"CFSetSetValue" = "v^{__CFSet=}^v";
	"CFShow" = "v^v";
	"CFShowStr" = "v^{__CFString=}";
	"CFSocketConnectToAddress" = "q^{__CFSocket=}^{__CFData=}d";
	"CFSocketCopyAddress" = "^{__CFData=}^{__CFSocket=}";
	"CFSocketCopyPeerAddress" = "^{__CFData=}^{__CFSocket=}";
	"CFSocketCopyRegisteredSocketSignature" = "q^{?=}d^{__CFString=}^{?=}^^{__CFData=}";
	"CFSocketCopyRegisteredValue" = "q^{?=}d^{__CFString=}^^v^^{__CFData=}";
	"CFSocketCreate" = "^{__CFSocket=}^{__CFAllocator=}iiiQ^?^{?=}";
	"CFSocketCreateConnectedToSocketSignature" = "^{__CFSocket=}^{__CFAllocator=}^{?=}Q^?^{?=}d";
	"CFSocketCreateRunLoopSource" = "^{__CFRunLoopSource=}^{__CFAllocator=}^{__CFSocket=}q";
	"CFSocketCreateWithNative" = "^{__CFSocket=}^{__CFAllocator=}iQ^?^{?=}";
	"CFSocketCreateWithSocketSignature" = "^{__CFSocket=}^{__CFAllocator=}^{?=}Q^?^{?=}";
	"CFSocketDisableCallBacks" = "v^{__CFSocket=}Q";
	"CFSocketEnableCallBacks" = "v^{__CFSocket=}Q";
	"CFSocketGetContext" = "v^{__CFSocket=}^{?=}";
	"CFSocketGetDefaultNameRegistryPortNumber" = "S";
	"CFSocketGetNative" = "i^{__CFSocket=}";
	"CFSocketGetSocketFlags" = "Q^{__CFSocket=}";
	"CFSocketGetTypeID" = "Q";
	"CFSocketInvalidate" = "v^{__CFSocket=}";
	"CFSocketIsValid" = "C^{__CFSocket=}";
	"CFSocketRegisterSocketSignature" = "q^{?=}d^{__CFString=}^{?=}";
	"CFSocketRegisterValue" = "q^{?=}d^{__CFString=}^v";
	"CFSocketSendData" = "q^{__CFSocket=}^{__CFData=}^{__CFData=}d";
	"CFSocketSetAddress" = "q^{__CFSocket=}^{__CFData=}";
	"CFSocketSetDefaultNameRegistryPortNumber" = "vS";
	"CFSocketSetSocketFlags" = "v^{__CFSocket=}Q";
	"CFSocketUnregister" = "q^{?=}d^{__CFString=}";
	"CFStreamCreateBoundPair" = "v^{__CFAllocator=}^^{__CFReadStream=}^^{__CFWriteStream=}q";
	"CFStreamCreatePairWithPeerSocketSignature" = "v^{__CFAllocator=}^{?=}^^{__CFReadStream=}^^{__CFWriteStream=}";
	"CFStreamCreatePairWithSocket" = "v^{__CFAllocator=}i^^{__CFReadStream=}^^{__CFWriteStream=}";
	"CFStreamCreatePairWithSocketToHost" = "v^{__CFAllocator=}^{__CFString=}I^^{__CFReadStream=}^^{__CFWriteStream=}";
	"CFStringAppend" = "v^{__CFString=}^{__CFString=}";
	"CFStringAppendCString" = "v^{__CFString=}*I";
	"CFStringAppendCharacters" = "v^{__CFString=}^Sq";
	"CFStringAppendFormat" = "$CFStringAppendFormat"; // v^{__CFString=}^{__CFDictionary=}^{__CFString=}...
	"CFStringAppendFormatAndArguments" = "$CFStringAppendFormatAndArguments"; // v^{__CFString=}^{__CFDictionary=}^{__CFString=}...
	"CFStringAppendPascalString" = "v^{__CFString=}^CI";
	"CFStringCapitalize" = "v^{__CFString=}^{__CFLocale=}";
	"CFStringCompare" = "q^{__CFString=}^{__CFString=}Q";
	"CFStringCompareWithOptions" = "q^{__CFString=}^{__CFString=}{?=}Q";
	"CFStringCompareWithOptionsAndLocale" = "q^{__CFString=}^{__CFString=}{?=}Q^{__CFLocale=}";
	"CFStringConvertEncodingToIANACharSetName" = "^{__CFString=}I";
	"CFStringConvertEncodingToNSStringEncoding" = "QI";
	"CFStringConvertEncodingToWindowsCodepage" = "II";
	"CFStringConvertIANACharSetNameToEncoding" = "I^{__CFString=}";
	"CFStringConvertNSStringEncodingToEncoding" = "IQ";
	"CFStringConvertWindowsCodepageToEncoding" = "II";
	"CFStringCreateArrayBySeparatingStrings" = "^{__CFArray=}^{__CFAllocator=}^{__CFString=}^{__CFString=}";
	"CFStringCreateArrayWithFindResults" = "^{__CFArray=}^{__CFAllocator=}^{__CFString=}^{__CFString=}{?=}Q";
	"CFStringCreateByCombiningStrings" = "^{__CFString=}^{__CFAllocator=}^{__CFArray=}^{__CFString=}";
	"CFStringCreateCopy" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}";
	"CFStringCreateExternalRepresentation" = "^{__CFData=}^{__CFAllocator=}^{__CFString=}IC";
	"CFStringCreateFromExternalRepresentation" = "^{__CFString=}^{__CFAllocator=}^{__CFData=}I";
	"CFStringCreateMutable" = "^{__CFString=}^{__CFAllocator=}q";
	"CFStringCreateMutableCopy" = "^{__CFString=}^{__CFAllocator=}q^{__CFString=}";
	"CFStringCreateMutableWithExternalCharactersNoCopy" = "^{__CFString=}^{__CFAllocator=}^Sqq^{__CFAllocator=}";
	"CFStringCreateWithBytes" = "^{__CFString=}^{__CFAllocator=}^CqIC";
	"CFStringCreateWithBytesNoCopy" = "^{__CFString=}^{__CFAllocator=}^CqIC^{__CFAllocator=}";
	"CFStringCreateWithCString" = "^{__CFString=}^{__CFAllocator=}*I";
	"CFStringCreateWithCStringNoCopy" = "^{__CFString=}^{__CFAllocator=}*I^{__CFAllocator=}";
	"CFStringCreateWithCharacters" = "^{__CFString=}^{__CFAllocator=}^Sq";
	"CFStringCreateWithCharactersNoCopy" = "^{__CFString=}^{__CFAllocator=}^Sq^{__CFAllocator=}";
	"CFStringCreateWithFileSystemRepresentation" = "^{__CFString=}^{__CFAllocator=}*";
	"CFStringCreateWithFormat" = "$CFStringCreateWithFormat"; // ^{__CFString=}^{__CFAllocator=}^{__CFDictionary=}^{__CFString=}...
	"CFStringCreateWithFormatAndArguments" = "$CFStringCreateWithFormatAndArguments"; // ^{__CFString=}^{__CFAllocator=}^{__CFDictionary=}^{__CFString=}...
	"CFStringCreateWithPascalString" = "^{__CFString=}^{__CFAllocator=}^CI";
	"CFStringCreateWithPascalStringNoCopy" = "^{__CFString=}^{__CFAllocator=}^CI^{__CFAllocator=}";
	"CFStringCreateWithSubstring" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}{?=}";
	"CFStringDelete" = "v^{__CFString=}{?=}";
	"CFStringFind" = "{?=}^{__CFString=}^{__CFString=}Q";
	"CFStringFindAndReplace" = "q^{__CFString=}^{__CFString=}^{__CFString=}{?=}Q";
	"CFStringFindCharacterFromSet" = "C^{__CFString=}^{__CFCharacterSet=}{?=}Q^{?=}";
	"CFStringFindWithOptions" = "C^{__CFString=}^{__CFString=}{?=}Q^{?=}";
	"CFStringFindWithOptionsAndLocale" = "C^{__CFString=}^{__CFString=}{?=}Q^{__CFLocale=}^{?=}";
	"CFStringFold" = "v^{__CFString=}Q^{__CFLocale=}";
	"CFStringGetBytes" = "q^{__CFString=}{?=}ICC^Cq^q";
	"CFStringGetCString" = "C^{__CFString=}*qI";
	"CFStringGetCStringPtr" = "*^{__CFString=}I";
	"CFStringGetCharacterAtIndex" = "S^{__CFString=}q";
	"CFStringGetCharacters" = "v^{__CFString=}{?=}^S";
	"CFStringGetCharactersPtr" = "^S^{__CFString=}";
	"CFStringGetDoubleValue" = "d^{__CFString=}";
	"CFStringGetFastestEncoding" = "I^{__CFString=}";
	"CFStringGetFileSystemRepresentation" = "C^{__CFString=}*q";
	"CFStringGetHyphenationLocationBeforeIndex" = "q^{__CFString=}q{?=}Q^{__CFLocale=}^I";
	"CFStringGetIntValue" = "i^{__CFString=}";
	"CFStringGetLength" = "q^{__CFString=}";
	"CFStringGetLineBounds" = "v^{__CFString=}{?=}^q^q^q";
	"CFStringGetListOfAvailableEncodings" = "^I";
	"CFStringGetMaximumSizeForEncoding" = "qqI";
	"CFStringGetMaximumSizeOfFileSystemRepresentation" = "q^{__CFString=}";
	"CFStringGetMostCompatibleMacStringEncoding" = "II";
	"CFStringGetNameOfEncoding" = "^{__CFString=}I";
	"CFStringGetParagraphBounds" = "v^{__CFString=}{?=}^q^q^q";
	"CFStringGetPascalString" = "C^{__CFString=}^CqI";
	"CFStringGetPascalStringPtr" = "^C^{__CFString=}I";
	"CFStringGetRangeOfComposedCharactersAtIndex" = "{?=}^{__CFString=}q";
	"CFStringGetSmallestEncoding" = "I^{__CFString=}";
	"CFStringGetSystemEncoding" = "I";
	"CFStringGetTypeID" = "Q";
	"CFStringHasPrefix" = "C^{__CFString=}^{__CFString=}";
	"CFStringHasSuffix" = "C^{__CFString=}^{__CFString=}";
	"CFStringInsert" = "v^{__CFString=}q^{__CFString=}";
	"CFStringIsEncodingAvailable" = "CI";
	"CFStringIsHyphenationAvailableForLocale" = "C^{__CFLocale=}";
	"CFStringLowercase" = "v^{__CFString=}^{__CFLocale=}";
	"CFStringNormalize" = "v^{__CFString=}q";
	"CFStringPad" = "v^{__CFString=}^{__CFString=}qq";
	"CFStringReplace" = "v^{__CFString=}{?=}^{__CFString=}";
	"CFStringReplaceAll" = "v^{__CFString=}^{__CFString=}";
	"CFStringSetExternalCharactersNoCopy" = "v^{__CFString=}^Sqq";
	"CFStringTokenizerAdvanceToNextToken" = "Q^{__CFStringTokenizer=}";
	"CFStringTokenizerCopyBestStringLanguage" = "^{__CFString=}^{__CFString=}{?=}";
	"CFStringTokenizerCopyCurrentTokenAttribute" = "^v^{__CFStringTokenizer=}Q";
	"CFStringTokenizerCreate" = "^{__CFStringTokenizer=}^{__CFAllocator=}^{__CFString=}{?=}Q^{__CFLocale=}";
	"CFStringTokenizerGetCurrentSubTokens" = "q^{__CFStringTokenizer=}^{?=}q^{__CFArray=}";
	"CFStringTokenizerGetCurrentTokenRange" = "{?=}^{__CFStringTokenizer=}";
	"CFStringTokenizerGetTypeID" = "Q";
	"CFStringTokenizerGoToTokenAtIndex" = "Q^{__CFStringTokenizer=}q";
	"CFStringTokenizerSetString" = "v^{__CFStringTokenizer=}^{__CFString=}{?=}";
	"CFStringTransform" = "C^{__CFString=}^{?=}^{__CFString=}C";
	"CFStringTrim" = "v^{__CFString=}^{__CFString=}";
	"CFStringTrimWhitespace" = "v^{__CFString=}";
	"CFStringUppercase" = "v^{__CFString=}^{__CFLocale=}";
	"CFTimeZoneCopyAbbreviation" = "^{__CFString=}^{__CFTimeZone=}d";
	"CFTimeZoneCopyAbbreviationDictionary" = "^{__CFDictionary=}";
	"CFTimeZoneCopyDefault" = "^{__CFTimeZone=}";
	"CFTimeZoneCopyKnownNames" = "^{__CFArray=}";
	"CFTimeZoneCopyLocalizedName" = "^{__CFString=}^{__CFTimeZone=}q^{__CFLocale=}";
	"CFTimeZoneCopySystem" = "^{__CFTimeZone=}";
	"CFTimeZoneCreate" = "^{__CFTimeZone=}^{__CFAllocator=}^{__CFString=}^{__CFData=}";
	"CFTimeZoneCreateWithName" = "^{__CFTimeZone=}^{__CFAllocator=}^{__CFString=}C";
	"CFTimeZoneCreateWithTimeIntervalFromGMT" = "^{__CFTimeZone=}^{__CFAllocator=}d";
	"CFTimeZoneGetData" = "^{__CFData=}^{__CFTimeZone=}";
	"CFTimeZoneGetDaylightSavingTimeOffset" = "d^{__CFTimeZone=}d";
	"CFTimeZoneGetName" = "^{__CFString=}^{__CFTimeZone=}";
	"CFTimeZoneGetNextDaylightSavingTimeTransition" = "d^{__CFTimeZone=}d";
	"CFTimeZoneGetSecondsFromGMT" = "d^{__CFTimeZone=}d";
	"CFTimeZoneGetTypeID" = "Q";
	"CFTimeZoneIsDaylightSavingTime" = "C^{__CFTimeZone=}d";
	"CFTimeZoneResetSystem" = "v";
	"CFTimeZoneSetAbbreviationDictionary" = "v^{__CFDictionary=}";
	"CFTimeZoneSetDefault" = "v^{__CFTimeZone=}";
	"CFTreeAppendChild" = "v^{__CFTree=}^{__CFTree=}";
	"CFTreeApplyFunctionToChildren" = "v^{__CFTree=}^?^v";
	"CFTreeCreate" = "^{__CFTree=}^{__CFAllocator=}^{?=}";
	"CFTreeFindRoot" = "^{__CFTree=}^{__CFTree=}";
	"CFTreeGetChildAtIndex" = "^{__CFTree=}^{__CFTree=}q";
	"CFTreeGetChildCount" = "q^{__CFTree=}";
	"CFTreeGetChildren" = "v^{__CFTree=}^^{__CFTree=}";
	"CFTreeGetContext" = "v^{__CFTree=}^{?=}";
	"CFTreeGetFirstChild" = "^{__CFTree=}^{__CFTree=}";
	"CFTreeGetNextSibling" = "^{__CFTree=}^{__CFTree=}";
	"CFTreeGetParent" = "^{__CFTree=}^{__CFTree=}";
	"CFTreeGetTypeID" = "Q";
	"CFTreeInsertSibling" = "v^{__CFTree=}^{__CFTree=}";
	"CFTreePrependChild" = "v^{__CFTree=}^{__CFTree=}";
	"CFTreeRemove" = "v^{__CFTree=}";
	"CFTreeRemoveAllChildren" = "v^{__CFTree=}";
	"CFTreeSetContext" = "v^{__CFTree=}^{?=}";
	"CFTreeSortChildren" = "v^{__CFTree=}^?^v";
	"CFURLCanBeDecomposed" = "C^{__CFURL=}";
	"CFURLClearResourcePropertyCache" = "v^{__CFURL=}";
	"CFURLClearResourcePropertyCacheForKey" = "v^{__CFURL=}^{__CFString=}";
	"CFURLCopyAbsoluteURQ" = "^{__CFURL=}^{__CFURL=}";
	"CFURLCopyFileSystemPath" = "^{__CFString=}^{__CFURL=}q";
	"CFURLCopyFragment" = "^{__CFString=}^{__CFURL=}^{__CFString=}";
	"CFURLCopyHostName" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyLastPathComponent" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyNetLocation" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyParameterString" = "^{__CFString=}^{__CFURL=}^{__CFString=}";
	"CFURLCopyPassword" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyPath" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyPathExtension" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyQueryString" = "^{__CFString=}^{__CFURL=}^{__CFString=}";
	"CFURLCopyResourcePropertiesForKeys" = "^{__CFDictionary=}^{__CFURL=}^{__CFArray=}^^{__CFError=}";
	"CFURLCopyResourcePropertyForKey" = "C^{__CFURL=}^{__CFString=}^v^^{__CFError=}";
	"CFURLCopyResourceSpecifier" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyScheme" = "^{__CFString=}^{__CFURL=}";
	"CFURLCopyStrictPath" = "^{__CFString=}^{__CFURL=}^C";
	"CFURLCopyUserName" = "^{__CFString=}^{__CFURL=}";
	"CFURLCreateAbsoluteURLWithBytes" = "^{__CFURL=}^{__CFAllocator=}^CqI^{__CFURL=}C";
	"CFURLCreateBookmarkData" = "^{__CFData=}^{__CFAllocator=}^{__CFURL=}Q^{__CFArray=}^{__CFURL=}^^{__CFError=}";
	"CFURLCreateBookmarkDataFromFile" = "^{__CFData=}^{__CFAllocator=}^{__CFURL=}^^{__CFError=}";
	"CFURLCreateByResolvingBookmarkData" = "^{__CFURL=}^{__CFAllocator=}^{__CFData=}Q^{__CFURL=}^{__CFArray=}^C^^{__CFError=}";
	"CFURLCreateCopyAppendingPathComponent" = "^{__CFURL=}^{__CFAllocator=}^{__CFURL=}^{__CFString=}C";
	"CFURLCreateCopyAppendingPathExtension" = "^{__CFURL=}^{__CFAllocator=}^{__CFURL=}^{__CFString=}";
	"CFURLCreateCopyDeletingLastPathComponent" = "^{__CFURL=}^{__CFAllocator=}^{__CFURL=}";
	"CFURLCreateCopyDeletingPathExtension" = "^{__CFURL=}^{__CFAllocator=}^{__CFURL=}";
	"CFURLCreateData" = "^{__CFData=}^{__CFAllocator=}^{__CFURL=}IC";
	"CFURLCreateDataAndPropertiesFromResource" = "C^{__CFAllocator=}^{__CFURL=}^^{__CFData=}^^{__CFDictionary=}^{__CFArray=}^i";
	"CFURLCreateFilePathURQ" = "^{__CFURL=}^{__CFAllocator=}^{__CFURL=}^^{__CFError=}";
	"CFURLCreateFileReferenceURQ" = "^{__CFURL=}^{__CFAllocator=}^{__CFURL=}^^{__CFError=}";
	"CFURLCreateFromFSRef" = "^{__CFURL=}^{__CFAllocator=}^{FSRef=}";
	"CFURLCreateFromFileSystemRepresentation" = "^{__CFURL=}^{__CFAllocator=}^CqC";
	"CFURLCreateFromFileSystemRepresentationRelativeToBase" = "^{__CFURL=}^{__CFAllocator=}^CqC^{__CFURL=}";
	"CFURLCreatePropertyFromResource" = "^v^{__CFAllocator=}^{__CFURL=}^{__CFString=}^i";
	"CFURLCreateResourcePropertiesForKeysFromBookmarkData" = "^{__CFDictionary=}^{__CFAllocator=}^{__CFArray=}^{__CFData=}";
	"CFURLCreateResourcePropertyForKeyFromBookmarkData" = "^v^{__CFAllocator=}^{__CFString=}^{__CFData=}";
	"CFURLCreateStringByAddingPercentEscapes" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{__CFString=}I";
	"CFURLCreateStringByReplacingPercentEscapes" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}";
	"CFURLCreateStringByReplacingPercentEscapesUsingEncoding" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}I";
	"CFURLCreateWithBytes" = "^{__CFURL=}^{__CFAllocator=}^CqI^{__CFURL=}";
	"CFURLCreateWithFileSystemPath" = "^{__CFURL=}^{__CFAllocator=}^{__CFString=}qC";
	"CFURLCreateWithFileSystemPathRelativeToBase" = "^{__CFURL=}^{__CFAllocator=}^{__CFString=}qC^{__CFURL=}";
	"CFURLCreateWithString" = "^{__CFURL=}^{__CFAllocator=}^{__CFString=}^{__CFURL=}";
	"CFURLDestroyResource" = "C^{__CFURL=}^i";
	"CFURLEnumeratorCreateForDirectoryURQ" = "^{__CFURLEnumerator=}^{__CFAllocator=}^{__CFURL=}Q^{__CFArray=}";
	"CFURLEnumeratorCreateForMountedVolumes" = "^{__CFURLEnumerator=}^{__CFAllocator=}Q^{__CFArray=}";
	"CFURLEnumeratorGetDescendentLevel" = "q^{__CFURLEnumerator=}";
	"CFURLEnumeratorGetNextURQ" = "q^{__CFURLEnumerator=}^^{__CFURL=}^^{__CFError=}";
	"CFURLEnumeratorGetSourceDidChange" = "C^{__CFURLEnumerator=}";
	"CFURLEnumeratorGetTypeID" = "Q";
	"CFURLEnumeratorSkipDescendents" = "v^{__CFURLEnumerator=}";
	"CFURLGetBaseURQ" = "^{__CFURL=}^{__CFURL=}";
	"CFURLGetByteRangeForComponent" = "{?=}^{__CFURL=}q^{?=}";
	"CFURLGetBytes" = "q^{__CFURL=}^Cq";
	"CFURLGetFSRef" = "C^{__CFURL=}^{FSRef=}";
	"CFURLGetFileSystemRepresentation" = "C^{__CFURL=}C^Cq";
	"CFURLGetPortNumber" = "i^{__CFURL=}";
	"CFURLGetString" = "^{__CFString=}^{__CFURL=}";
	"CFURLGetTypeID" = "Q";
	"CFURLHasDirectoryPath" = "C^{__CFURL=}";
	"CFURLIsFileReferenceURQ" = "C^{__CFURL=}";
	"CFURLResourceIsReachable" = "C^{__CFURL=}^^{__CFError=}";
	"CFURLSetResourcePropertiesForKeys" = "C^{__CFURL=}^{__CFDictionary=}^^{__CFError=}";
	"CFURLSetResourcePropertyForKey" = "C^{__CFURL=}^{__CFString=}^v^^{__CFError=}";
	"CFURLSetTemporaryResourcePropertyForKey" = "v^{__CFURL=}^{__CFString=}^v";
	"CFURLStartAccessingSecurityScopedResource" = "C^{__CFURL=}";
	"CFURLStopAccessingSecurityScopedResource" = "v^{__CFURL=}";
	"CFURLWriteBookmarkDataToFile" = "C^{__CFData=}^{__CFURL=}Q^^{__CFError=}";
	"CFURLWriteDataAndPropertiesToResource" = "C^{__CFURL=}^{__CFData=}^{__CFDictionary=}^i";
	"CFUUIDCreate" = "^{__CFUUID=}^{__CFAllocator=}";
	"CFUUIDCreateFromString" = "^{__CFUUID=}^{__CFAllocator=}^{__CFString=}";
	"CFUUIDCreateFromUUIDBytes" = "^{__CFUUID=}^{__CFAllocator=}{?=}";
	"CFUUIDCreateString" = "^{__CFString=}^{__CFAllocator=}^{__CFUUID=}";
	"CFUUIDCreateWithBytes" = "^{__CFUUID=}^{__CFAllocator=}CCCCCCCCCCCCCCCC";
	"CFUUIDGetConstantUUIDWithBytes" = "^{__CFUUID=}^{__CFAllocator=}CCCCCCCCCCCCCCCC";
	"CFUUIDGetTypeID" = "Q";
	"CFUUIDGetUUIDBytes" = "{?=}^{__CFUUID=}";
	"CFWriteStreamCanAcceptBytes" = "C^{__CFWriteStream=}";
	"CFWriteStreamClose" = "v^{__CFWriteStream=}";
	"CFWriteStreamCopyDispatchQueue" = "^{dispatch_queue_s=}^{__CFWriteStream=}";
	"CFWriteStreamCopyError" = "^{__CFError=}^{__CFWriteStream=}";
	"CFWriteStreamCopyProperty" = "^v^{__CFWriteStream=}^{__CFString=}";
	"CFWriteStreamCreateWithAllocatedBuffers" = "^{__CFWriteStream=}^{__CFAllocator=}^{__CFAllocator=}";
	"CFWriteStreamCreateWithBuffer" = "^{__CFWriteStream=}^{__CFAllocator=}^Cq";
	"CFWriteStreamCreateWithFile" = "^{__CFWriteStream=}^{__CFAllocator=}^{__CFURL=}";
	"CFWriteStreamGetError" = "{?=}^{__CFWriteStream=}";
	"CFWriteStreamGetStatus" = "q^{__CFWriteStream=}";
	"CFWriteStreamGetTypeID" = "Q";
	"CFWriteStreamOpen" = "C^{__CFWriteStream=}";
	"CFWriteStreamScheduleWithRunLoop" = "v^{__CFWriteStream=}^{__CFRunLoop=}^{__CFString=}";
	"CFWriteStreamSetClient" = "C^{__CFWriteStream=}Q^?^{?=}";
	"CFWriteStreamSetDispatchQueue" = "v^{__CFWriteStream=}^{dispatch_queue_s=}";
	"CFWriteStreamSetProperty" = "C^{__CFWriteStream=}^{__CFString=}^v";
	"CFWriteStreamUnscheduleFromRunLoop" = "v^{__CFWriteStream=}^{__CFRunLoop=}^{__CFString=}";
	"CFWriteStreamWrite" = "q^{__CFWriteStream=}^Cq";
	"__CFRangeMake" = "{?=qq}qq";
	"__CFStringMakeConstantString" = "^{__CFString=}*";
	};
	"/System/Library/Frameworks/Security.framework/Security" = {
		"SSLAddDistinguishedName" = "i^{SSLContext=}^vQ";
		"SSLClose" = "i^{SSLContext=}";
		"SSLContextGetTypeID" = "Q";
		"SSLCopyALPNProtocols" = "i^{SSLContext=}^^{__CFArray=}";
		"SSLCopyDistinguishedNames" = "i^{SSLContext=}^^{__CFArray=}";
		"SSLCopyPeerTrust" = "i^{SSLContext=}^^{__SecTrust=}";
		"SSLCopyRequestedPeerName" = "i^{SSLContext=}*^Q";
		"SSLCopyRequestedPeerNameLength" = "i^{SSLContext=}^Q";
		"SSLCreateContext" = "^{SSLContext=}^{__CFAllocator=}ii";
		"SSLGetBufferedReadSize" = "i^{SSLContext=}^Q";
		"SSLGetClientCertificateState" = "i^{SSLContext=}^i";
		"SSLGetConnection" = "i^{SSLContext=}^^v";
		"SSLGetDatagramWriteSize" = "i^{SSLContext=}^Q";
		"SSLGetEnabledCiphers" = "i^{SSLContext=}^S^Q";
		"SSLGetMaxDatagramRecordSize" = "i^{SSLContext=}^Q";
		"SSLGetNegotiatedCipher" = "i^{SSLContext=}^S";
		"SSLGetNegotiatedProtocolVersion" = "i^{SSLContext=}^i";
		"SSLGetNumberEnabledCiphers" = "i^{SSLContext=}^Q";
		"SSLGetNumberSupportedCiphers" = "i^{SSLContext=}^Q";
		"SSLGetPeerDomainName" = "i^{SSLContext=}*^Q";
		"SSLGetPeerDomainNameLength" = "i^{SSLContext=}^Q";
		"SSLGetPeerID" = "i^{SSLContext=}^?^Q";
		"SSLGetProtocolVersionMax" = "i^{SSLContext=}^i";
		"SSLGetProtocolVersionMin" = "i^{SSLContext=}^i";
		"SSLGetSessionOption" = "i^{SSLContext=}i^C";
		"SSLGetSessionState" = "i^{SSLContext=}^i";
		"SSLGetSupportedCiphers" = "i^{SSLContext=}^S^Q";
		"SSLHandshake" = "i^{SSLContext=}";
		"SSLReHandshake" = "i^{SSLContext=}";
		"SSLRead" = "i^{SSLContext=}^vQ^Q";
		"SSLSetALPNProtocols" = "i^{SSLContext=}^{__CFArray=}";
		"SSLSetCertificate" = "i^{SSLContext=}^{__CFArray=}";
		"SSLSetClientSideAuthenticate" = "i^{SSLContext=}i";
		"SSLSetConnection" = "i^{SSLContext=}^v";
		"SSLSetDatagramHelloCookie" = "i^{SSLContext=}^vQ";
		"SSLSetEnabledCiphers" = "i^{SSLContext=}^SQ";
		"SSLSetEncryptionCertificate" = "i^{SSLContext=}^{__CFArray=}";
		"SSLSetError" = "i^{SSLContext=}i";
		"SSLSetIOFuncs" = "i^{SSLContext=}^?^?";
		"SSLSetMaxDatagramRecordSize" = "i^{SSLContext=}Q";
		"SSLSetOCSPResponse" = "i^{SSLContext=}^{__CFData=}";
		"SSLSetPeerDomainName" = "i^{SSLContext=}*Q";
		"SSLSetPeerID" = "i^{SSLContext=}^vQ";
		"SSLSetProtocolVersionMax" = "i^{SSLContext=}i";
		"SSLSetProtocolVersionMin" = "i^{SSLContext=}i";
		"SSLSetSessionConfig" = "i^{SSLContext=}^{__CFString=}";
		"SSLSetSessionOption" = "i^{SSLContext=}iC";
		"SSLSetSessionTicketsEnabled" = "i^{SSLContext=}C";
		"SSLWrite" = "i^{SSLContext=}^vQ^Q";
		"SecAccessControlCreateWithFlags" = "^{__SecAccessControl=}^{__CFAllocator=}^vQ^^{__CFError=}";
		"SecAccessControlGetTypeID" = "Q";
		"SecAddSharedWebCredential" = "v^{__CFString=}^{__CFString=}^{__CFString=}^?";
		"SecCertificateCopyCommonName" = "i^{__SecCertificate=}^^{__CFString=}";
		"SecCertificateCopyData" = "^{__CFData=}^{__SecCertificate=}";
		"SecCertificateCopyEmailAddresses" = "i^{__SecCertificate=}^^{__CFArray=}";
		"SecCertificateCopyKey" = "^{__SecKey=}^{__SecCertificate=}";
		"SecCertificateCopyNormalizedIssuerSequence" = "^{__CFData=}^{__SecCertificate=}";
		"SecCertificateCopyNormalizedSubjectSequence" = "^{__CFData=}^{__SecCertificate=}";
		"SecCertificateCopyPublicKey" = "^{__SecKey=}^{__SecCertificate=}";
		"SecCertificateCopySerialNumber" = "^{__CFData=}^{__SecCertificate=}";
		"SecCertificateCopySerialNumberData" = "^{__CFData=}^{__SecCertificate=}^^{__CFError=}";
		"SecCertificateCopySubjectSummary" = "^{__CFString=}^{__SecCertificate=}";
		"SecCertificateCreateWithData" = "^{__SecCertificate=}^{__CFAllocator=}^{__CFData=}";
		"SecCertificateGetTypeID" = "Q";
		"SecCopyErrorMessageString" = "^{__CFString=}i^v";
		"SecCreateSharedWebCredentialPassword" = "^{__CFString=}";
		"SecIdentityCopyCertificate" = "i^{__SecIdentity=}^^{__SecCertificate=}";
		"SecIdentityCopyPrivateKey" = "i^{__SecIdentity=}^^{__SecKey=}";
		"SecIdentityGetTypeID" = "Q";
		"SecItemAdd" = "i^{__CFDictionary=}^^v";
		"SecItemCopyMatching" = "i^{__CFDictionary=}^^v";
		"SecItemDelete" = "i^{__CFDictionary=}";
		"SecItemUpdate" = "i^{__CFDictionary=}^{__CFDictionary=}";
		"SecKeyCopyAttributes" = "^{__CFDictionary=}^{__SecKey=}";
		"SecKeyCopyExternalRepresentation" = "^{__CFData=}^{__SecKey=}^^{__CFError=}";
		"SecKeyCopyKeyExchangeResult" = "^{__CFData=}^{__SecKey=}^{__CFString=}^{__SecKey=}^{__CFDictionary=}^^{__CFError=}";
		"SecKeyCopyPublicKey" = "^{__SecKey=}^{__SecKey=}";
		"SecKeyCreateDecryptedData" = "^{__CFData=}^{__SecKey=}^{__CFString=}^{__CFData=}^^{__CFError=}";
		"SecKeyCreateEncryptedData" = "^{__CFData=}^{__SecKey=}^{__CFString=}^{__CFData=}^^{__CFError=}";
		"SecKeyCreateRandomKey" = "^{__SecKey=}^{__CFDictionary=}^^{__CFError=}";
		"SecKeyCreateSignature" = "^{__CFData=}^{__SecKey=}^{__CFString=}^{__CFData=}^^{__CFError=}";
		"SecKeyCreateWithData" = "^{__SecKey=}^{__CFData=}^{__CFDictionary=}^^{__CFError=}";
		"SecKeyDecrypt" = "i^{__SecKey=}I^CQ^C^Q";
		"SecKeyEncrypt" = "i^{__SecKey=}I^CQ^C^Q";
		"SecKeyGeneratePair" = "i^{__CFDictionary=}^^{__SecKey=}^^{__SecKey=}";
		"SecKeyGetBlockSize" = "Q^{__SecKey=}";
		"SecKeyGetTypeID" = "Q";
		"SecKeyIsAlgorithmSupported" = "C^{__SecKey=}q^{__CFString=}";
		"SecKeyRawSign" = "i^{__SecKey=}I^CQ^C^Q";
		"SecKeyRawVerify" = "i^{__SecKey=}I^CQ^CQ";
		"SecKeyVerifySignature" = "C^{__SecKey=}^{__CFString=}^{__CFData=}^{__CFData=}^^{__CFError=}";
		"SecPKCS12Import" = "i^{__CFData=}^{__CFDictionary=}^^{__CFArray=}";
		"SecPolicyCopyProperties" = "^{__CFDictionary=}^{__SecPolicy=}";
		"SecPolicyCreateBasicX509" = "^{__SecPolicy=}";
		"SecPolicyCreateRevocation" = "^{__SecPolicy=}Q";
		"SecPolicyCreateSSL" = "^{__SecPolicy=}C^{__CFString=}";
		"SecPolicyCreateWithProperties" = "^{__SecPolicy=}^v^{__CFDictionary=}";
		"SecPolicyGetTypeID" = "Q";
		"SecRandomCopyBytes" = "i^{__SecRandom=}Q^v";
		"SecRequestSharedWebCredential" = "v^{__CFString=}^{__CFString=}^?";
		"SecTrustCopyCustomAnchorCertificates" = "i^{__SecTrust=}^^{__CFArray=}";
		"SecTrustCopyExceptions" = "^{__CFData=}^{__SecTrust=}";
		"SecTrustCopyPolicies" = "i^{__SecTrust=}^^{__CFArray=}";
		"SecTrustCopyProperties" = "^{__CFArray=}^{__SecTrust=}";
		"SecTrustCopyPublicKey" = "^{__SecKey=}^{__SecTrust=}";
		"SecTrustCopyResult" = "^{__CFDictionary=}^{__SecTrust=}";
		"SecTrustCreateWithCertificates" = "i^v^v^^{__SecTrust=}";
		"SecTrustEvaluate" = "i^{__SecTrust=}^I";
		"SecTrustEvaluateAsync" = "i^{__SecTrust=}^{dispatch_queue_s=}^?";
		"SecTrustEvaluateAsyncWithError" = "i^{__SecTrust=}^{dispatch_queue_s=}^?";
		"SecTrustEvaluateWithError" = "B^{__SecTrust=}^^{__CFError=}";
		"SecTrustGetCertificateAtIndex" = "^{__SecCertificate=}^{__SecTrust=}q";
		"SecTrustGetCertificateCount" = "q^{__SecTrust=}";
		"SecTrustGetNetworkFetchAllowed" = "i^{__SecTrust=}^C";
		"SecTrustGetTrustResult" = "i^{__SecTrust=}^I";
		"SecTrustGetTypeID" = "Q";
		"SecTrustGetVerifyTime" = "d^{__SecTrust=}";
		"SecTrustSetAnchorCertificates" = "i^{__SecTrust=}^{__CFArray=}";
		"SecTrustSetAnchorCertificatesOnly" = "i^{__SecTrust=}C";
		"SecTrustSetExceptions" = "B^{__SecTrust=}^{__CFData=}";
		"SecTrustSetNetworkFetchAllowed" = "i^{__SecTrust=}C";
		"SecTrustSetOCSPResponse" = "i^{__SecTrust=}^v";
		"SecTrustSetPolicies" = "i^{__SecTrust=}^v";
		"SecTrustSetSignedCertificateTimestamps" = "i^{__SecTrust=}^{__CFArray=}";
		"SecTrustSetVerifyDate" = "i^{__SecTrust=}^{__CFDate=}";
		"sec_certificate_copy_ref" = "^{__SecCertificate=}^{sec_certificate=}";
		"sec_certificate_create" = "^{sec_certificate=}^{__SecCertificate=}";
		"sec_identity_access_certificates" = "B^{sec_identity=}^?";
		"sec_identity_copy_certificates_ref" = "^{__CFArray=}^{sec_identity=}";
		"sec_identity_copy_ref" = "^{__SecIdentity=}^{sec_identity=}";
		"sec_identity_create" = "^{sec_identity=}^{__SecIdentity=}";
		"sec_identity_create_with_certificates" = "^{sec_identity=}^{__SecIdentity=}^{__CFArray=}";
		"sec_protocol_metadata_access_distinguished_names" = "B^{sec_protocol_metadata=}^?";
		"sec_protocol_metadata_access_ocsp_response" = "B^{sec_protocol_metadata=}^?";
		"sec_protocol_metadata_access_peer_certificate_chain" = "B^{sec_protocol_metadata=}^?";
		"sec_protocol_metadata_access_pre_shared_keys" = "B^{sec_protocol_metadata=}^?";
		"sec_protocol_metadata_access_supported_signature_algorithms" = "B^{sec_protocol_metadata=}^?";
		"sec_protocol_metadata_challenge_parameters_are_equal" = "B^{sec_protocol_metadata=}^{sec_protocol_metadata=}";
		"sec_protocol_metadata_copy_peer_public_key" = "^{dispatch_data_s=}^{sec_protocol_metadata=}";
		"sec_protocol_metadata_create_secret" = "^{dispatch_data_s=}^{sec_protocol_metadata=}Q*Q";
		"sec_protocol_metadata_create_secret_with_context" = "^{dispatch_data_s=}^{sec_protocol_metadata=}Q*Q^CQ";
		"sec_protocol_metadata_get_early_data_accepted" = "B^{sec_protocol_metadata=}";
		"sec_protocol_metadata_get_negotiated_ciphersuite" = "S^{sec_protocol_metadata=}";
		"sec_protocol_metadata_get_negotiated_protocol" = "*^{sec_protocol_metadata=}";
		"sec_protocol_metadata_get_negotiated_protocol_version" = "i^{sec_protocol_metadata=}";
		"sec_protocol_metadata_get_negotiated_tls_ciphersuite" = "S^{sec_protocol_metadata=}";
		"sec_protocol_metadata_get_negotiated_tls_protocol_version" = "S^{sec_protocol_metadata=}";
		"sec_protocol_metadata_get_server_name" = "*^{sec_protocol_metadata=}";
		"sec_protocol_metadata_peers_are_equal" = "B^{sec_protocol_metadata=}^{sec_protocol_metadata=}";
		"sec_protocol_options_add_pre_shared_key" = "v^{sec_protocol_options=}^{dispatch_data_s=}^{dispatch_data_s=}";
		"sec_protocol_options_add_tls_application_protocol" = "v^{sec_protocol_options=}*";
		"sec_protocol_options_add_tls_ciphersuite" = "v^{sec_protocol_options=}S";
		"sec_protocol_options_add_tls_ciphersuite_group" = "v^{sec_protocol_options=}i";
		"sec_protocol_options_append_tls_ciphersuite" = "v^{sec_protocol_options=}S";
		"sec_protocol_options_append_tls_ciphersuite_group" = "v^{sec_protocol_options=}S";
		"sec_protocol_options_are_equal" = "B^{sec_protocol_options=}^{sec_protocol_options=}";
		"sec_protocol_options_get_default_max_dtls_protocol_version" = "S";
		"sec_protocol_options_get_default_max_tls_protocol_version" = "S";
		"sec_protocol_options_get_default_min_dtls_protocol_version" = "S";
		"sec_protocol_options_get_default_min_tls_protocol_version" = "S";
		"sec_protocol_options_set_challenge_block" = "v^{sec_protocol_options=}^?^{dispatch_queue_s=}";
		"sec_protocol_options_set_key_update_block" = "v^{sec_protocol_options=}^?^{dispatch_queue_s=}";
		"sec_protocol_options_set_local_identity" = "v^{sec_protocol_options=}^{sec_identity=}";
		"sec_protocol_options_set_max_tls_protocol_version" = "v^{sec_protocol_options=}S";
		"sec_protocol_options_set_min_tls_protocol_version" = "v^{sec_protocol_options=}S";
		"sec_protocol_options_set_peer_authentication_required" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_pre_shared_key_selection_block" = "v^{sec_protocol_options=}^?^{dispatch_queue_s=}";
		"sec_protocol_options_set_tls_diffie_hellman_parameters" = "v^{sec_protocol_options=}^{dispatch_data_s=}";
		"sec_protocol_options_set_tls_false_start_enabled" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_tls_is_fallback_attempt" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_tls_max_version" = "v^{sec_protocol_options=}i";
		"sec_protocol_options_set_tls_min_version" = "v^{sec_protocol_options=}i";
		"sec_protocol_options_set_tls_ocsp_enabled" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_tls_pre_shared_key_identity_hint" = "v^{sec_protocol_options=}^{dispatch_data_s=}";
		"sec_protocol_options_set_tls_renegotiation_enabled" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_tls_resumption_enabled" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_tls_sct_enabled" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_tls_server_name" = "v^{sec_protocol_options=}*";
		"sec_protocol_options_set_tls_tickets_enabled" = "v^{sec_protocol_options=}B";
		"sec_protocol_options_set_verify_block" = "v^{sec_protocol_options=}^?^{dispatch_queue_s=}";
		"sec_release" = "v^v";
		"sec_retain" = "^v^v";
		"sec_trust_copy_ref" = "^{__SecTrust=}^{sec_trust=}";
		"sec_trust_create" = "^{sec_trust=}^{__SecTrust=}";
	};
	"/usr/lib/libc++abi.dylib" = {
		"__cxa_allocate_exception" = "^vi";
		"__cxa_free_exception" = "v^v";
		"__cxa_throw" = "v^v^v^?";
		"__cxa_get_exception_ptr" = "^v^v";
		"__cxa_begin_catch" = "^v^v";
		"__cxa_end_catch" = "v";
		"__cxa_begin_cleanup" = "B^v";
		"__cxa_end_cleanup" = "v";
		"__cxa_current_exception_type" = "^v";
		"__cxa_rethrow" = "v";
		"__cxa_bad_cast" = "v";
		"__cxa_bad_typeid" = "v";
		"__cxa_throw_bad_array_new_length" = "v";
		"__cxa_pure_virtual" = "v";
		"__cxa_deleted_virtual" = "v";
		"__cxa_guard_acquire" = "i^v";
		"__cxa_guard_release" = "v^v";
		"__cxa_guard_abort" = "v^v";
		"__cxa_call_unexpected" = "v^v";
		"__dynamic_cast" = "^v^v^v^vq";
		"_ZNKSt13runtime_error4whatEv" = "*^?";
		"_ZNSt13runtime_errorD1Ev" = "^?^?";
		"_ZNSt8bad_castC1Ev" = "^?^?";
		"_ZNSt9bad_allocC1Ev" = "^?^?";
		"_ZNSt9exceptionD2Ev" = "^?^?";
		"_ZSt9terminatev" = "v";
		"_ZdaPv" = "v^v";
		"_ZdlPv" = "v^v";
		"_Znam" = "^vQ";
		"_Znwm" = "^vQ"; 
		"_ZnwmRKSt9nothrow_t" = "^v^?Q^v";
	};
	"/usr/lib/system/libsystem_c.dylib" = "/usr/lib/libSystem.B.dylib";
	"/usr/lib/system/libsystem_malloc.dylib" = "/usr/lib/libSystem.B.dylib";
	"/usr/lib/system/libsystem_platform.dylib" = "/usr/lib/libSystem.B.dylib";
	"/usr/lib/swift/libswiftCore.dylib" = {
		"swift_getInitializedObjCClass" = "##";
	};
	"/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics" = {
		// decl for CGRegionContainsPoint not found
		// decl for CGRegionContainsRect not found
		// decl for CGRegionContainsRegion not found
		// decl for CGRegionCreateCopy not found
		// decl for CGRegionCreateDifferenceWithRegion not found
		// decl for CGRegionCreateEmptyRegion not found
		// decl for CGRegionCreateIntersectionWithRect not found
		// decl for CGRegionCreateIntersectionWithRegion not found
		// decl for CGRegionCreateUnionWithRect not found
		// decl for CGRegionCreateUnionWithRegion not found
		// decl for CGRegionCreateWithOffset not found
		// decl for CGRegionCreateWithRect not found
		// decl for CGRegionCreateWithRects not found
		// decl for CGRegionEqualToRegion not found
		// decl for CGRegionGetBoundingBox not found
		// decl for CGRegionIntersectsRect not found
		// decl for CGRegionIntersectsRegion not found
		// decl for CGRegionIsEmpty not found
		// decl for CGRegionIsRect not found
		// decl for CFTypeCreateWithCGPDFObject not found
		// decl for CGAccessSessionCreate not found
		// decl for CGAccessSessionGetBytePointer not found
		// decl for CGAccessSessionGetBytes not found
		// decl for CGAccessSessionGetChunks not found
		// decl for CGAccessSessionRelease not found
		// decl for CGAccessSessionRewind not found
		// decl for CGAccessSessionSkipForward not found
		"CGAffineTransformConcat" = "{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}";
		"CGAffineTransformEqualToTransform" = "B{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}";
		// decl for CGAffineTransformIdentity not found
		"CGAffineTransformInvert" = "{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}";
		"CGAffineTransformIsIdentity" = "B{CGAffineTransform=dddddd}";
		// decl for CGAffineTransformIsRectilinear not found
		// decl for CGAffineTransformIsSingular not found
		"CGAffineTransformMake" = "{CGAffineTransform=dddddd}dddddd";
		"CGAffineTransformMakeRotation" = "{CGAffineTransform=dddddd}d";
		"CGAffineTransformMakeScale" = "{CGAffineTransform=dddddd}dd";
		"CGAffineTransformMakeTranslation" = "{CGAffineTransform=dddddd}dd";
		// decl for CGAffineTransformMakeWithRect not found
		"CGAffineTransformRotate" = "{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}d";
		"CGAffineTransformScale" = "{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}dd";
		"CGAffineTransformTranslate" = "{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}dd";
		// decl for CGApplicationPropertyGetBoolean not found
		// decl for CGBitmapAllocateData not found
		// decl for CGBitmapContextCopyData not found
		"CGBitmapContextCreate" = "^{CGContext=}^vQQQQ^{CGColorSpace=}I";
		"CGBitmapContextCreateImage" = "^{CGImage=}^{CGContext=}";
		// decl for CGBitmapContextCreateWithAlpha not found
		// decl for CGBitmapContextCreateWithCallbacks not found
		"CGBitmapContextCreateWithData" = "^{CGContext=}^vQQQQ^{CGColorSpace=}I^?^v";
		// decl for CGBitmapContextCreateWithDictionary not found
		// decl for CGBitmapContextCreateWithPlanarAlpha not found
		// decl for CGBitmapContextDelegateCreateWithDictionary not found
		// decl for CGBitmapContextGetAlphaBytesPerRow not found
		// decl for CGBitmapContextGetAlphaData not found
		"CGBitmapContextGetAlphaInfo" = "I^{CGContext=}";
		"CGBitmapContextGetBitmapInfo" = "I^{CGContext=}";
		"CGBitmapContextGetBitsPerComponent" = "Q^{CGContext=}";
		"CGBitmapContextGetBitsPerPixel" = "Q^{CGContext=}";
		"CGBitmapContextGetBytesPerRow" = "Q^{CGContext=}";
		"CGBitmapContextGetColorSpace" = "^{CGColorSpace=}^{CGContext=}";
		"CGBitmapContextGetData" = "^v^{CGContext=}";
		"CGBitmapContextGetHeight" = "Q^{CGContext=}";
		"CGBitmapContextGetWidth" = "Q^{CGContext=}";
		// decl for CGBitmapContextSetData not found
		// decl for CGBitmapContextWriteImageToFile not found
		// decl for CGBitmapFreeData not found
		// decl for CGBitmapGetAlignedBytesPerRow not found
		// decl for CGBitmapGetFastestAlignment not found
		// decl for CGBlt_copyBytes not found
		// decl for CGBlt_depth not found
		// decl for CGBlt_fillBytes not found
		// decl for CGBlt_initialize not found
		// decl for CGBlt_release_pattern not found
		// decl for CGBufferLockBytePtr not found
		// decl for CGBufferProviderCreate not found
		// decl for CGBufferProviderCreateWithCFData not found
		// decl for CGBufferProviderGetSize not found
		// decl for CGBufferProviderGetTypeID not found
		// decl for CGBufferUnlockBytePtr not found
		// decl for CGCFArrayAppendCGFloat not found
		// decl for CGCFArrayAppendInteger not found
		// decl for CGCFArrayAppendRect not found
		// decl for CGCFArrayApplyBlock not found
		// decl for CGCFArrayCreate not found
		// decl for CGCFArrayGetLastValue not found
		// decl for CGCFArrayGetRectAtIndex not found
		// decl for CGCFDictionaryApplyBlock not found
		// decl for CGCFDictionaryCopyKeys not found
		// decl for CGCFDictionaryCopyValues not found
		// decl for CGCFDictionaryCreate not found
		// decl for CGCFDictionaryCreateCopy not found
		// decl for CGCFDictionaryGetBoolean not found
		// decl for CGCFDictionaryGetBooleanWithDefault not found
		// decl for CGCFDictionaryGetCFTypeRef not found
		// decl for CGCFDictionaryGetFloat not found
		// decl for CGCFDictionaryGetFloatWithDefault not found
		// decl for CGCFDictionaryGetInteger not found
		// decl for CGCFDictionaryGetIntegerWithDefault not found
		// decl for CGCFDictionaryGetNumber not found
		// decl for CGCFDictionaryGetPoint not found
		// decl for CGCFDictionaryGetRect not found
		// decl for CGCFDictionaryGetSize not found
		// decl for CGCFDictionarySetBoolean not found
		// decl for CGCFDictionarySetCFTypeRef not found
		// decl for CGCFDictionarySetCString not found
		// decl for CGCFDictionarySetFloat not found
		// decl for CGCFDictionarySetInteger not found
		// decl for CGCFDictionarySetNumber not found
		// decl for CGCFDictionarySetPoint not found
		// decl for CGCFDictionarySetRect not found
		// decl for CGCFDictionarySetSize not found
		// decl for CGCFRelease not found
		// decl for CGCFRetain not found
		// decl for CGCFURLCopyFileData not found
		// decl for CGCMSUtilsGetICCProfileData not found
		// decl for CGClipCreateClipPath not found
		// decl for CGClipGetFlatness not found
		// decl for CGClipGetIdentifier not found
		// decl for CGClipGetMask not found
		// decl for CGClipGetMode not found
		// decl for CGClipGetPath not found
		// decl for CGClipGetRect not found
		// decl for CGClipGetShouldAntialias not found
		// decl for CGClipGetStroke not found
		// decl for CGClipGetTextClipping not found
		// decl for CGClipGetType not found
		// decl for CGClipGlyphsCreate not found
		// decl for CGClipGlyphsCreateCopy not found
		// decl for CGClipGlyphsCreateCopyByApplyingTransform not found
		// decl for CGClipGlyphsEqualToClipGlyphs not found
		// decl for CGClipGlyphsGetAdvanceAtIndex not found
		// decl for CGClipGlyphsGetAdvances not found
		// decl for CGClipGlyphsGetBounds not found
		// decl for CGClipGlyphsGetCount not found
		// decl for CGClipGlyphsGetFont not found
		// decl for CGClipGlyphsGetFontAtIndex not found
		// decl for CGClipGlyphsGetFontRenderingStyle not found
		// decl for CGClipGlyphsGetFontRenderingStyleAtIndex not found
		// decl for CGClipGlyphsGetGlyphAtIndex not found
		// decl for CGClipGlyphsGetGlyphs not found
		// decl for CGClipGlyphsGetLength not found
		// decl for CGClipGlyphsGetMatrix not found
		// decl for CGClipGlyphsGetMatrixAtIndex not found
		// decl for CGClipGlyphsRelease not found
		// decl for CGClipGlyphsRetain not found
		// decl for CGClipMaskCreate not found
		// decl for CGClipMaskCreateCopy not found
		// decl for CGClipMaskCreateCopyByApplyingTransform not found
		// decl for CGClipMaskEqualToClipMask not found
		// decl for CGClipMaskGetBounds not found
		// decl for CGClipMaskGetImage not found
		// decl for CGClipMaskGetMatrix not found
		// decl for CGClipMaskGetRect not found
		// decl for CGClipMaskRelease not found
		// decl for CGClipMaskRetain not found
		// decl for CGClipRelease not found
		// decl for CGClipRetain not found
		// decl for CGClipStackAddClip not found
		// decl for CGClipStackAddRect not found
		// decl for CGClipStackContainsMask not found
		// decl for CGClipStackCreateCopy not found
		// decl for CGClipStackCreateMutable not found
		// decl for CGClipStackCreateMutableCopy not found
		// decl for CGClipStackEqual not found
		// decl for CGClipStackGetBounds not found
		// decl for CGClipStackGetClipAtIndex not found
		// decl for CGClipStackGetCount not found
		// decl for CGClipStackGetIdentifier not found
		// decl for CGClipStackGetRect not found
		// decl for CGClipStackIsInfinite not found
		// decl for CGClipStackPrint not found
		// decl for CGClipStackRelease not found
		// decl for CGClipStackRetain not found
		// decl for CGClipStrokeCreate not found
		// decl for CGClipStrokeCreateCopy not found
		// decl for CGClipStrokeCreateCopyWithTransform not found
		// decl for CGClipStrokeCreateStrokedPath not found
		// decl for CGClipStrokeCreateWithGState not found
		// decl for CGClipStrokeGetDash not found
		// decl for CGClipStrokeGetFlatness not found
		// decl for CGClipStrokeGetLineCap not found
		// decl for CGClipStrokeGetLineJoin not found
		// decl for CGClipStrokeGetLineWidth not found
		// decl for CGClipStrokeGetMatrix not found
		// decl for CGClipStrokeGetMiterLimit not found
		// decl for CGClipStrokeGetShouldAntialias not found
		// decl for CGClipStrokeGetStrokeAdjust not found
		// decl for CGClipStrokeRelease not found
		// decl for CGClipStrokeRetain not found
		// decl for CGColorCodeFragmentGetParametricConversion not found
		// decl for CGColorCodeFragmentGetParametricCount not found
		// decl for CGColorCodeFragmentGetTextureData not found
		// decl for CGColorCodeFragmentGetTextureFormat not found
		// decl for CGColorCodeFragmentGetTextureGridPoints not found
		// decl for CGColorCodeFragmentRelease not found
		"CGColorConversionInfoCreate" = "^{CGColorConversionInfo=}^{CGColorSpace=}^{CGColorSpace=}";
		"CGColorConversionInfoCreateFromList" = "^{CGColorConversionInfo=}^{__CFDictionary=}^{CGColorSpace=}Ii...";
		"CGColorConversionInfoCreateFromListWithArguments" = "^{CGColorConversionInfo=}^{__CFDictionary=}^{CGColorSpace=}Ii...";
		"CGColorConversionInfoGetTypeID" = "Q";
		// decl for CGColorConversionInfoIterateColorSpaceFunctionsWithCallbacks not found
		// decl for CGColorConversionInfoIterateFunctionsWithCallbacks not found
		// decl for CGColorConverterCreate not found
		// decl for CGColorConverterCreateSimple not found
		// decl for CGColorConverterGetTypeID not found
		// decl for CGColorConverterIterateColorSpaceFunctionsWithCallbacks not found
		// decl for CGColorConverterIterateFunctionsWithCallbacks not found
		// decl for CGColorConverterRelease not found
		// decl for CGColorConverterRetain not found
		"CGColorCreate" = "^{CGColor=}^{CGColorSpace=}^d";
		"CGColorCreateCopy" = "^{CGColor=}^{CGColor=}";
		"CGColorCreateCopyByMatchingToColorSpace" = "^{CGColor=}^{CGColorSpace=}i^{CGColor=}^{__CFDictionary=}";
		"CGColorCreateCopyWithAlpha" = "^{CGColor=}^{CGColor=}d";
		"CGColorCreateGenericCMYK" = "^{CGColor=}ddddd";
		"CGColorCreateGenericGray" = "^{CGColor=}dd";
		"CGColorCreateGenericRGB" = "^{CGColor=}dddd";
		"CGColorCreateWithPattern" = "^{CGColor=}^{CGColorSpace=}^{CGPattern=}^d";
		// decl for CGColorCurveEqualToGammaCurve not found
		// decl for CGColorCurveGetGamma not found
		// decl for CGColorCurveGetParameters not found
		// decl for CGColorCurveGetTRC not found
		// decl for CGColorCurveMapValue not found
		// decl for CGColorCurvePrint not found
		// decl for CGColorCurveRelease not found
		// decl for CGColorCurveRetain not found
		"CGColorEqualToColor" = "B^{CGColor=}^{CGColor=}";
		// decl for CGColorFunctionGetOptions not found
		// decl for CGColorFunctionGetProperties not found
		"CGColorGetAlpha" = "d^{CGColor=}";
		"CGColorGetColorSpace" = "^{CGColorSpace=}^{CGColor=}";
		"CGColorGetComponents" = "^d^{CGColor=}";
		"CGColorGetConstantColor" = "^{CGColor=}^{__CFString=}";
		// decl for CGColorGetIdentifier not found
		"CGColorGetNumberOfComponents" = "Q^{CGColor=}";
		"CGColorGetPattern" = "^{CGPattern=}^{CGColor=}";
		// decl for CGColorGetPatternBaseColor not found
		"CGColorGetTypeID" = "Q";
		// decl for CGColorMatrixConcat not found
		// decl for CGColorMatrixGetMatrix not found
		// decl for CGColorMatrixGetTypeID not found
		// decl for CGColorMatrixIsIdentity not found
		// decl for CGColorMatrixMake not found
		// decl for CGColorMatrixMakeIdentity not found
		// decl for CGColorNxMLUTGetLUT not found
		// decl for CGColorNxMLUTGetTypeID not found
		"CGColorRelease" = "v^{CGColor=}";
		"CGColorRetain" = "^{CGColor=}^{CGColor=}";
		// decl for CGColorSpaceConcatenate not found
		// decl for CGColorSpaceCopyColorTable not found
		// decl for CGColorSpaceCopyDefaultColor not found
		"CGColorSpaceCopyICCData" = "^{__CFData=}^{CGColorSpace=}";
		"CGColorSpaceCopyICCProfile" = "^{__CFData=}^{CGColorSpace=}";
		// decl for CGColorSpaceCopyICCProfileASCIIDescriptionString not found
		// decl for CGColorSpaceCopyICCProfileDescription not found
		"CGColorSpaceCopyName" = "^{__CFString=}^{CGColorSpace=}";
		"CGColorSpaceCopyPropertyList" = "^v^{CGColorSpace=}";
		"CGColorSpaceCreateCalibratedGray" = "^{CGColorSpace=}^d^dd";
		"CGColorSpaceCreateCalibratedRGB" = "^{CGColorSpace=}^d^d^d^d";
		// decl for CGColorSpaceCreateConversionCurve not found
		"CGColorSpaceCreateDeviceCMYK" = "^{CGColorSpace=}";
		"CGColorSpaceCreateDeviceGray" = "^{CGColorSpace=}";
		// decl for CGColorSpaceCreateDeviceN not found
		"CGColorSpaceCreateDeviceRGB" = "^{CGColorSpace=}";
		"CGColorSpaceCreateICCBased" = "^{CGColorSpace=}Q^d^{CGDataProvider=}^{CGColorSpace=}";
		"CGColorSpaceCreateIndexed" = "^{CGColorSpace=}^{CGColorSpace=}Q^C";
		"CGColorSpaceCreateLab" = "^{CGColorSpace=}^d^d^d";
		// decl for CGColorSpaceCreateLinearized not found
		"CGColorSpaceCreatePattern" = "^{CGColorSpace=}^{CGColorSpace=}";
		"CGColorSpaceCreateWithICCData" = "^{CGColorSpace=}^v";
		"CGColorSpaceCreateWithICCProfile" = "^{CGColorSpace=}^{__CFData=}";
		"CGColorSpaceCreateWithName" = "^{CGColorSpace=}^{__CFString=}";
		"CGColorSpaceCreateWithPlatformColorSpace" = "^{CGColorSpace=}^v";
		"CGColorSpaceCreateWithPropertyList" = "^{CGColorSpace=}^v";
		// decl for CGColorSpaceEqualToColorSpace not found
		// decl for CGColorSpaceEqualToColorSpaceIgnoringRange not found
		// decl for CGColorSpaceGetAlternateColorSpace not found
		"CGColorSpaceGetBaseColorSpace" = "^{CGColorSpace=}^{CGColorSpace=}";
		// decl for CGColorSpaceGetCalibratedGrayData not found
		// decl for CGColorSpaceGetCalibratedRGBData not found
		"CGColorSpaceGetColorTable" = "v^{CGColorSpace=}^C";
		"CGColorSpaceGetColorTableCount" = "Q^{CGColorSpace=}";
		// decl for CGColorSpaceGetColorants not found
		// decl for CGColorSpaceGetConversionMatrix not found
		// decl for CGColorSpaceGetDescriptor not found
		// decl for CGColorSpaceGetIdentifier not found
		// decl for CGColorSpaceGetLabData not found
		// decl for CGColorSpaceGetMD5Digest not found
		"CGColorSpaceGetModel" = "i^{CGColorSpace=}";
		"CGColorSpaceGetName" = "^{__CFString=}^{CGColorSpace=}";
		// decl for CGColorSpaceGetNames not found
		"CGColorSpaceGetNumberOfComponents" = "Q^{CGColorSpace=}";
		// decl for CGColorSpaceGetProcessColorModel not found
		// decl for CGColorSpaceGetRenderingIntent not found
		// decl for CGColorSpaceGetTintTransform not found
		// decl for CGColorSpaceGetType not found
		"CGColorSpaceGetTypeID" = "Q";
		// decl for CGColorSpaceICCGetPlatformProfile not found
		// decl for CGColorSpaceICCGetRange not found
		// decl for CGColorSpaceIgnoresIntent not found
		// decl for CGColorSpaceIsICCCompatible not found
		// decl for CGColorSpaceIsUncalibrated not found
		"CGColorSpaceIsWideGamutRGB" = "B^{CGColorSpace=}";
		"CGColorSpaceRelease" = "v^{CGColorSpace=}";
		"CGColorSpaceRetain" = "^{CGColorSpace=}^{CGColorSpace=}";
		"CGColorSpaceSupportsOutput" = "B^{CGColorSpace=}";
		// decl for CGColorSpaceUsesExtendedRange not found
		// decl for CGColorTRCGetFunction not found
		// decl for CGColorTRCGetGammaID not found
		// decl for CGColorTRCGetLuminanceScale not found
		// decl for CGColorTRCGetTypeID not found
		// decl for CGColorTransformConvertColor not found
		// decl for CGColorTransformConvertColorComponents not found
		// decl for CGColorTransformConvertColorFloatComponents not found
		// decl for CGColorTransformConvertComponentData not found
		// decl for CGColorTransformConvertData not found
		// decl for CGColorTransformConvertNeedsCMS not found
		// decl for CGColorTransformConvertRequired not found
		// decl for CGColorTransformCreate not found
		// decl for CGColorTransformCreateCodeFragment not found
		// decl for CGColorTransformCreateLookupTextureCodeFragment not found
		// decl for CGColorTransformCreateParametricCodeFragment not found
		// decl for CGColorTransformGetColorSpace not found
		// decl for CGColorTransformGetTypeID not found
		// decl for CGColorTransformRelease not found
		// decl for CGColorTransformRetain not found
		// decl for CGContainerGetRect not found
		// decl for CGContainerGetTypeID not found
		"CGContextAddArc" = "v^{CGContext=}dddddi";
		"CGContextAddArcToPoint" = "v^{CGContext=}ddddd";
		"CGContextAddCurveToPoint" = "v^{CGContext=}dddddd";
		"CGContextAddEllipseInRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextAddLineToPoint" = "v^{CGContext=}dd";
		"CGContextAddLines" = "v^{CGContext=}^{CGPoint=dd}Q";
		"CGContextAddPath" = "v^{CGContext=}^{CGPath=}";
		"CGContextAddQuadCurveToPoint" = "v^{CGContext=}dddd";
		"CGContextAddRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextAddRects" = "v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}Q";
		"CGContextBeginPage" = "v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGContextBeginPage2 not found
		"CGContextBeginPath" = "v^{CGContext=}";
		"CGContextBeginTransparencyLayer" = "v^{CGContext=}^{__CFDictionary=}";
		"CGContextBeginTransparencyLayerWithRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFDictionary=}";
		// decl for CGContextClear not found
		"CGContextClearRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextClip" = "v^{CGContext=}";
		"CGContextClipToMask" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGImage=}";
		"CGContextClipToRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextClipToRects" = "v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}Q";
		// decl for CGContextClipToTextClipping not found
		"CGContextClosePath" = "v^{CGContext=}";
		// decl for CGContextColorIsExtendedRGB not found
		"CGContextConcatCTM" = "v^{CGContext=}{CGAffineTransform=dddddd}";
		"CGContextConvertPointToDeviceSpace" = "{CGPoint=dd}^{CGContext=}{CGPoint=dd}";
		"CGContextConvertPointToUserSpace" = "{CGPoint=dd}^{CGContext=}{CGPoint=dd}";
		"CGContextConvertRectToDeviceSpace" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextConvertRectToUserSpace" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextConvertSizeToDeviceSpace" = "{CGSize=dd}^{CGContext=}{CGSize=dd}";
		"CGContextConvertSizeToUserSpace" = "{CGSize=dd}^{CGContext=}{CGSize=dd}";
		// decl for CGContextCopyDeviceColorSpace not found
		"CGContextCopyPath" = "^{CGPath=}^{CGContext=}";
		// decl for CGContextCopyTopGState not found
		// decl for CGContextCreate not found
		// decl for CGContextCreateWithDelegate not found
		// decl for CGContextCreateWithDelegateAndInfo not found
		// decl for CGContextDelegateBeginLayer not found
		// decl for CGContextDelegateBeginPage not found
		// decl for CGContextDelegateCreate not found
		// decl for CGContextDelegateCreateFilter not found
		// decl for CGContextDelegateDrawConicGradient not found
		// decl for CGContextDelegateDrawDisplayList not found
		// decl for CGContextDelegateDrawGlyphs not found
		// decl for CGContextDelegateDrawImage not found
		// decl for CGContextDelegateDrawImageFromRect not found
		// decl for CGContextDelegateDrawImages not found
		// decl for CGContextDelegateDrawLayer not found
		// decl for CGContextDelegateDrawLinearGradient not found
		// decl for CGContextDelegateDrawLines not found
		// decl for CGContextDelegateDrawPath not found
		// decl for CGContextDelegateDrawPathDirect not found
		// decl for CGContextDelegateDrawRadialGradient not found
		// decl for CGContextDelegateDrawRects not found
		// decl for CGContextDelegateDrawShading not found
		// decl for CGContextDelegateDrawWindowContents not found
		// decl for CGContextDelegateEndLayer not found
		// decl for CGContextDelegateEndPage not found
		// decl for CGContextDelegateFinalize not found
		// decl for CGContextDelegateGetBitmapContextInfo not found
		// decl for CGContextDelegateGetBounds not found
		// decl for CGContextDelegateGetCallback not found
		// decl for CGContextDelegateGetColorTransform not found
		// decl for CGContextDelegateGetDelegate not found
		// decl for CGContextDelegateGetInfo not found
		// decl for CGContextDelegateGetLayer not found
		// decl for CGContextDelegateGetNext not found
		// decl for CGContextDelegateGetTransform not found
		// decl for CGContextDelegateGetTypeID not found
		// decl for CGContextDelegateImplementsCallback not found
		// decl for CGContextDelegateOperation not found
		// decl for CGContextDelegateRelease not found
		// decl for CGContextDelegateRetain not found
		// decl for CGContextDelegateSetCallback not found
		// decl for CGContextDelegateSetCallbacks not found
		// decl for CGContextDelegateSetNext not found
		// decl for CGContextDrawConicGradient not found
		// decl for CGContextDrawDisplayList not found
		"CGContextDrawImage" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGImage=}";
		// decl for CGContextDrawImageFromRect not found
		// decl for CGContextDrawImageWithOptions not found
		// decl for CGContextDrawImages not found
		"CGContextDrawLayerAtPoint" = "v^{CGContext=}{CGPoint=dd}^{CGLayer=}";
		"CGContextDrawLayerInRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGLayer=}";
		"CGContextDrawLinearGradient" = "v^{CGContext=}^{CGGradient=}{CGPoint=dd}{CGPoint=dd}I";
		// decl for CGContextDrawPDFAnnotation not found
		"CGContextDrawPDFDocument" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i";
		"CGContextDrawPDFPage" = "v^{CGContext=}^{CGPDFPage=}";
		// decl for CGContextDrawPDFPageInRect not found
		// decl for CGContextDrawPDFPageInRect2 not found
		// decl for CGContextDrawPDFPageWithAnnotations not found
		// decl for CGContextDrawPDFPageWithDrawingCallbacks not found
		// decl for CGContextDrawPDFPageWithProgressCallback not found
		"CGContextDrawPath" = "v^{CGContext=}i";
		// decl for CGContextDrawPathDirect not found
		// decl for CGContextDrawPatternCell not found
		"CGContextDrawRadialGradient" = "v^{CGContext=}^{CGGradient=}{CGPoint=dd}d{CGPoint=dd}dI";
		"CGContextDrawShading" = "v^{CGContext=}^{CGShading=}";
		"CGContextDrawTiledImage" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGImage=}";
		// decl for CGContextDrawsWithCorrectShadowOffsets not found
		"CGContextEOClip" = "v^{CGContext=}";
		"CGContextEOFillPath" = "v^{CGContext=}";
		"CGContextEndPage" = "v^{CGContext=}";
		// decl for CGContextEndPage2 not found
		"CGContextEndTransparencyLayer" = "v^{CGContext=}";
		// decl for CGContextErase not found
		"CGContextFillEllipseInRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextFillPath" = "v^{CGContext=}";
		"CGContextFillRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextFillRects" = "v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}Q";
		"CGContextFlush" = "v^{CGContext=}";
		// decl for CGContextGetAdjustedLineWidth not found
		// decl for CGContextGetAllowedFontRenderingStyle not found
		// decl for CGContextGetAllowsAntialiasing not found
		// decl for CGContextGetAllowsDithering not found
		// decl for CGContextGetAllowsFontAntialiasing not found
		// decl for CGContextGetAllowsFontSmoothing not found
		// decl for CGContextGetAllowsFontSubpixelPositioning not found
		// decl for CGContextGetAllowsFontSubpixelQuantization not found
		// decl for CGContextGetAlpha not found
		// decl for CGContextGetAlphaIsShape not found
		// decl for CGContextGetBaseCTM not found
		// decl for CGContextGetBlackGeneration not found
		// decl for CGContextGetBlendMode not found
		"CGContextGetCTM" = "{CGAffineTransform=dddddd}^{CGContext=}";
		// decl for CGContextGetCharacterSpacing not found
		"CGContextGetClipBoundingBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}";
		// decl for CGContextGetCompositeOperation not found
		// decl for CGContextGetContentMD5 not found
		// decl for CGContextGetDefaultUserSpaceToDeviceSpaceTransform not found
		// decl for CGContextGetDelegate not found
		// decl for CGContextGetDelegateInfo not found
		// decl for CGContextGetDeviceClipBoundingBox not found
		// decl for CGContextGetFillColor not found
		// decl for CGContextGetFillColorAsColor not found
		// decl for CGContextGetFillColorSpace not found
		// decl for CGContextGetFillOverprint not found
		// decl for CGContextGetFillPattern not found
		// decl for CGContextGetFlatness not found
		// decl for CGContextGetFont not found
		// decl for CGContextGetFontAntialiasingStyle not found
		// decl for CGContextGetFontDilation not found
		// decl for CGContextGetFontRenderingStyle not found
		// decl for CGContextGetFontSize not found
		// decl for CGContextGetFontSmoothingBackgroundColor not found
		// decl for CGContextGetFontSmoothingContrast not found
		// decl for CGContextGetFontSmoothingStyle not found
		// decl for CGContextGetFontSubpixelQuantizationLevel not found
		// decl for CGContextGetGState not found
		// decl for CGContextGetGStateMark not found
		// decl for CGContextGetIdentifier not found
		// decl for CGContextGetImageRenderingIntent not found
		"CGContextGetInterpolationQuality" = "i^{CGContext=}";
		// decl for CGContextGetInterpolationQualityRange not found
		// decl for CGContextGetLineCap not found
		// decl for CGContextGetLineDashCount not found
		// decl for CGContextGetLineDashPattern not found
		// decl for CGContextGetLineJoin not found
		// decl for CGContextGetLineWidth not found
		// decl for CGContextGetLineWidthThreshold not found
		// decl for CGContextGetMiterLimit not found
		// decl for CGContextGetOverprintMode not found
		"CGContextGetPathBoundingBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}";
		"CGContextGetPathCurrentPoint" = "{CGPoint=dd}^{CGContext=}";
		// decl for CGContextGetPatternPhase not found
		// decl for CGContextGetProperty not found
		// decl for CGContextGetRenderingIntent not found
		// decl for CGContextGetRenderingResolution not found
		// decl for CGContextGetRenderingState not found
		// decl for CGContextGetShouldAntialias not found
		// decl for CGContextGetShouldAntialiasFonts not found
		// decl for CGContextGetShouldDrawBitmapRuns not found
		// decl for CGContextGetShouldSmoothFonts not found
		// decl for CGContextGetShouldSubpixelPositionFonts not found
		// decl for CGContextGetShouldSubpixelQuantizeFonts not found
		// decl for CGContextGetShouldUsePlatformNativeGlyphs not found
		// decl for CGContextGetSmoothness not found
		// decl for CGContextGetSoftMask not found
		// decl for CGContextGetStrokeAdjust not found
		// decl for CGContextGetStrokeColor not found
		// decl for CGContextGetStrokeColorAsColor not found
		// decl for CGContextGetStrokeColorSpace not found
		// decl for CGContextGetStrokeOverprint not found
		// decl for CGContextGetStrokePattern not found
		// decl for CGContextGetStyle not found
		// decl for CGContextGetTextDrawingMode not found
		// decl for CGContextGetTextGreekingThreshold not found
		"CGContextGetTextMatrix" = "{CGAffineTransform=dddddd}^{CGContext=}";
		"CGContextGetTextPosition" = "{CGPoint=dd}^{CGContext=}";
		// decl for CGContextGetTransferFunctions not found
		// decl for CGContextGetType not found
		"CGContextGetTypeID" = "Q";
		// decl for CGContextGetUndercolorRemoval not found
		"CGContextGetUserSpaceToDeviceSpaceTransform" = "{CGAffineTransform=dddddd}^{CGContext=}";
		// decl for CGContextHandleInvalid not found
		// decl for CGContextIsEmptyClipBoundingBox not found
		"CGContextIsPathEmpty" = "B^{CGContext=}";
		"CGContextMoveToPoint" = "v^{CGContext=}dd";
		"CGContextPathContainsPoint" = "B^{CGContext=}{CGPoint=dd}i";
		"CGContextRelease" = "v^{CGContext=}";
		// decl for CGContextReplacePathWithClipPath not found
		// decl for CGContextReplacePathWithShapePath not found
		"CGContextReplacePathWithStrokedPath" = "v^{CGContext=}";
		// decl for CGContextReplaceTopGState not found
		// decl for CGContextResetCTM not found
		"CGContextResetClip" = "v^{CGContext=}";
		// decl for CGContextResetState not found
		// decl for CGContextResetTopGState not found
		"CGContextRestoreGState" = "v^{CGContext=}";
		// decl for CGContextRestoreToGStateMark not found
		"CGContextRetain" = "^{CGContext=}^{CGContext=}";
		"CGContextRotateCTM" = "v^{CGContext=}d";
		"CGContextSaveGState" = "v^{CGContext=}";
		"CGContextScaleCTM" = "v^{CGContext=}dd";
		"CGContextSelectFont" = "v^{CGContext=}*di";
		"CGContextSetAllowsAntialiasing" = "v^{CGContext=}B";
		// decl for CGContextSetAllowsDithering not found
		// decl for CGContextSetAllowsFontAntialiasing not found
		"CGContextSetAllowsFontSmoothing" = "v^{CGContext=}B";
		"CGContextSetAllowsFontSubpixelPositioning" = "v^{CGContext=}B";
		"CGContextSetAllowsFontSubpixelQuantization" = "v^{CGContext=}B";
		"CGContextSetAlpha" = "v^{CGContext=}d";
		// decl for CGContextSetAlphaIsShape not found
		// decl for CGContextSetBaseCTM not found
		// decl for CGContextSetBlackGeneration not found
		"CGContextSetBlendMode" = "v^{CGContext=}i";
		"CGContextSetCMYKFillColor" = "v^{CGContext=}ddddd";
		"CGContextSetCMYKStrokeColor" = "v^{CGContext=}ddddd";
		// decl for CGContextSetCTM not found
		"CGContextSetCharacterSpacing" = "v^{CGContext=}d";
		// decl for CGContextSetCompositeOperation not found
		// decl for CGContextSetDelegate not found
		"CGContextSetFillColor" = "v^{CGContext=}^d";
		"CGContextSetFillColorSpace" = "v^{CGContext=}^{CGColorSpace=}";
		"CGContextSetFillColorWithColor" = "v^{CGContext=}^{CGColor=}";
		// decl for CGContextSetFillOverprint not found
		"CGContextSetFillPattern" = "v^{CGContext=}^{CGPattern=}^d";
		"CGContextSetFlatness" = "v^{CGContext=}d";
		// decl for CGContextSetFlush not found
		// decl for CGContextSetFocusRingWithColor not found
		"CGContextSetFont" = "v^{CGContext=}^{CGFont=}";
		// decl for CGContextSetFontAntialiasingStyle not found
		// decl for CGContextSetFontDilation not found
		// decl for CGContextSetFontRenderingStyle not found
		"CGContextSetFontSize" = "v^{CGContext=}d";
		// decl for CGContextSetFontSmoothingBackgroundColor not found
		// decl for CGContextSetFontSmoothingContrast not found
		// decl for CGContextSetFontSmoothingStyle not found
		// decl for CGContextSetFontSubpixelQuantizationLevel not found
		"CGContextSetGrayFillColor" = "v^{CGContext=}dd";
		"CGContextSetGrayStrokeColor" = "v^{CGContext=}dd";
		// decl for CGContextSetImageRenderingIntent not found
		// decl for CGContextSetImageReplacer not found
		"CGContextSetInterpolationQuality" = "v^{CGContext=}i";
		// decl for CGContextSetInterpolationQualityRange not found
		"CGContextSetLineCap" = "v^{CGContext=}i";
		"CGContextSetLineDash" = "v^{CGContext=}d^dQ";
		"CGContextSetLineJoin" = "v^{CGContext=}i";
		"CGContextSetLineWidth" = "v^{CGContext=}d";
		// decl for CGContextSetLineWidthThreshold not found
		"CGContextSetMiterLimit" = "v^{CGContext=}d";
		// decl for CGContextSetOverprintMode not found
		"CGContextSetPatternPhase" = "v^{CGContext=}{CGSize=dd}";
		// decl for CGContextSetProperty not found
		"CGContextSetRGBFillColor" = "v^{CGContext=}dddd";
		"CGContextSetRGBStrokeColor" = "v^{CGContext=}dddd";
		"CGContextSetRenderingIntent" = "v^{CGContext=}i";
		// decl for CGContextSetRenderingResolution not found
		"CGContextSetShadow" = "v^{CGContext=}{CGSize=dd}d";
		"CGContextSetShadowWithColor" = "v^{CGContext=}{CGSize=dd}d^{CGColor=}";
		"CGContextSetShouldAntialias" = "v^{CGContext=}B";
		// decl for CGContextSetShouldAntialiasFonts not found
		// decl for CGContextSetShouldDrawBitmapRuns not found
		"CGContextSetShouldSmoothFonts" = "v^{CGContext=}B";
		"CGContextSetShouldSubpixelPositionFonts" = "v^{CGContext=}B";
		"CGContextSetShouldSubpixelQuantizeFonts" = "v^{CGContext=}B";
		// decl for CGContextSetShouldUsePlatformNativeGlyphs not found
		// decl for CGContextSetSmoothness not found
		// decl for CGContextSetSoftMask not found
		// decl for CGContextSetStrokeAdjust not found
		"CGContextSetStrokeColor" = "v^{CGContext=}^d";
		"CGContextSetStrokeColorSpace" = "v^{CGContext=}^{CGColorSpace=}";
		"CGContextSetStrokeColorWithColor" = "v^{CGContext=}^{CGColor=}";
		// decl for CGContextSetStrokeOverprint not found
		"CGContextSetStrokePattern" = "v^{CGContext=}^{CGPattern=}^d";
		// decl for CGContextSetStyle not found
		"CGContextSetTextDrawingMode" = "v^{CGContext=}i";
		// decl for CGContextSetTextGreekingThreshold not found
		"CGContextSetTextMatrix" = "v^{CGContext=}{CGAffineTransform=dddddd}";
		"CGContextSetTextPosition" = "v^{CGContext=}dd";
		// decl for CGContextSetTransferFunctions not found
		// decl for CGContextSetUndercolorRemoval not found
		"CGContextShowGlyphs" = "v^{CGContext=}^SQ";
		"CGContextShowGlyphsAtPoint" = "v^{CGContext=}dd^SQ";
		"CGContextShowGlyphsAtPositions" = "v^{CGContext=}^S^{CGPoint=dd}Q";
		// decl for CGContextShowGlyphsAtPositionsWithString not found
		"CGContextShowGlyphsWithAdvances" = "v^{CGContext=}^S^{CGSize=dd}Q";
		"CGContextShowText" = "v^{CGContext=}*Q";
		"CGContextShowTextAtPoint" = "v^{CGContext=}dd*Q";
		"CGContextStrokeEllipseInRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextStrokeLineSegments" = "v^{CGContext=}^{CGPoint=dd}Q";
		"CGContextStrokePath" = "v^{CGContext=}";
		"CGContextStrokeRect" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGContextStrokeRectWithWidth" = "v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}d";
		"CGContextSynchronize" = "v^{CGContext=}";
		"CGContextTranslateCTM" = "v^{CGContext=}dd";
		// decl for CGContextValidate not found
		// decl for CGContextWait not found
		// decl for CGCryptorCreateAES not found
		// decl for CGCryptorCreateRC4 not found
		// decl for CGCryptorDrain not found
		// decl for CGCryptorGetCipher not found
		// decl for CGCryptorGetInitializationVector not found
		// decl for CGCryptorProcessBytes not found
		// decl for CGCryptorRelease not found
		// decl for CGCryptorReset not found
		// decl for CGDashCreate not found
		// decl for CGDashEqualToDash not found
		// decl for CGDashGetPattern not found
		// decl for CGDashRelease not found
		// decl for CGDashRetain not found
		// decl for CGDataConsumerClose not found
		"CGDataConsumerCreate" = "^{CGDataConsumer=}^v^{CGDataConsumerCallbacks=^?^?}";
		// decl for CGDataConsumerCreateFlateEncoder not found
		"CGDataConsumerCreateWithCFData" = "^{CGDataConsumer=}^{__CFData=}";
		// decl for CGDataConsumerCreateWithFilename not found
		"CGDataConsumerCreateWithURQ" = "^{CGDataConsumer=}^{__CFURL=}";
		// decl for CGDataConsumerFlush not found
		// decl for CGDataConsumerGetByteCount not found
		"CGDataConsumerGetTypeID" = "Q";
		// decl for CGDataConsumerGetURL not found
		// decl for CGDataConsumerPrintf not found
		// decl for CGDataConsumerPutBytes not found
		"CGDataConsumerRelease" = "v^{CGDataConsumer=}";
		"CGDataConsumerRetain" = "^{CGDataConsumer=}^{CGDataConsumer=}";
		// decl for CGDataConsumerVPrintf not found
		"CGDataProviderCopyData" = "^{__CFData=}^{CGDataProvider=}";
		"CGDataProviderCreateDirect" = "^{CGDataProvider=}^vq^{CGDataProviderDirectCallbacks=I^?^?^?^?}";
		"CGDataProviderCreateSequential" = "^{CGDataProvider=}^v^{CGDataProviderSequentialCallbacks=I^?^?^?^?}";
		"CGDataProviderCreateWithCFData" = "^{CGDataProvider=}^{__CFData=}";
		// decl for CGDataProviderCreateWithCopyOfData not found
		"CGDataProviderCreateWithData" = "^{CGDataProvider=}^v^vQ^?";
		"CGDataProviderCreateWithFilename" = "^{CGDataProvider=}*";
		// decl for CGDataProviderCreateWithSwappedProvider not found
		"CGDataProviderCreateWithURQ" = "^{CGDataProvider=}^{__CFURL=}";
		// decl for CGDataProviderGetBytePtr not found
		// decl for CGDataProviderGetBytes not found
		// decl for CGDataProviderGetBytesAtPosition not found
		"CGDataProviderGetInfo" = "^v^{CGDataProvider=}";
		// decl for CGDataProviderGetSize not found
		// decl for CGDataProviderGetSize2 not found
		// decl for CGDataProviderGetSizeOfData not found
		"CGDataProviderGetTypeID" = "Q";
		// decl for CGDataProviderHasDataPtr not found
		// decl for CGDataProviderLock not found
		"CGDataProviderRelease" = "v^{CGDataProvider=}";
		// decl for CGDataProviderReleaseBytePtr not found
		"CGDataProviderRetain" = "^{CGDataProvider=}^{CGDataProvider=}";
		// decl for CGDataProviderRetainBytePtr not found
		// decl for CGDataProviderRewind not found
		// decl for CGDataProviderSkipForward not found
		// decl for CGDataProviderUngetBytePtr not found
		// decl for CGDataProviderUnlock not found
		// decl for CGDefaultsCopyString not found
		// decl for CGDefaultsGetBoolean not found
		// decl for CGDefaultsGetInteger not found
		// decl for CGDigesterAddBytes not found
		// decl for CGDigesterCreateMD5 not found
		// decl for CGDigesterGetDigest not found
		// decl for CGDigesterRelease not found
		// decl for CGDisplayList2Create not found
		// decl for CGDisplayList2CreateWithRect not found
		// decl for CGDisplayList2GetTypeID not found
		// decl for CGDisplayListContainsTransparentContent not found
		// decl for CGDisplayListContextCreate not found
		// decl for CGDisplayListCreate not found
		// decl for CGDisplayListCreateWithRect not found
		// decl for CGDisplayListCreateWithURL not found
		// decl for CGDisplayListDrawInContext not found
		// decl for CGDisplayListDrawInContextDelegate not found
		// decl for CGDisplayListDumpToFile not found
		// decl for CGDisplayListExecute not found
		// decl for CGDisplayListGetBoundingBox not found
		// decl for CGDisplayListGetTypeID not found
		// decl for CGDisplayListRelease not found
		// decl for CGDisplayListReset not found
		// decl for CGDisplayListSerializeToURL not found
		// decl for CGDisplayListSetBoundingBox not found
		// decl for CGFloatIsValid not found
		// decl for CGFontApplyFunction not found
		// decl for CGFontCacheCreate not found
		// decl for CGFontCacheGetLocalCache not found
		// decl for CGFontCacheGetMaxSize not found
		// decl for CGFontCachePrint not found
		// decl for CGFontCacheRelease not found
		// decl for CGFontCacheRemoveFont not found
		// decl for CGFontCacheReset not found
		// decl for CGFontCacheRetain not found
		// decl for CGFontCacheSetMaxSize not found
		// decl for CGFontCacheSetShouldAutoExpire not found
		"CGFontCanCreatePostScriptSubset" = "B^{CGFont=}i";
		// decl for CGFontCopyCharacterSet not found
		// decl for CGFontCopyFamilyName not found
		"CGFontCopyFullName" = "^{__CFString=}^{CGFont=}";
		"CGFontCopyGlyphNameForGlyph" = "^{__CFString=}^{CGFont=}S";
		// decl for CGFontCopyLocalizedName not found
		// decl for CGFontCopyName not found
		// decl for CGFontCopyPath not found
		"CGFontCopyPostScriptName" = "^{__CFString=}^{CGFont=}";
		"CGFontCopyTableForTag" = "^{__CFData=}^{CGFont=}I";
		"CGFontCopyTableTags" = "^{__CFArray=}^{CGFont=}";
		// decl for CGFontCopyURL not found
		"CGFontCopyVariationAxes" = "^{__CFArray=}^{CGFont=}";
		"CGFontCopyVariations" = "^{__CFDictionary=}^{CGFont=}";
		// decl for CGFontCreate not found
		// decl for CGFontCreateCopy not found
		"CGFontCreateCopyWithVariations" = "^{CGFont=}^{CGFont=}^{__CFDictionary=}";
		// decl for CGFontCreateFontSubset not found
		// decl for CGFontCreateFontsFromData not found
		// decl for CGFontCreateFontsWithPath not found
		// decl for CGFontCreateFontsWithURL not found
		// decl for CGFontCreateGlyphPath not found
		// decl for CGFontCreateMatchingFont not found
		"CGFontCreatePostScriptEncoding" = "^{__CFData=}^{CGFont=}^S";
		"CGFontCreatePostScriptSubset" = "^{__CFData=}^{CGFont=}^{__CFString=}i^SQ^S";
		"CGFontCreateWithDataProvider" = "^{CGFont=}^{CGDataProvider=}";
		"CGFontCreateWithFontName" = "^{CGFont=}^{__CFString=}";
		// decl for CGFontCreateWithName not found
		"CGFontCreateWithPlatformFont" = "^{CGFont=}^v";
		// decl for CGFontCreateWithPlatformFontAndVariation not found
		// decl for CGFontCreateWithVariations not found
		// decl for CGFontDBAddFont not found
		// decl for CGFontDBAddFontReferencesAtPath not found
		// decl for CGFontDBAddFontsAtPath not found
		// decl for CGFontDBAddFontsFromPlist not found
		// decl for CGFontDBAddFontsInDirectory not found
		// decl for CGFontDBApplyFunction not found
		// decl for CGFontDBCreate not found
		// decl for CGFontDBCreatePlist not found
		// decl for CGFontDBGetFontWithName not found
		// decl for CGFontDBGetLocal not found
		// decl for CGFontDBPurgeFont not found
		// decl for CGFontDBRelease not found
		// decl for CGFontDBRemoveFont not found
		// decl for CGFontDBSetInitializer not found
		// decl for CGFontDefaultAllowsFontSmoothing not found
		// decl for CGFontDefaultGetAntialiasingStyle not found
		// decl for CGFontDefaultGetSmoothingContrast not found
		// decl for CGFontDefaultGetSmoothingStyle not found
		// decl for CGFontFinderApplyFunction not found
		// decl for CGFontFinderCopyAllURLs not found
		// decl for CGFontFinderCopyURLForName not found
		// decl for CGFontFinderCopyURLForPlatformFont not found
		// decl for CGFontFinderCreate not found
		// decl for CGFontFinderCreateFontWithName not found
		// decl for CGFontFinderCreateFontWithPlatformFont not found
		// decl for CGFontFinderGetDefault not found
		// decl for CGFontFinderRelease not found
		// decl for CGFontFinderRetain not found
		// decl for CGFontFinderSetDefault not found
		"CGFontGetAscent" = "i^{CGFont=}";
		// decl for CGFontGetCIDsForGlyphs not found
		"CGFontGetCapHeight" = "i^{CGFont=}";
		// decl for CGFontGetContainingBoundingBoxForGlyphs not found
		"CGFontGetDescent" = "i^{CGFont=}";
		// decl for CGFontGetDescriptor not found
		"CGFontGetFontBBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGFont=}";
		// decl for CGFontGetFontSubsetFormat not found
		"CGFontGetGlyphAdvances" = "B^{CGFont=}^SQ^i";
		// decl for CGFontGetGlyphAdvancesForStyle not found
		"CGFontGetGlyphBBoxes" = "B^{CGFont=}^SQ^{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGFontGetGlyphBBoxesForStyle not found
		// decl for CGFontGetGlyphForGlyphName not found
		// decl for CGFontGetGlyphIdentifiers not found
		// decl for CGFontGetGlyphNameForGlyph not found
		// decl for CGFontGetGlyphNameMaxLength not found
		// decl for CGFontGetGlyphVerticalAdvances not found
		// decl for CGFontGetGlyphVerticalOffsets not found
		"CGFontGetGlyphWithGlyphName" = "S^{CGFont=}^{__CFString=}";
		// decl for CGFontGetGlyphsForCIDs not found
		// decl for CGFontGetGlyphsForGlyphNames not found
		// decl for CGFontGetGlyphsForUnichars not found
		// decl for CGFontGetHMetrics not found
		// decl for CGFontGetIdentifier not found
		// decl for CGFontGetIntProperty not found
		"CGFontGetItalicAngle" = "d^{CGFont=}";
		"CGFontGetLeading" = "i^{CGFont=}";
		// decl for CGFontGetMaxUnichars not found
		"CGFontGetNumberOfGlyphs" = "Q^{CGFont=}";
		// decl for CGFontGetParserFont not found
		// decl for CGFontGetPostScriptName not found
		// decl for CGFontGetProperty not found
		// decl for CGFontGetQuantizationLevelWithStyle not found
		// decl for CGFontGetRegistryOrderingSupplement not found
		"CGFontGetStemV" = "d^{CGFont=}";
		"CGFontGetTypeID" = "Q";
		// decl for CGFontGetUnderlinePosition not found
		// decl for CGFontGetUnderlineThickness not found
		// decl for CGFontGetUnicharsForGlyph not found
		"CGFontGetUnitsPerEm" = "i^{CGFont=}";
		// decl for CGFontGetVMetrics not found
		// decl for CGFontGetVariationAxes not found
		// decl for CGFontGetVariations not found
		"CGFontGetXHeight" = "i^{CGFont=}";
		// decl for CGFontIndexMapAddIndex not found
		// decl for CGFontIndexMapAddIndexes not found
		// decl for CGFontIndexMapAddRange not found
		// decl for CGFontIndexMapCreate not found
		// decl for CGFontIndexMapCreateIdentity not found
		// decl for CGFontIndexMapGetValue not found
		// decl for CGFontIndexMapGetValues not found
		// decl for CGFontIndexMapPrint not found
		// decl for CGFontIndexMapRelease not found
		// decl for CGFontIndexMapRetain not found
		// decl for CGFontIndexSetAddIndex not found
		// decl for CGFontIndexSetAddIndexRange not found
		// decl for CGFontIndexSetAddIndexes not found
		// decl for CGFontIndexSetContainsIndex not found
		// decl for CGFontIndexSetCreate not found
		// decl for CGFontIndexSetCreateCopy not found
		// decl for CGFontIndexSetGetCount not found
		// decl for CGFontIndexSetGetIndexRange not found
		// decl for CGFontIndexSetGetIndexVector not found
		// decl for CGFontIndexSetGetIndexVectorSize not found
		// decl for CGFontIndexSetGetIndexes not found
		// decl for CGFontIndexSetGetName not found
		// decl for CGFontIndexSetRelease not found
		// decl for CGFontIndexSetRetain not found
		// decl for CGFontIsBitmapOnly not found
		// decl for CGFontIsFixedPitch not found
		// decl for CGFontIsItalic not found
		// decl for CGFontNameTableCopyLocales not found
		// decl for CGFontNameTableCopyNameForLocale not found
		// decl for CGFontNameTableCopyRootName not found
		// decl for CGFontNameTableCreate not found
		// decl for CGFontNameTableGetPostScriptName not found
		// decl for CGFontNameTablePrint not found
		// decl for CGFontNameTableRelease not found
		// decl for CGFontQuantumEqualToQuantum not found
		// decl for CGFontQuantumZero not found
		"CGFontRelease" = "v^{CGFont=}";
		// decl for CGFontRenderingGetFontSmoothingDisabled not found
		"CGFontRetain" = "^{CGFont=}^{CGFont=}";
		// decl for CGFontURLCreate not found
		// decl for CGFunctionCopyPDFDescription not found
		"CGFunctionCreate" = "^{CGFunction=}^vQ^dQ^d^{CGFunctionCallbacks=I^?^?}";
		// decl for CGFunctionEvaluate not found
		// decl for CGFunctionEvaluateFloat not found
		// decl for CGFunctionGetAssociate not found
		// decl for CGFunctionGetDomain not found
		// decl for CGFunctionGetDomainDimension not found
		// decl for CGFunctionGetIdentifier not found
		// decl for CGFunctionGetRange not found
		// decl for CGFunctionGetRangeDimension not found
		"CGFunctionGetTypeID" = "Q";
		// decl for CGFunctionIsIdentity not found
		"CGFunctionRelease" = "v^{CGFunction=}";
		"CGFunctionRetain" = "^{CGFunction=}^{CGFunction=}";
		// decl for CGFunctionSetAssociate not found
		// decl for CGFunctionSetProperty not found
		// decl for CGGStateClipToRect not found
		// decl for CGGStateCreate not found
		// decl for CGGStateCreateCopy not found
		// decl for CGGStateGetAdjustedLineWidth not found
		// decl for CGGStateGetAlpha not found
		// decl for CGGStateGetAlphaIsShape not found
		// decl for CGGStateGetBlackGeneration not found
		// decl for CGGStateGetCTM not found
		// decl for CGGStateGetCharacterSpacing not found
		// decl for CGGStateGetClipBoundingBox not found
		// decl for CGGStateGetClipRect not found
		// decl for CGGStateGetClipStack not found
		// decl for CGGStateGetCompositeOperation not found
		// decl for CGGStateGetFillColor not found
		// decl for CGGStateGetFillOverprint not found
		// decl for CGGStateGetFlatness not found
		// decl for CGGStateGetFont not found
		// decl for CGGStateGetFontAntialiasingStyle not found
		// decl for CGGStateGetFontDilation not found
		// decl for CGGStateGetFontRenderingStyle not found
		// decl for CGGStateGetFontSize not found
		// decl for CGGStateGetFontSmoothingBackgroundColor not found
		// decl for CGGStateGetFontSmoothingContrast not found
		// decl for CGGStateGetFontSmoothingStyle not found
		// decl for CGGStateGetFontSubpixelQuantizationLevel not found
		// decl for CGGStateGetFontSubpixelQuantizationStyle not found
		// decl for CGGStateGetImageRenderingIntent not found
		// decl for CGGStateGetInterpolationQuality not found
		// decl for CGGStateGetLineCap not found
		// decl for CGGStateGetLineDash not found
		// decl for CGGStateGetLineJoin not found
		// decl for CGGStateGetLineWidth not found
		// decl for CGGStateGetLineWidthThreshold not found
		// decl for CGGStateGetMiterLimit not found
		// decl for CGGStateGetOverprintMode not found
		// decl for CGGStateGetPatternPhase not found
		// decl for CGGStateGetRenderingIntent not found
		// decl for CGGStateGetShouldAntialias not found
		// decl for CGGStateGetShouldAntialiasFonts not found
		// decl for CGGStateGetShouldDrawBitmapRuns not found
		// decl for CGGStateGetShouldSmoothFonts not found
		// decl for CGGStateGetShouldSubpixelPositionFonts not found
		// decl for CGGStateGetShouldSubpixelQuantizeFonts not found
		// decl for CGGStateGetSmoothness not found
		// decl for CGGStateGetSoftMask not found
		// decl for CGGStateGetStrokeAdjust not found
		// decl for CGGStateGetStrokeColor not found
		// decl for CGGStateGetStrokeOverprint not found
		// decl for CGGStateGetStyle not found
		// decl for CGGStateGetTextDrawingMode not found
		// decl for CGGStateGetTextGreekingThreshold not found
		// decl for CGGStateGetTextKnockout not found
		// decl for CGGStateGetTransferFunctions not found
		// decl for CGGStateGetUndercolorRemoval not found
		// decl for CGGStateRelease not found
		// decl for CGGStateResetClip not found
		// decl for CGGStateRetain not found
		// decl for CGGStateSetAlpha not found
		// decl for CGGStateSetCTM not found
		// decl for CGGStateSetCompositeOperation not found
		// decl for CGGStateSetFillColor not found
		// decl for CGGStateSetPatternPhase not found
		// decl for CGGStateSetRenderingIntent not found
		// decl for CGGStateSetSoftMask not found
		// decl for CGGStateSetStrokeColor not found
		// decl for CGGStateSetStyle not found
		// decl for CGGetMD5DigestOfBytes not found
		// decl for CGGlyphBitmapCreate not found
		// decl for CGGlyphBitmapCreateWithPath not found
		// decl for CGGlyphBitmapCreateWithPathAndDilation not found
		// decl for CGGlyphBitmapRelease not found
		// decl for CGGlyphBitmapRetain not found
		// decl for CGGlyphBuilderCreate not found
		// decl for CGGlyphBuilderGetQuantizationLevel not found
		// decl for CGGlyphBuilderLockBitmaps not found
		// decl for CGGlyphBuilderRelease not found
		// decl for CGGlyphBuilderUnlockBitmaps not found
		// decl for CGGlyphLockAccess not found
		// decl for CGGlyphLockAccessCustomized not found
		// decl for CGGlyphLockCreate not found
		// decl for CGGlyphLockGetQuantizationLevel not found
		// decl for CGGlyphLockLockGlyphBitmaps not found
		// decl for CGGlyphLockRelease not found
		// decl for CGGlyphLockUnlock not found
		// decl for CGGradientApply not found
		// decl for CGGradientApplyWithBlock not found
		"CGGradientCreateWithColorComponents" = "^{CGGradient=}^{CGColorSpace=}^d^dQ";
		"CGGradientCreateWithColors" = "^{CGGradient=}^{CGColorSpace=}^{__CFArray=}^d";
		// decl for CGGradientGetColorSpace not found
		// decl for CGGradientGetFunction not found
		// decl for CGGradientGetIdentifier not found
		// decl for CGGradientGetLocationCount not found
		"CGGradientGetTypeID" = "Q";
		// decl for CGGradientPrint not found
		"CGGradientRelease" = "v^{CGGradient=}";
		"CGGradientRetain" = "^{CGGradient=}^{CGGradient=}";
		// decl for CGIOSurfaceContextCreate not found
		// decl for CGIOSurfaceContextCreateImage not found
		// decl for CGIOSurfaceContextCreateImageReference not found
		// decl for CGIOSurfaceContextGetBitmapInfo not found
		// decl for CGIOSurfaceContextGetBitsPerComponent not found
		// decl for CGIOSurfaceContextGetBitsPerPixel not found
		// decl for CGIOSurfaceContextGetColorSpace not found
		// decl for CGIOSurfaceContextGetDisplayMask not found
		// decl for CGIOSurfaceContextGetHeight not found
		// decl for CGIOSurfaceContextGetSizeLimits not found
		// decl for CGIOSurfaceContextGetSurface not found
		// decl for CGIOSurfaceContextGetWidth not found
		// decl for CGIOSurfaceContextSetDisplayMask not found
		// decl for CGImageBlockCreate not found
		// decl for CGImageBlockGetBytesPerRow not found
		// decl for CGImageBlockGetData not found
		// decl for CGImageBlockGetRect not found
		// decl for CGImageBlockRelease not found
		// decl for CGImageBlockSetCreate not found
		// decl for CGImageBlockSetCreateWithType not found
		// decl for CGImageBlockSetGetColorSpace not found
		// decl for CGImageBlockSetGetComponentType not found
		// decl for CGImageBlockSetGetCount not found
		// decl for CGImageBlockSetGetImageBlock not found
		// decl for CGImageBlockSetGetPixelSize not found
		// decl for CGImageBlockSetGetProperty not found
		// decl for CGImageBlockSetGetRect not found
		// decl for CGImageBlockSetGetSize not found
		// decl for CGImageBlockSetRelease not found
		// decl for CGImageBlockSetRetain not found
		// decl for CGImageBlockSetSetProperty not found
		// decl for CGImageCopyProperty not found
		"CGImageCreate" = "^{CGImage=}QQQQQ^{CGColorSpace=}I^{CGDataProvider=}^dBi";
		"CGImageCreateCopy" = "^{CGImage=}^{CGImage=}";
		// decl for CGImageCreateCopyWithClipPath not found
		"CGImageCreateCopyWithColorSpace" = "^{CGImage=}^{CGImage=}^{CGColorSpace=}";
		// decl for CGImageCreateCopyWithOptions not found
		// decl for CGImageCreateCopyWithRenderingIntent not found
		// decl for CGImageCreateWithCGPDFStream not found
		// decl for CGImageCreateWithEPSDataProvider not found
		"CGImageCreateWithImageInRect" = "^{CGImage=}^{CGImage=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGImageCreateWithImageProvider not found
		"CGImageCreateWithJPEGDataProvider" = "^{CGImage=}^{CGDataProvider=}^dBi";
		// decl for CGImageCreateWithJPEGDataProvider2 not found
		"CGImageCreateWithMask" = "^{CGImage=}^{CGImage=}^{CGImage=}";
		// decl for CGImageCreateWithMaskAndMatte not found
		// decl for CGImageCreateWithMaskingColor not found
		"CGImageCreateWithMaskingColors" = "^{CGImage=}^{CGImage=}^d";
		"CGImageCreateWithPNGDataProvider" = "^{CGImage=}^{CGDataProvider=}^dBi";
		// decl for CGImageDumpToFile not found
		// decl for CGImageEPSRepCreate not found
		// decl for CGImageEPSRepGetAlternateImage not found
		// decl for CGImageEPSRepGetBBox not found
		// decl for CGImageEPSRepGetSource not found
		// decl for CGImageEPSRepRelease not found
		// decl for CGImageEPSRepRetain not found
		"CGImageGetAlphaInfo" = "I^{CGImage=}";
		"CGImageGetBitmapInfo" = "I^{CGImage=}";
		"CGImageGetBitsPerComponent" = "Q^{CGImage=}";
		"CGImageGetBitsPerPixel" = "Q^{CGImage=}";
		"CGImageGetByteOrderInfo" = "I^{CGImage=}";
		"CGImageGetBytesPerRow" = "Q^{CGImage=}";
		// decl for CGImageGetCachingFlags not found
		// decl for CGImageGetClipPath not found
		"CGImageGetColorSpace" = "^{CGColorSpace=}^{CGImage=}";
		// decl for CGImageGetData not found
		"CGImageGetDataProvider" = "^{CGDataProvider=}^{CGImage=}";
		"CGImageGetDecode" = "^d^{CGImage=}";
		// decl for CGImageGetEPSRep not found
		"CGImageGetHeight" = "Q^{CGImage=}";
		// decl for CGImageGetIdentifier not found
		// decl for CGImageGetImageProvider not found
		// decl for CGImageGetMask not found
		// decl for CGImageGetMaskingColors not found
		// decl for CGImageGetMatte not found
		"CGImageGetPixelFormatInfo" = "I^{CGImage=}";
		// decl for CGImageGetProperty not found
		"CGImageGetRenderingIntent" = "i^{CGImage=}";
		"CGImageGetShouldInterpolate" = "B^{CGImage=}";
		"CGImageGetTypeID" = "Q";
		"CGImageGetUTType" = "^{__CFString=}^{CGImage=}";
		"CGImageGetWidth" = "Q^{CGImage=}";
		// decl for CGImageHasAlpha not found
		// decl for CGImageIOSurfaceSetCreate not found
		// decl for CGImageIOSurfaceSetGetColorSpace not found
		// decl for CGImageIOSurfaceSetGetComponentType not found
		// decl for CGImageIOSurfaceSetGetCount not found
		// decl for CGImageIOSurfaceSetGetPixelSize not found
		// decl for CGImageIOSurfaceSetGetProperty not found
		// decl for CGImageIOSurfaceSetGetRect not found
		// decl for CGImageIOSurfaceSetGetSize not found
		// decl for CGImageIOSurfaceSetGetTypeID not found
		// decl for CGImageIOSurfaceSetRelease not found
		// decl for CGImageIOSurfaceSetRetain not found
		// decl for CGImageIOSurfaceSetSetProperty not found
		"CGImageIsMask" = "B^{CGImage=}";
		// decl for CGImageIsOptimizedForSharing not found
		// decl for CGImageIsSubimage not found
		"CGImageMaskCreate" = "^{CGImage=}QQQQQ^{CGDataProvider=}^dB";
		// decl for CGImageNotificationCenter not found
		// decl for CGImageProviderCopyIOSurface not found
		// decl for CGImageProviderCopyIOSurfaceSet not found
		// decl for CGImageProviderCopyImageBlockSet not found
		// decl for CGImageProviderCopyImageBlockSetWithOptions not found
		// decl for CGImageProviderCopyImageTextureData not found
		// decl for CGImageProviderCreate not found
		// decl for CGImageProviderGetAlphaInfo not found
		// decl for CGImageProviderGetCallbackVersion not found
		// decl for CGImageProviderGetColorSpace not found
		// decl for CGImageProviderGetComponentType not found
		// decl for CGImageProviderGetInfo not found
		// decl for CGImageProviderGetPixelSize not found
		// decl for CGImageProviderGetProperty not found
		// decl for CGImageProviderGetSize not found
		// decl for CGImageProviderGetTypeID not found
		// decl for CGImageProviderRelease not found
		// decl for CGImageProviderRetain not found
		// decl for CGImageProviderSetProperty not found
		"CGImageRelease" = "v^{CGImage=}";
		"CGImageRetain" = "^{CGImage=}^{CGImage=}";
		// decl for CGImageSetCachingFlags not found
		// decl for CGImageSetProperty not found
		// decl for CGImageSurfaceSetGetIOSurface not found
		// decl for CGImageTextureDataCopyProperties not found
		// decl for CGImageTextureDataCreate not found
		// decl for CGImageTextureDataGetColorSpace not found
		// decl for CGImageTextureDataGetDataWithBlock not found
		// decl for CGImageTextureDataGetNumberOfFaces not found
		// decl for CGImageTextureDataGetNumberOfMipmaps not found
		// decl for CGImageTextureDataGetOffsetWithBlock not found
		// decl for CGImageTextureDataGetPixelFormat not found
		// decl for CGImageTextureDataGetProperty not found
		// decl for CGImageTextureDataGetSize not found
		// decl for CGImageTextureDataGetTypeID not found
		// decl for CGImageTextureDataIsCompressed not found
		// decl for CGImageTextureDataRelease not found
		// decl for CGImageTextureDataRetain not found
		// decl for CGImageTextureDataSetProperty not found
		// decl for CGImageTextureDataSupportsTiledLayout not found
		// decl for CGImageWriteToFile not found
		"CGLayerCreateWithContext" = "^{CGLayer=}^{CGContext=}{CGSize=dd}^{__CFDictionary=}";
		"CGLayerGetContext" = "^{CGContext=}^{CGLayer=}";
		"CGLayerGetSize" = "{CGSize=dd}^{CGLayer=}";
		"CGLayerGetTypeID" = "Q";
		"CGLayerRelease" = "v^{CGLayer=}";
		"CGLayerRetain" = "^{CGLayer=}^{CGLayer=}";
		// decl for CGNotificationCenterAddCallback not found
		// decl for CGNotificationCenterRemoveCallback not found
		// decl for CGPDFAdvancesCreate not found
		// decl for CGPDFAdvancesGetHorizontalAdvance not found
		// decl for CGPDFAdvancesGetVerticalAdvance not found
		// decl for CGPDFAdvancesPrint not found
		// decl for CGPDFAdvancesRelease not found
		// decl for CGPDFAdvancesValidate not found
		// decl for CGPDFAnnotationCreate not found
		// decl for CGPDFAnnotationCreateWithCGPDFDictionary not found
		// decl for CGPDFAnnotationGetBurnIn not found
		// decl for CGPDFAnnotationGetCGPDFDictionary not found
		// decl for CGPDFAnnotationGetDictionary not found
		// decl for CGPDFAnnotationGetHash not found
		// decl for CGPDFAnnotationGetRect not found
		// decl for CGPDFAnnotationGetTag not found
		// decl for CGPDFAnnotationGetType not found
		// decl for CGPDFAnnotationGetTypeID not found
		// decl for CGPDFAnnotationIsGhost not found
		// decl for CGPDFAnnotationIsPristine not found
		// decl for CGPDFAnnotationIsSupportedType not found
		// decl for CGPDFAnnotationIsVersioned not found
		// decl for CGPDFAnnotationSetAnnotationForKey not found
		// decl for CGPDFAnnotationSetBurnIn not found
		// decl for CGPDFAnnotationSetIsGhost not found
		// decl for CGPDFAnnotationSetTag not found
		"CGPDFArrayApplyBlock" = "v^{CGPDFArray=}^?^v";
		"CGPDFArrayGetArray" = "B^{CGPDFArray=}Q^^{CGPDFArray=}";
		"CGPDFArrayGetBoolean" = "B^{CGPDFArray=}Q^C";
		"CGPDFArrayGetCount" = "Q^{CGPDFArray=}";
		"CGPDFArrayGetDictionary" = "B^{CGPDFArray=}Q^^{CGPDFDictionary=}";
		"CGPDFArrayGetInteger" = "B^{CGPDFArray=}Q^q";
		// decl for CGPDFArrayGetIntegers not found
		"CGPDFArrayGetName" = "B^{CGPDFArray=}Q^?";
		"CGPDFArrayGetNull" = "B^{CGPDFArray=}Q";
		"CGPDFArrayGetNumber" = "B^{CGPDFArray=}Q^d";
		// decl for CGPDFArrayGetNumbers not found
		"CGPDFArrayGetObject" = "B^{CGPDFArray=}Q^^{CGPDFObject=}";
		// decl for CGPDFArrayGetOffset not found
		"CGPDFArrayGetStream" = "B^{CGPDFArray=}Q^^{CGPDFStream=}";
		"CGPDFArrayGetString" = "B^{CGPDFArray=}Q^^{CGPDFString=}";
		// decl for CGPDFArrayGetUnresolvedObject not found
		// decl for CGPDFArrayPrint not found
		// decl for CGPDFArrayPrintWithIndent not found
		// decl for CGPDFArrayRelease not found
		// decl for CGPDFArrayRetain not found
		// decl for CGPDFBase14GetBase14Name not found
		// decl for CGPDFBase14GetInfo not found
		// decl for CGPDFCMapCreate not found
		// decl for CGPDFCMapCreateWithName not found
		// decl for CGPDFCMapGetCIDsForText not found
		// decl for CGPDFCMapGetMaxUnicodes not found
		// decl for CGPDFCMapGetName not found
		// decl for CGPDFCMapGetROS not found
		// decl for CGPDFCMapGetUnicodeCMap not found
		// decl for CGPDFCMapGetUnicodesForIndex not found
		// decl for CGPDFCMapGetZapfTable not found
		// decl for CGPDFCMapIsHorizontal not found
		// decl for CGPDFCMapRelease not found
		"CGPDFContentStreamCreateWithPage" = "^{CGPDFContentStream=}^{CGPDFPage=}";
		"CGPDFContentStreamCreateWithStream" = "^{CGPDFContentStream=}^{CGPDFStream=}^{CGPDFDictionary=}^{CGPDFContentStream=}";
		"CGPDFContentStreamGetResource" = "^{CGPDFObject=}^{CGPDFContentStream=}**";
		"CGPDFContentStreamGetStreams" = "^{__CFArray=}^{CGPDFContentStream=}";
		"CGPDFContentStreamRelease" = "v^{CGPDFContentStream=}";
		"CGPDFContentStreamRetain" = "^{CGPDFContentStream=}^{CGPDFContentStream=}";
		// decl for CGPDFContextAddAnnotation not found
		// decl for CGPDFContextAddCatalogEntry not found
		"CGPDFContextAddDestinationAtPoint" = "v^{CGContext=}^{__CFString=}{CGPoint=dd}";
		"CGPDFContextAddDocumentMetadata" = "v^{CGContext=}^{__CFData=}";
		// decl for CGPDFContextAddPDFXInfo not found
		"CGPDFContextBeginPage" = "v^{CGContext=}^{__CFDictionary=}";
		// decl for CGPDFContextBeginTag not found
		"CGPDFContextClose" = "v^{CGContext=}";
		"CGPDFContextCreate" = "^{CGContext=}^{CGDataConsumer=}^{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFDictionary=}";
		// decl for CGPDFContextCreateWithFilename not found
		"CGPDFContextCreateWithURQ" = "^{CGContext=}^{__CFURL=}^{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFDictionary=}";
		"CGPDFContextEndPage" = "v^{CGContext=}";
		// decl for CGPDFContextEndTag not found
		"CGPDFContextSetDestinationForRect" = "v^{CGContext=}^{__CFString=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGPDFContextSetImageTag not found
		"CGPDFContextSetOutline" = "v^{CGContext=}^{__CFDictionary=}";
		// decl for CGPDFContextSetOutputIntent not found
		"CGPDFContextSetURLForRect" = "v^{CGContext=}^{__CFURL=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGPDFDictionaryApplyBlock" = "v^{CGPDFDictionary=}^?^v";
		"CGPDFDictionaryApplyFunction" = "v^{CGPDFDictionary=}^?^v";
		// decl for CGPDFDictionaryApplyFunctionRaw not found
		"CGPDFDictionaryGetArray" = "B^{CGPDFDictionary=}*^^{CGPDFArray=}";
		"CGPDFDictionaryGetBoolean" = "B^{CGPDFDictionary=}*^C";
		// decl for CGPDFDictionaryGetBooleans not found
		"CGPDFDictionaryGetCount" = "Q^{CGPDFDictionary=}";
		"CGPDFDictionaryGetDictionary" = "B^{CGPDFDictionary=}*^^{CGPDFDictionary=}";
		"CGPDFDictionaryGetInteger" = "B^{CGPDFDictionary=}*^q";
		// decl for CGPDFDictionaryGetIntegers not found
		// decl for CGPDFDictionaryGetMatrix not found
		"CGPDFDictionaryGetName" = "B^{CGPDFDictionary=}*^?";
		"CGPDFDictionaryGetNumber" = "B^{CGPDFDictionary=}*^d";
		// decl for CGPDFDictionaryGetNumbers not found
		"CGPDFDictionaryGetObject" = "B^{CGPDFDictionary=}*^^{CGPDFObject=}";
		// decl for CGPDFDictionaryGetOffset not found
		// decl for CGPDFDictionaryGetOwner not found
		// decl for CGPDFDictionaryGetRect not found
		"CGPDFDictionaryGetStream" = "B^{CGPDFDictionary=}*^^{CGPDFStream=}";
		"CGPDFDictionaryGetString" = "B^{CGPDFDictionary=}*^^{CGPDFString=}";
		// decl for CGPDFDictionaryGetUnresolvedObject not found
		// decl for CGPDFDictionaryPrint not found
		// decl for CGPDFDictionaryPrintWithIndent not found
		// decl for CGPDFDictionaryRelease not found
		// decl for CGPDFDictionaryRetain not found
		"CGPDFDocumentAllowsCopying" = "B^{CGPDFDocument=}";
		"CGPDFDocumentAllowsPrinting" = "B^{CGPDFDocument=}";
		// decl for CGPDFDocumentAppendChanges not found
		// decl for CGPDFDocumentAppendMetadata not found
		// decl for CGPDFDocumentAppendPage not found
		// decl for CGPDFDocumentAuthenticateOwnerPassword not found
		// decl for CGPDFDocumentAuthenticateUserPassword not found
		// decl for CGPDFDocumentCopyInfoDictionary not found
		// decl for CGPDFDocumentCopyOutputIntents not found
		// decl for CGPDFDocumentCopyPage not found
		// decl for CGPDFDocumentCopyToConsumer not found
		// decl for CGPDFDocumentCopyToConsumerWithChanges not found
		"CGPDFDocumentCreateWithProvider" = "^{CGPDFDocument=}^{CGDataProvider=}";
		"CGPDFDocumentCreateWithURQ" = "^{CGPDFDocument=}^{__CFURL=}";
		// decl for CGPDFDocumentEnableMRUMode not found
		// decl for CGPDFDocumentEnableTaggedStructureSerialization not found
		// decl for CGPDFDocumentExchangePagesAtIndices not found
		"CGPDFDocumentGetAccessPermissions" = "I^{CGPDFDocument=}";
		"CGPDFDocumentGetArtBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i";
		"CGPDFDocumentGetBleedBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i";
		"CGPDFDocumentGetCatalog" = "^{CGPDFDictionary=}^{CGPDFDocument=}";
		"CGPDFDocumentGetCropBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i";
		// decl for CGPDFDocumentGetDataProvider not found
		// decl for CGPDFDocumentGetDestination not found
		"CGPDFDocumentGetID" = "^{CGPDFArray=}^{CGPDFDocument=}";
		"CGPDFDocumentGetInfo" = "^{CGPDFDictionary=}^{CGPDFDocument=}";
		"CGPDFDocumentGetMediaBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i";
		// decl for CGPDFDocumentGetNumberOfObjects not found
		"CGPDFDocumentGetNumberOfPages" = "Q^{CGPDFDocument=}";
		// decl for CGPDFDocumentGetObject not found
		"CGPDFDocumentGetOutline" = "^{__CFDictionary=}^{CGPDFDocument=}";
		"CGPDFDocumentGetPage" = "^{CGPDFPage=}^{CGPDFDocument=}Q";
		// decl for CGPDFDocumentGetPageDictionary not found
		// decl for CGPDFDocumentGetPageForPageDictionary not found
		// decl for CGPDFDocumentGetPageNumberForPageDictionary not found
		// decl for CGPDFDocumentGetPermissions not found
		// decl for CGPDFDocumentGetProperty not found
		"CGPDFDocumentGetRotationAngle" = "i^{CGPDFDocument=}i";
		"CGPDFDocumentGetTrimBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i";
		"CGPDFDocumentGetTypeID" = "Q";
		// decl for CGPDFDocumentGetURL not found
		"CGPDFDocumentGetVersion" = "v^{CGPDFDocument=}^i^i";
		// decl for CGPDFDocumentInsertPageAtIndex not found
		"CGPDFDocumentIsEncrypted" = "B^{CGPDFDocument=}";
		// decl for CGPDFDocumentIsLinearized not found
		// decl for CGPDFDocumentIsTaggedPDF not found
		"CGPDFDocumentIsUnlocked" = "B^{CGPDFDocument=}";
		// decl for CGPDFDocumentIsUnlockedAsOwner not found
		// decl for CGPDFDocumentPrintObject not found
		"CGPDFDocumentRelease" = "v^{CGPDFDocument=}";
		// decl for CGPDFDocumentRemovePageAtIndex not found
		// decl for CGPDFDocumentRemoveProperty not found
		"CGPDFDocumentRetain" = "^{CGPDFDocument=}^{CGPDFDocument=}";
		// decl for CGPDFDocumentSetDeviceCMYKColorSpace not found
		// decl for CGPDFDocumentSetDeviceGrayColorSpace not found
		// decl for CGPDFDocumentSetDeviceRGBColorSpace not found
		// decl for CGPDFDocumentSetProperty not found
		// decl for CGPDFDocumentUnlockAsOwnerWithPassword not found
		"CGPDFDocumentUnlockWithPassword" = "B^{CGPDFDocument=}*";
		// decl for CGPDFDrawingContextCreateWithStream not found
		// decl for CGPDFDrawingContextDraw not found
		// decl for CGPDFDrawingContextRelease not found
		// decl for CGPDFEncodingCreate not found
		// decl for CGPDFEncodingGetGlyphVector not found
		// decl for CGPDFEncodingGetGlyphVectorWithFont not found
		// decl for CGPDFEncodingGetNameForIndex not found
		// decl for CGPDFEncodingGetUnicodeMaxLength not found
		// decl for CGPDFEncodingGetUnicodesForIndex not found
		// decl for CGPDFEncodingRelease not found
		// decl for CGPDFFontCreate not found
		// decl for CGPDFFontCreateToUnicodeCMap not found
		// decl for CGPDFFontCreateWithObject not found
		// decl for CGPDFFontDescriptorGetDictionary not found
		// decl for CGPDFFontDescriptorGetFlags not found
		// decl for CGPDFFontDescriptorRelease not found
		// decl for CGPDFFontDescriptorRetain not found
		// decl for CGPDFFontGetAdvances not found
		// decl for CGPDFFontGetCIDSystemInfo not found
		// decl for CGPDFFontGetCIDToGlyphMap not found
		// decl for CGPDFFontGetCMap not found
		// decl for CGPDFFontGetDescendant not found
		// decl for CGPDFFontGetDictionary not found
		// decl for CGPDFFontGetEncoding not found
		// decl for CGPDFFontGetFont not found
		// decl for CGPDFFontGetFontBBox not found
		// decl for CGPDFFontGetFontDescriptor not found
		// decl for CGPDFFontGetFontMatrix not found
		// decl for CGPDFFontGetMutator not found
		// decl for CGPDFFontGetName not found
		// decl for CGPDFFontGetProcedures not found
		// decl for CGPDFFontGetROSUnicodeCMap not found
		// decl for CGPDFFontGetToUnicodeCMap not found
		// decl for CGPDFFontGetType not found
		// decl for CGPDFFontIsBase14 not found
		// decl for CGPDFFontIsEmbedded not found
		// decl for CGPDFFontRelease not found
		// decl for CGPDFFontRetain not found
		// decl for CGPDFFormCreate not found
		// decl for CGPDFFormGetBBox not found
		// decl for CGPDFFormGetMatrix not found
		// decl for CGPDFFormGetResources not found
		// decl for CGPDFFormGetStream not found
		// decl for CGPDFFormRelease not found
		// decl for CGPDFFormRetain not found
		// decl for CGPDFFunctionCreateFunction not found
		// decl for CGPDFGetBaseEncodingForName not found
		// decl for CGPDFGetNameForBaseEncoding not found
		// decl for CGPDFGetNameVectorForBaseEncoding not found
		// decl for CGPDFGetUnicharGuessForCID not found
		// decl for CGPDFGetUnicharGuessForGlyphName not found
		// decl for CGPDFGetUnicharVectorForBaseEncoding not found
		// decl for CGPDFGetUnicharsForGlyphName not found
		// decl for CGPDFLayoutCreate not found
		// decl for CGPDFObjectGetReference not found
		"CGPDFObjectGetType" = "i^{CGPDFObject=}";
		"CGPDFObjectGetValue" = "B^{CGPDFObject=}i^v";
		// decl for CGPDFObjectPrint not found
		"CGPDFOperatorTableCreate" = "^{CGPDFOperatorTable=}";
		"CGPDFOperatorTableRelease" = "v^{CGPDFOperatorTable=}";
		"CGPDFOperatorTableRetain" = "^{CGPDFOperatorTable=}^{CGPDFOperatorTable=}";
		"CGPDFOperatorTableSetCallback" = "v^{CGPDFOperatorTable=}*^?";
		// decl for CGPDFPageAddAnnotation not found
		// decl for CGPDFPageContainsWideGamutContent not found
		// decl for CGPDFPageCopyAnnotations not found
		// decl for CGPDFPageCopyPageLabel not found
		// decl for CGPDFPageCopyTextString not found
		// decl for CGPDFPageCopyTextStringWithGlyphs not found
		// decl for CGPDFPageCopyThumbnail not found
		// decl for CGPDFPageCreate not found
		// decl for CGPDFPageCreateThumbnail not found
		// decl for CGPDFPageCreateWithImage not found
		// decl for CGPDFPageEnumerateAnnotations not found
		// decl for CGPDFPageGetAnnotationAtIndex not found
		// decl for CGPDFPageGetAnnotationCount not found
		"CGPDFPageGetBoxRect" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFPage=}i";
		// decl for CGPDFPageGetColorSpace not found
		// decl for CGPDFPageGetContents not found
		"CGPDFPageGetDictionary" = "^{CGPDFDictionary=}^{CGPDFPage=}";
		"CGPDFPageGetDocument" = "^{CGPDFDocument=}^{CGPDFPage=}";
		"CGPDFPageGetDrawingTransform" = "{CGAffineTransform=dddddd}^{CGPDFPage=}i{CGRect={CGPoint=dd}{CGSize=dd}}iB";
		// decl for CGPDFPageGetDrawingTransformForRect not found
		// decl for CGPDFPageGetImages not found
		"CGPDFPageGetPageNumber" = "Q^{CGPDFPage=}";
		// decl for CGPDFPageGetProperty not found
		"CGPDFPageGetRotationAngle" = "i^{CGPDFPage=}";
		// decl for CGPDFPageGetThumbnail not found
		"CGPDFPageGetTypeID" = "Q";
		// decl for CGPDFPagePrint not found
		"CGPDFPageRelease" = "v^{CGPDFPage=}";
		// decl for CGPDFPageRemoveAnnotation not found
		// decl for CGPDFPageRemoveProperty not found
		"CGPDFPageRetain" = "^{CGPDFPage=}^{CGPDFPage=}";
		// decl for CGPDFPageSetBoxRect not found
		// decl for CGPDFPageSetProperty not found
		// decl for CGPDFPageSetRotationAngle not found
		// decl for CGPDFPageSortAnnotations not found
		// decl for CGPDFPageSubstituteAnnotation not found
		"CGPDFScannerCreate" = "^{CGPDFScanner=}^{CGPDFContentStream=}^{CGPDFOperatorTable=}^v";
		"CGPDFScannerGetContentStream" = "^{CGPDFContentStream=}^{CGPDFScanner=}";
		"CGPDFScannerPopArray" = "B^{CGPDFScanner=}^^{CGPDFArray=}";
		"CGPDFScannerPopBoolean" = "B^{CGPDFScanner=}^C";
		"CGPDFScannerPopDictionary" = "B^{CGPDFScanner=}^^{CGPDFDictionary=}";
		"CGPDFScannerPopInteger" = "B^{CGPDFScanner=}^q";
		"CGPDFScannerPopName" = "B^{CGPDFScanner=}^?";
		"CGPDFScannerPopNumber" = "B^{CGPDFScanner=}^d";
		"CGPDFScannerPopObject" = "B^{CGPDFScanner=}^^{CGPDFObject=}";
		"CGPDFScannerPopStream" = "B^{CGPDFScanner=}^^{CGPDFStream=}";
		"CGPDFScannerPopString" = "B^{CGPDFScanner=}^^{CGPDFString=}";
		"CGPDFScannerRelease" = "v^{CGPDFScanner=}";
		"CGPDFScannerRetain" = "^{CGPDFScanner=}^{CGPDFScanner=}";
		"CGPDFScannerScan" = "B^{CGPDFScanner=}";
		// decl for CGPDFSourceGetLength not found
		// decl for CGPDFSourceGetPosition not found
		// decl for CGPDFSourceGetc not found
		// decl for CGPDFSourceIsAtEOF not found
		// decl for CGPDFSourceRead not found
		// decl for CGPDFSourceRelease not found
		// decl for CGPDFSourceRetain not found
		// decl for CGPDFSourceRewind not found
		// decl for CGPDFSourceSetPosition not found
		// decl for CGPDFSourceUngetc not found
		"CGPDFStreamCopyData" = "^{__CFData=}^{CGPDFStream=}^i";
		// decl for CGPDFStreamCreateDataProvider not found
		// decl for CGPDFStreamCreateWithData not found
		// decl for CGPDFStreamGetData not found
		"CGPDFStreamGetDictionary" = "^{CGPDFDictionary=}^{CGPDFStream=}";
		// decl for CGPDFStreamPrint not found
		// decl for CGPDFStreamPrintContents not found
		// decl for CGPDFStreamPrintContentsWithIndent not found
		// decl for CGPDFStreamPrintWithIndent not found
		// decl for CGPDFStreamRelease not found
		// decl for CGPDFStreamRetain not found
		"CGPDFStringCopyDate" = "^{__CFDate=}^{CGPDFString=}";
		"CGPDFStringCopyTextString" = "^{__CFString=}^{CGPDFString=}";
		"CGPDFStringGetBytePtr" = "^C^{CGPDFString=}";
		"CGPDFStringGetLength" = "Q^{CGPDFString=}";
		// decl for CGPDFStringPrint not found
		// decl for CGPDFStringRelease not found
		// decl for CGPDFStringRetain not found
		// decl for CGPDFTagTypeGetName not found
		// decl for CGPDFTextStringGetBBoxForIndex not found
		// decl for CGPDFTextStringGetCharacterAtIndex not found
		// decl for CGPDFTextStringGetColorForIndex not found
		// decl for CGPDFTextStringGetFontForIndex not found
		// decl for CGPDFTextStringGetGlyphAtIndex not found
		// decl for CGPDFTextStringGetLength not found
		// decl for CGPDFTextStringGetPositionForIndex not found
		// decl for CGPDFTextStringGetTransformForIndex not found
		// decl for CGPDFTextStringRelease not found
		// decl for CGPDFTextStringRetain not found
		"CGPathAddArc" = "v^{CGPath=}^{CGAffineTransform=dddddd}dddddB";
		"CGPathAddArcToPoint" = "v^{CGPath=}^{CGAffineTransform=dddddd}ddddd";
		"CGPathAddCurveToPoint" = "v^{CGPath=}^{CGAffineTransform=dddddd}dddddd";
		"CGPathAddEllipseInRect" = "v^{CGPath=}^{CGAffineTransform=dddddd}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGPathAddLineToPoint" = "v^{CGPath=}^{CGAffineTransform=dddddd}dd";
		"CGPathAddLines" = "v^{CGPath=}^{CGAffineTransform=dddddd}^{CGPoint=dd}Q";
		"CGPathAddPath" = "v^{CGPath=}^{CGAffineTransform=dddddd}^{CGPath=}";
		"CGPathAddQuadCurveToPoint" = "v^{CGPath=}^{CGAffineTransform=dddddd}dddd";
		"CGPathAddRect" = "v^{CGPath=}^{CGAffineTransform=dddddd}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGPathAddRects" = "v^{CGPath=}^{CGAffineTransform=dddddd}^{CGRect={CGPoint=dd}{CGSize=dd}}Q";
		// decl for CGPathAddRegion not found
		"CGPathAddRelativeArc" = "v^{CGPath=}^{CGAffineTransform=dddddd}ddddd";
		"CGPathAddRoundedRect" = "v^{CGPath=}^{CGAffineTransform=dddddd}{CGRect={CGPoint=dd}{CGSize=dd}}dd";
		// decl for CGPathAddUnevenCornersRoundedRect not found
		"CGPathApply" = "v^{CGPath=}^v^?";
		// decl for CGPathApplyDashedPath not found
		// decl for CGPathApplyIterator not found
		// decl for CGPathApplyStrokedDashedPath not found
		"CGPathApplyWithBlock" = "v^{CGPath=}^?";
		"CGPathCloseSubpath" = "v^{CGPath=}";
		"CGPathContainsPoint" = "B^{CGPath=}^{CGAffineTransform=dddddd}{CGPoint=dd}B";
		// decl for CGPathCreateByNormalizingGlyphPath not found
		"CGPathCreateCopy" = "^{CGPath=}^{CGPath=}";
		"CGPathCreateCopyByDashingPath" = "^{CGPath=}^{CGPath=}^{CGAffineTransform=dddddd}d^dQ";
		"CGPathCreateCopyByStrokingPath" = "^{CGPath=}^{CGPath=}^{CGAffineTransform=dddddd}diid";
		"CGPathCreateCopyByTransformingPath" = "^{CGPath=}^{CGPath=}^{CGAffineTransform=dddddd}";
		// decl for CGPathCreateDashedPath not found
		"CGPathCreateMutable" = "^{CGPath=}";
		"CGPathCreateMutableCopy" = "^{CGPath=}^{CGPath=}";
		"CGPathCreateMutableCopyByTransformingPath" = "^{CGPath=}^{CGPath=}^{CGAffineTransform=dddddd}";
		// decl for CGPathCreateStrokedPath not found
		"CGPathCreateWithEllipseInRect" = "^{CGPath=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGAffineTransform=dddddd}";
		// decl for CGPathCreateWithLineSegment not found
		"CGPathCreateWithRect" = "^{CGPath=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGAffineTransform=dddddd}";
		"CGPathCreateWithRoundedRect" = "^{CGPath=}{CGRect={CGPoint=dd}{CGSize=dd}}dd^{CGAffineTransform=dddddd}";
		// decl for CGPathCreateWithThresholdedImage not found
		// decl for CGPathCreateWithThresholdedImageDebug not found
		// decl for CGPathCreateWithUnevenCornersRoundedRect not found
		"CGPathEqualToPath" = "B^{CGPath=}^{CGPath=}";
		"CGPathGetBoundingBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPath=}";
		"CGPathGetCurrentPoint" = "{CGPoint=dd}^{CGPath=}";
		// decl for CGPathGetGeometricBoundingBox not found
		"CGPathGetPathBoundingBox" = "{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPath=}";
		"CGPathGetTypeID" = "Q";
		// decl for CGPathIsEllipse not found
		// decl for CGPathIsEllipse2 not found
		// decl for CGPathIsEllipseWithTransform not found
		"CGPathIsEmpty" = "B^{CGPath=}";
		// decl for CGPathIsLine not found
		"CGPathIsRect" = "B^{CGPath=}^{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGPathIsRectWithTransform not found
		// decl for CGPathIsRegion not found
		// decl for CGPathIsRoundedRect not found
		// decl for CGPathIsRoundedRectWithTransform not found
		// decl for CGPathIsUnevenCornersRoundedRectWithTransform not found
		// decl for CGPathIsValidGlyphPath not found
		"CGPathMoveToPoint" = "v^{CGPath=}^{CGAffineTransform=dddddd}dd";
		// decl for CGPathPrint not found
		"CGPathRelease" = "v^{CGPath=}";
		"CGPathRetain" = "^{CGPath=}^{CGPath=}";
		"CGPatternCreate" = "^{CGPattern=}^v{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}ddiB^{CGPatternCallbacks=I^?^?}";
		// decl for CGPatternCreateColoredEmpty not found
		// decl for CGPatternCreateUncoloredEmpty not found
		// decl for CGPatternCreateWithImage not found
		// decl for CGPatternCreateWithImage2 not found
		// decl for CGPatternDrawInContextDelegate not found
		// decl for CGPatternGetAssociate not found
		// decl for CGPatternGetBounds not found
		// decl for CGPatternGetIdentifier not found
		// decl for CGPatternGetImage not found
		// decl for CGPatternGetMatrix not found
		// decl for CGPatternGetShading not found
		// decl for CGPatternGetStep not found
		// decl for CGPatternGetTiling not found
		// decl for CGPatternGetType not found
		"CGPatternGetTypeID" = "Q";
		// decl for CGPatternIsColored not found
		// decl for CGPatternIsOpaque not found
		// decl for CGPatternNotificationCenter not found
		"CGPatternRelease" = "v^{CGPattern=}";
		"CGPatternRetain" = "^{CGPattern=}^{CGPattern=}";
		// decl for CGPatternSetAssociate not found
		"CGPointApplyAffineTransform" = "{CGPoint=dd}{CGPoint=dd}{CGAffineTransform=dddddd}";
		// decl for CGPointApplyInverseAffineTransform not found
		"CGPointCreateDictionaryRepresentation" = "^{__CFDictionary=}{CGPoint=dd}";
		"CGPointEqualToPoint" = "B{CGPoint=dd}{CGPoint=dd}";
		"CGPointMakeWithDictionaryRepresentation" = "B^{__CFDictionary=}^{CGPoint=dd}";
		// decl for CGPointZero not found
		// decl for CGPostError not found
		// decl for CGPostErrorWithArguments not found
		// decl for CGPreferencesCopyString not found
		// decl for CGPreferencesGetBoolean not found
		// decl for CGPreferencesGetCGFloat not found
		// decl for CGPreferencesGetInteger not found
		"CGRectApplyAffineTransform" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}";
		// decl for CGRectApplyInverseAffineTransform not found
		"CGRectContainsPoint" = "B{CGRect={CGPoint=dd}{CGSize=dd}}{CGPoint=dd}";
		"CGRectContainsRect" = "B{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectCreateDictionaryRepresentation" = "^{__CFDictionary=}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectDivide" = "v{CGRect={CGPoint=dd}{CGSize=dd}}^{CGRect={CGPoint=dd}{CGSize=dd}}^{CGRect={CGPoint=dd}{CGSize=dd}}dI";
		"CGRectEqualToRect" = "B{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetHeight" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetMaxX" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetMaxY" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetMidX" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetMidY" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetMinX" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetMinY" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectGetWidth" = "d{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGRectInfinite not found
		"CGRectInset" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}dd";
		"CGRectIntegral" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectIntersection" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectIntersectsRect" = "B{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectIsEmpty" = "B{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectIsInfinite" = "B{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGRectIsIntegral not found
		"CGRectIsNull" = "B{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectMakeWithDictionaryRepresentation" = "B^{__CFDictionary=}^{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGRectNull not found
		"CGRectOffset" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}dd";
		"CGRectStandardize" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		"CGRectUnion" = "{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}";
		// decl for CGRectZero not found
		// decl for CGRegionCreateWithBytes not found
		// decl for CGRegionCreateWithData not found
		// decl for CGRegionCreateWithInset not found
		// decl for CGRegionGetTypeID not found
		// decl for CGRegionIsValid not found
		// decl for CGRegionRelease not found
		// decl for CGRegionRetain not found
		// decl for CGRenderingStateCreate not found
		// decl for CGRenderingStateCreateCopy not found
		// decl for CGRenderingStateGetAllowedFontRenderingStyle not found
		// decl for CGRenderingStateGetAllowsAcceleration not found
		// decl for CGRenderingStateGetAllowsAntialiasing not found
		// decl for CGRenderingStateGetAllowsDithering not found
		// decl for CGRenderingStateGetAllowsFontAntialiasing not found
		// decl for CGRenderingStateGetAllowsFontSmoothing not found
		// decl for CGRenderingStateGetAllowsFontSubpixelPositioning not found
		// decl for CGRenderingStateGetAllowsFontSubpixelQuantization not found
		// decl for CGRenderingStateGetBaseCTM not found
		// decl for CGRenderingStateGetFontRenderingStyle not found
		// decl for CGRenderingStateGetMaxInterpolationQuality not found
		// decl for CGRenderingStateGetMinInterpolationQuality not found
		// decl for CGRenderingStateGetRenderingResolution not found
		// decl for CGRenderingStateRelease not found
		// decl for CGRenderingStateReset not found
		// decl for CGRenderingStateRetain not found
		// decl for CGRenderingStateSetAllowsAcceleration not found
		// decl for CGRenderingStateSetAllowsAntialiasing not found
		// decl for CGRenderingStateSetAllowsDithering not found
		// decl for CGRenderingStateSetAllowsFontAntialiasing not found
		// decl for CGRenderingStateSetAllowsFontSmoothing not found
		// decl for CGRenderingStateSetAllowsFontSubpixelPositioning not found
		// decl for CGRenderingStateSetAllowsFontSubpixelQuantization not found
		// decl for CGRenderingStateSetBaseCTM not found
		// decl for CGRenderingStateSetMaxInterpolationQuality not found
		// decl for CGRenderingStateSetMinInterpolationQuality not found
		// decl for CGRenderingStateSetRenderingResolution not found
		// decl for CGRenderingStateSynchronize not found
		// decl for CGSBoundingShapeAdd not found
		// decl for CGSBoundingShapeAddRect not found
		// decl for CGSBoundingShapeAddRegion not found
		// decl for CGSBoundingShapeCreate not found
		// decl for CGSBoundingShapeGetBounds not found
		// decl for CGSBoundingShapeGetRegion not found
		// decl for CGSBoundingShapeRelease not found
		// decl for CGSBoundingShapeReset not found
		// decl for CGSBoundsEqualToBounds not found
		// decl for CGSBoundsIntersection not found
		// decl for CGSBoundsUnion not found
		// decl for CGSConvertXRGB8888toARGB8888 not found
		// decl for CGSDiffRegion not found
		// decl for CGSGetRegionBounds not found
		// decl for CGSGetRegionData not found
		// decl for CGSIntersectRegionWithRect not found
		// decl for CGSNewEmptyRegion not found
		// decl for CGSNewRegionWithData not found
		// decl for CGSNewRegionWithRect not found
		// decl for CGSNextPoint not found
		// decl for CGSNextRect not found
		// decl for CGSOffsetRegion not found
		// decl for CGSRectInRegion not found
		// decl for CGSRegionEnumerator not found
		// decl for CGSRegionEnumeratorWithDirection not found
		// decl for CGSRegionFromBitmap not found
		// decl for CGSRegionIsEmpty not found
		// decl for CGSRegionPathEnumerator not found
		// decl for CGSReleaseRegion not found
		// decl for CGSReleaseRegionEnumerator not found
		// decl for CGSTransformRegion not found
		// decl for CGSUnionRegion not found
		"CGShadingCreateAxial" = "^{CGShading=}^{CGColorSpace=}{CGPoint=dd}{CGPoint=dd}^{CGFunction=}BB";
		// decl for CGShadingCreateConic not found
		"CGShadingCreateRadial" = "^{CGShading=}^{CGColorSpace=}{CGPoint=dd}d{CGPoint=dd}d^{CGFunction=}BB";
		// decl for CGShadingDelegateDrawShading not found
		// decl for CGShadingDrawInContextDelegate not found
		// decl for CGShadingGetAssociate not found
		// decl for CGShadingGetBackground not found
		// decl for CGShadingGetBounds not found
		// decl for CGShadingGetColorSpace not found
		// decl for CGShadingGetDescriptor not found
		// decl for CGShadingGetIdentifier not found
		// decl for CGShadingGetType not found
		"CGShadingGetTypeID" = "Q";
		"CGShadingRelease" = "v^{CGShading=}";
		"CGShadingRetain" = "^{CGShading=}^{CGShading=}";
		// decl for CGShadingSetAssociate not found
		"CGSizeApplyAffineTransform" = "{CGSize=dd}{CGSize=dd}{CGAffineTransform=dddddd}";
		"CGSizeCreateDictionaryRepresentation" = "^{__CFDictionary=}{CGSize=dd}";
		"CGSizeEqualToSize" = "B{CGSize=dd}{CGSize=dd}";
		"CGSizeMakeWithDictionaryRepresentation" = "B^{__CFDictionary=}^{CGSize=dd}";
		// decl for CGSizeZero not found
		// decl for CGSoftMaskCreate not found
		// decl for CGSoftMaskDelegateDrawSoftMask not found
		// decl for CGSoftMaskEqual not found
		// decl for CGSoftMaskGetBackground not found
		// decl for CGSoftMaskGetBounds not found
		// decl for CGSoftMaskGetIdentifier not found
		// decl for CGSoftMaskGetMatrix not found
		// decl for CGSoftMaskGetTransfer not found
		// decl for CGSoftMaskGetTypeID not found
		// decl for CGSoftMaskRelease not found
		// decl for CGSoftMaskRetain not found
		// decl for CGStyleCreate not found
		// decl for CGStyleCreateFocusRing not found
		// decl for CGStyleCreateFocusRingWithColor not found
		// decl for CGStyleCreateShadow not found
		// decl for CGStyleCreateShadow2 not found
		// decl for CGStyleCreateShadowWithColor not found
		// decl for CGStyleEqualToStyle not found
		// decl for CGStyleFilterContextDelegateCreate not found
		// decl for CGStyleGetColor not found
		// decl for CGStyleGetData not found
		// decl for CGStyleGetDrawBoundingBox not found
		// decl for CGStyleGetDrawOrdering not found
		// decl for CGStyleGetIdentifier not found
		// decl for CGStyleGetType not found
		// decl for CGStyleGetTypeID not found
		// decl for CGStyleRelease not found
		// decl for CGStyleRetain not found
		// decl for CGStyleShouldUseCorrectShadowOffsets not found
		// decl for CGTextClippingCreatePath not found
		// decl for CGTriangleMeshAddTriangle not found
		// decl for CGTriangleMeshAddTriangleWithRelativePoint not found
		// decl for CGTriangleMeshAddTriangleWithTrianglePoints not found
		// decl for CGTriangleMeshCreate not found
		// decl for CGTriangleMeshGetColorSpace not found
		// decl for CGTriangleMeshGetCount not found
		// decl for CGTriangleMeshGetNumberOfComponents not found
		// decl for CGTriangleMeshGetTriangleAtIndex not found
		// decl for CGTriangleMeshPrint not found
		// decl for CGTriangleMeshRelease not found
		// decl for CGTriangleMeshRetain not found
		// decl for CGUpdateConvolveKernelBlue not found
		// decl for CGUpdateConvolveKernelGreen not found
		// decl for CGUpdateConvolveKernelMonochrome not found
		// decl for CGUpdateConvolveKernelRed not found
		// decl for path_iterator_add_curve_to_point not found
		// decl for path_iterator_add_line_to_point not found
		// decl for path_iterator_add_quad_curve_to_point not found
		// decl for path_iterator_begin not found
		// decl for path_iterator_call not found
		// decl for path_iterator_close_subpath not found
		// decl for path_iterator_create not found
		// decl for path_iterator_dasher_create not found
		// decl for path_iterator_end not found
		// decl for path_iterator_move_to_point not found
		// decl for path_iterator_release not found
		// decl for path_iterator_stroker_create not found
		// decl for shape_alloc_bounds not found
		// decl for shape_alloc_data not found
		// decl for shape_bounds not found
		// decl for shape_combine not found
		// decl for shape_contains_bounds not found
		// decl for shape_contains_point not found
		// decl for shape_copy not found
		// decl for shape_count not found
		// decl for shape_difference not found
		// decl for shape_empty not found
		// decl for shape_enclose_with_bounds not found
		// decl for shape_enum_alloc not found
		// decl for shape_enum_clip_alloc not found
		// decl for shape_enum_clip_next not found
		// decl for shape_enum_clip_scan not found
		// decl for shape_enum_free not found
		// decl for shape_enum_next not found
		// decl for shape_forward_enum not found
		// decl for shape_forward_enum_next not found
		// decl for shape_free not found
		// decl for shape_inset not found
		// decl for shape_intersect not found
		// decl for shape_intersect_with_bounds not found
		// decl for shape_is_empty not found
		// decl for shape_is_rectangular not found
		// decl for shape_length not found
		// decl for shape_offset not found
		// decl for shape_qdrgn_alloc not found
		// decl for shape_qdrgn_free not found
		// decl for shape_union not found
		// decl for shape_xor not found
	};
	"/System/Library/Frameworks/Metal.framework/Versions/A/Metal" = {
		"MTLCreateSystemDefaultDevice" = "*";
		"MTLCopyAllDevices" = "*";
	};
	"/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox" = {
		"AudioServicesCreateSystemSoundID" = "i^?^I";
		"AudioServicesDisposeSystemSoundID" = "iI";
		"AudioServicesPlaySystemSound" = "vI";
	};
	"/System/iOSSupport/System/Library/PrivateFrameworks/UIKitCore.framework/Versions/A/UIKitCore" = {
		"UIApplicationMain" = "i^?^?@@";
		"UIGraphicsGetCurrentContext" = "^v";
		"UIRectFill" = "v{CGRect={CGPoint=dd}{CGSize=dd}}";
	};
	"/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration" = {
		// decl for CNCopyCurrentNetworkInfo not found
		// decl for CNCopySupportedInterfaces not found
		// decl for CNMarkPortalOffline not found
		// decl for CNMarkPortalOnline not found
		// decl for CNSetSupportedSSIDs not found
		// decl for DHCPClientPreferencesCopyApplicationOptions not found
		// decl for DHCPClientPreferencesSetApplicationOptions not found
		// decl for DHCPInfoGetLeaseExpirationTime not found
		// decl for DHCPInfoGetLeaseStartTime not found
		// decl for DHCPInfoGetOptionData not found
		// decl for SCBridgeInterfaceCopyAll not found
		// decl for SCBridgeInterfaceCopyAvailableMemberInterfaces not found
		// decl for SCBridgeInterfaceCreate not found
		// decl for SCBridgeInterfaceGetMemberInterfaces not found
		// decl for SCBridgeInterfaceGetOptions not found
		// decl for SCBridgeInterfaceRemove not found
		// decl for SCBridgeInterfaceSetLocalizedDisplayName not found
		// decl for SCBridgeInterfaceSetMemberInterfaces not found
		// decl for SCBridgeInterfaceSetOptions not found
		"SCCopyLastError" = "^{__CFError=}";
		"SCDynamicStoreAddTemporaryValue" = "C^{__SCDynamicStore=}^{__CFString=}^v";
		"SCDynamicStoreAddValue" = "C^{__SCDynamicStore=}^{__CFString=}^v";
		// decl for SCDynamicStoreAddWatchedKey not found
		"SCDynamicStoreCopyComputerName" = "^{__CFString=}^{__SCDynamicStore=}^I";
		// decl for SCDynamicStoreCopyDHCPInfo not found
		"SCDynamicStoreCopyKeyList" = "^{__CFArray=}^{__SCDynamicStore=}^{__CFString=}";
		"SCDynamicStoreCopyLocalHostName" = "^{__CFString=}^{__SCDynamicStore=}";
		"SCDynamicStoreCopyMultiple" = "^{__CFDictionary=}^{__SCDynamicStore=}^{__CFArray=}^{__CFArray=}";
		"SCDynamicStoreCopyNotifiedKeys" = "^{__CFArray=}^{__SCDynamicStore=}";
		"SCDynamicStoreCopyProxies" = "^{__CFDictionary=}^{__SCDynamicStore=}";
		// decl for SCDynamicStoreCopyProxiesWithOptions not found
		"SCDynamicStoreCopyValue" = "^v^{__SCDynamicStore=}^{__CFString=}";
		"SCDynamicStoreCreate" = "^{__SCDynamicStore=}^{__CFAllocator=}^{__CFString=}^?^{?=q^v^?^?^?}";
		"SCDynamicStoreCreateRunLoopSource" = "^{__CFRunLoopSource=}^{__CFAllocator=}^{__SCDynamicStore=}q";
		"SCDynamicStoreCreateWithOptions" = "^{__SCDynamicStore=}^{__CFAllocator=}^{__CFString=}^{__CFDictionary=}^?^{?=q^v^?^?^?}";
		"SCDynamicStoreGetTypeID" = "Q";
		"SCDynamicStoreKeyCreate" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}...";
		"SCDynamicStoreKeyCreateComputerName" = "^{__CFString=}^{__CFAllocator=}";
		"SCDynamicStoreKeyCreateHostNames" = "^{__CFString=}^{__CFAllocator=}";
		"SCDynamicStoreKeyCreateLocation" = "^{__CFString=}^{__CFAllocator=}";
		"SCDynamicStoreKeyCreateNetworkGlobalEntity" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}";
		"SCDynamicStoreKeyCreateNetworkInterface" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}";
		"SCDynamicStoreKeyCreateNetworkInterfaceEntity" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{__CFString=}";
		"SCDynamicStoreKeyCreateNetworkServiceEntity" = "^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{__CFString=}";
		// decl for SCDynamicStoreKeyCreatePreferences not found
		"SCDynamicStoreKeyCreateProxies" = "^{__CFString=}^{__CFAllocator=}";
		// decl for SCDynamicStoreNotifyCancel not found
		// decl for SCDynamicStoreNotifyFileDescriptor not found
		// decl for SCDynamicStoreNotifySignal not found
		"SCDynamicStoreNotifyValue" = "C^{__SCDynamicStore=}^{__CFString=}";
		// decl for SCDynamicStoreNotifyWait not found
		"SCDynamicStoreRemoveValue" = "C^{__SCDynamicStore=}^{__CFString=}";
		// decl for SCDynamicStoreRemoveWatchedKey not found
		// decl for SCDynamicStoreSetDisconnectCallBack not found
		"SCDynamicStoreSetDispatchQueue" = "C^{__SCDynamicStore=}^{dispatch_queue_s=}";
		"SCDynamicStoreSetMultiple" = "C^{__SCDynamicStore=}^{__CFDictionary=}^{__CFArray=}^{__CFArray=}";
		"SCDynamicStoreSetNotificationKeys" = "C^{__SCDynamicStore=}^{__CFArray=}^{__CFArray=}";
		"SCDynamicStoreSetValue" = "C^{__SCDynamicStore=}^{__CFString=}^v";
		// decl for SCDynamicStoreSnapshot not found
		"SCError" = "i";
		"SCErrorString" = "*i";
		// decl for SCLog not found
		// decl for SCNetworkConnectionCanTunnelAddress not found
		// decl for SCNetworkConnectionCopyAllUserPreferences not found
		// decl for SCNetworkConnectionCopyAvailableServices not found
		// decl for SCNetworkConnectionCopyCurrentUserPreferences not found
		"SCNetworkConnectionCopyExtendedStatus" = "^{__CFDictionary=}^{__SCNetworkConnection=}";
		// decl for SCNetworkConnectionCopyFlowDivertToken not found
		// decl for SCNetworkConnectionCopyOnDemandInfo not found
		"SCNetworkConnectionCopyServiceID" = "^{__CFString=}^{__SCNetworkConnection=}";
		"SCNetworkConnectionCopyStatistics" = "^{__CFDictionary=}^{__SCNetworkConnection=}";
		"SCNetworkConnectionCopyUserOptions" = "^{__CFDictionary=}^{__SCNetworkConnection=}";
		"SCNetworkConnectionCopyUserPreferences" = "C^{__CFDictionary=}^^{__CFString=}^^{__CFDictionary=}";
		// decl for SCNetworkConnectionCreate not found
		// decl for SCNetworkConnectionCreateUserPreferences not found
		// decl for SCNetworkConnectionCreateWithService not found
		"SCNetworkConnectionCreateWithServiceID" = "^{__SCNetworkConnection=}^{__CFAllocator=}^{__CFString=}^?^{?=q^v^?^?^?}";
		// decl for SCNetworkConnectionGetReachabilityInfo not found
		// decl for SCNetworkConnectionGetService not found
		// decl for SCNetworkConnectionGetServiceIdentifier not found
		"SCNetworkConnectionGetStatus" = "i^{__SCNetworkConnection=}";
		// decl for SCNetworkConnectionGetStatusFromNEStatus not found
		// decl for SCNetworkConnectionGetType not found
		"SCNetworkConnectionGetTypeID" = "Q";
		// decl for SCNetworkConnectionIsOnDemandSuspended not found
		// decl for SCNetworkConnectionOnDemandShouldRetryOnFailure not found
		// decl for SCNetworkConnectionRefreshOnDemandState not found
		// decl for SCNetworkConnectionResume not found
		"SCNetworkConnectionScheduleWithRunLoop" = "C^{__SCNetworkConnection=}^{__CFRunLoop=}^{__CFString=}";
		// decl for SCNetworkConnectionSelectServiceWithOptions not found
		// decl for SCNetworkConnectionSetClientAuditInfo not found
		// decl for SCNetworkConnectionSetClientInfo not found
		"SCNetworkConnectionSetDispatchQueue" = "C^{__SCNetworkConnection=}^{dispatch_queue_s=}";
		"SCNetworkConnectionStart" = "C^{__SCNetworkConnection=}^{__CFDictionary=}C";
		// decl for SCNetworkConnectionStartWithUserPreferences not found
		"SCNetworkConnectionStop" = "C^{__SCNetworkConnection=}C";
		// decl for SCNetworkConnectionSuspend not found
		// decl for SCNetworkConnectionTriggerOnDemandIfNeeded not found
		"SCNetworkConnectionUnscheduleFromRunLoop" = "C^{__SCNetworkConnection=}^{__CFRunLoop=}^{__CFString=}";
		// decl for SCNetworkInterfaceAdvisoryIsSet not found
		// decl for SCNetworkInterfaceCheckPassword not found
		// decl for SCNetworkInterfaceCopyAdvisoryNotificationKey not found
		"SCNetworkInterfaceCopyAll" = "^{__CFArray=}";
		// decl for SCNetworkInterfaceCopyCapability not found
		"SCNetworkInterfaceCopyMTU" = "C^{__SCNetworkInterface=}^i^i^i";
		"SCNetworkInterfaceCopyMediaOptions" = "C^{__SCNetworkInterface=}^^{__CFDictionary=}^^{__CFDictionary=}^^{__CFArray=}C";
		"SCNetworkInterfaceCopyMediaSubTypeOptions" = "^{__CFArray=}^{__CFArray=}^{__CFString=}";
		"SCNetworkInterfaceCopyMediaSubTypes" = "^{__CFArray=}^{__CFArray=}";
		// decl for SCNetworkInterfaceCopyPassword not found
		"SCNetworkInterfaceCreateWithInterface" = "^{__SCNetworkInterface=}^{__SCNetworkInterface=}^{__CFString=}";
		"SCNetworkInterfaceForceConfigurationRefresh" = "C^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetBSDName" = "^{__CFString=}^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetConfiguration" = "^{__CFDictionary=}^{__SCNetworkInterface=}";
		// decl for SCNetworkInterfaceGetDisableUntilNeeded not found
		"SCNetworkInterfaceGetExtendedConfiguration" = "^{__CFDictionary=}^{__SCNetworkInterface=}^{__CFString=}";
		"SCNetworkInterfaceGetHardwareAddressString" = "^{__CFString=}^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetInterface" = "^{__SCNetworkInterface=}^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetInterfaceType" = "^{__CFString=}^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetLocalizedDisplayName" = "^{__CFString=}^{__SCNetworkInterface=}";
		// decl for SCNetworkInterfaceGetPrimaryRank not found
		// decl for SCNetworkInterfaceGetQoSMarkingPolicy not found
		"SCNetworkInterfaceGetSupportedInterfaceTypes" = "^{__CFArray=}^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetSupportedProtocolTypes" = "^{__CFArray=}^{__SCNetworkInterface=}";
		"SCNetworkInterfaceGetTypeID" = "Q";
		// decl for SCNetworkInterfaceProviderCreate not found
		// decl for SCNetworkInterfaceProviderResume not found
		// decl for SCNetworkInterfaceProviderSetEventHandler not found
		// decl for SCNetworkInterfaceRemovePassword not found
		// decl for SCNetworkInterfaceSetAdvisory not found
		// decl for SCNetworkInterfaceSetCapability not found
		"SCNetworkInterfaceSetConfiguration" = "C^{__SCNetworkInterface=}^{__CFDictionary=}";
		// decl for SCNetworkInterfaceSetDisableUntilNeeded not found
		"SCNetworkInterfaceSetExtendedConfiguration" = "C^{__SCNetworkInterface=}^{__CFString=}^{__CFDictionary=}";
		"SCNetworkInterfaceSetMTU" = "C^{__SCNetworkInterface=}i";
		"SCNetworkInterfaceSetMediaOptions" = "C^{__SCNetworkInterface=}^{__CFString=}^{__CFArray=}";
		// decl for SCNetworkInterfaceSetPassword not found
		// decl for SCNetworkInterfaceSetPrimaryRank not found
		// decl for SCNetworkInterfaceSetQoSMarkingPolicy not found
		"SCNetworkProtocolGetConfiguration" = "^{__CFDictionary=}^{__SCNetworkProtocol=}";
		"SCNetworkProtocolGetEnabled" = "C^{__SCNetworkProtocol=}";
		"SCNetworkProtocolGetProtocolType" = "^{__CFString=}^{__SCNetworkProtocol=}";
		"SCNetworkProtocolGetTypeID" = "Q";
		"SCNetworkProtocolSetConfiguration" = "C^{__SCNetworkProtocol=}^{__CFDictionary=}";
		"SCNetworkProtocolSetEnabled" = "C^{__SCNetworkProtocol=}C";
		// decl for SCNetworkProxiesCopyMatching not found
		// decl for SCNetworkProxiesCopyMatchingWithOptions not found
		// decl for SCNetworkProxiesCreateProxyAgentData not found
		// decl for SCNetworkReachabilityCopyResolvedAddress not found
		"SCNetworkReachabilityCreateWithAddress" = "^{__SCNetworkReachability=}^{__CFAllocator=}^{sockaddr=CC[14c]}";
		"SCNetworkReachabilityCreateWithAddressPair" = "^{__SCNetworkReachability=}^{__CFAllocator=}^{sockaddr=CC[14c]}^{sockaddr=CC[14c]}";
		"SCNetworkReachabilityCreateWithName" = "^{__SCNetworkReachability=}^{__CFAllocator=}*";
		// decl for SCNetworkReachabilityCreateWithOptions not found
		"SCNetworkReachabilityGetFlags" = "C^{__SCNetworkReachability=}^I";
		// decl for SCNetworkReachabilityGetInterfaceIndex not found
		"SCNetworkReachabilityGetTypeID" = "Q";
		"SCNetworkReachabilityScheduleWithRunLoop" = "C^{__SCNetworkReachability=}^{__CFRunLoop=}^{__CFString=}";
		"SCNetworkReachabilitySetCallback" = "C^{__SCNetworkReachability=}^?^{?=q^v^?^?^?}";
		"SCNetworkReachabilitySetDispatchQueue" = "C^{__SCNetworkReachability=}^{dispatch_queue_s=}";
		"SCNetworkReachabilityUnscheduleFromRunLoop" = "C^{__SCNetworkReachability=}^{__CFRunLoop=}^{__CFString=}";
		"SCNetworkServiceAddProtocolType" = "C^{__SCNetworkService=}^{__CFString=}";
		"SCNetworkServiceCopy" = "^{__SCNetworkService=}^{__SCPreferences=}^{__CFString=}";
		"SCNetworkServiceCopyAll" = "^{__CFArray=}^{__SCPreferences=}";
		// decl for SCNetworkServiceCopyExternalID not found
		"SCNetworkServiceCopyProtocol" = "^{__SCNetworkProtocol=}^{__SCNetworkService=}^{__CFString=}";
		"SCNetworkServiceCopyProtocols" = "^{__CFArray=}^{__SCNetworkService=}";
		"SCNetworkServiceCreate" = "^{__SCNetworkService=}^{__SCPreferences=}^{__SCNetworkInterface=}";
		"SCNetworkServiceEstablishDefaultConfiguration" = "C^{__SCNetworkService=}";
		"SCNetworkServiceGetEnabled" = "C^{__SCNetworkService=}";
		"SCNetworkServiceGetInterface" = "^{__SCNetworkInterface=}^{__SCNetworkService=}";
		"SCNetworkServiceGetName" = "^{__CFString=}^{__SCNetworkService=}";
		// decl for SCNetworkServiceGetPrimaryRank not found
		"SCNetworkServiceGetServiceID" = "^{__CFString=}^{__SCNetworkService=}";
		"SCNetworkServiceGetTypeID" = "Q";
		"SCNetworkServiceRemove" = "C^{__SCNetworkService=}";
		"SCNetworkServiceRemoveProtocolType" = "C^{__SCNetworkService=}^{__CFString=}";
		"SCNetworkServiceSetEnabled" = "C^{__SCNetworkService=}C";
		// decl for SCNetworkServiceSetExternalID not found
		"SCNetworkServiceSetName" = "C^{__SCNetworkService=}^{__CFString=}";
		// decl for SCNetworkServiceSetPrimaryRank not found
		"SCNetworkSetAddService" = "C^{__SCNetworkSet=}^{__SCNetworkService=}";
		"SCNetworkSetContainsInterface" = "C^{__SCNetworkSet=}^{__SCNetworkInterface=}";
		"SCNetworkSetCopy" = "^{__SCNetworkSet=}^{__SCPreferences=}^{__CFString=}";
		"SCNetworkSetCopyAll" = "^{__CFArray=}^{__SCPreferences=}";
		// decl for SCNetworkSetCopyAvailableInterfaces not found
		"SCNetworkSetCopyCurrent" = "^{__SCNetworkSet=}^{__SCPreferences=}";
		// decl for SCNetworkSetCopySelectedVPNService not found
		"SCNetworkSetCopyServices" = "^{__CFArray=}^{__SCNetworkSet=}";
		"SCNetworkSetCreate" = "^{__SCNetworkSet=}^{__SCPreferences=}";
		// decl for SCNetworkSetEstablishDefaultConfiguration not found
		// decl for SCNetworkSetEstablishDefaultInterfaceConfiguration not found
		"SCNetworkSetGetName" = "^{__CFString=}^{__SCNetworkSet=}";
		"SCNetworkSetGetServiceOrder" = "^{__CFArray=}^{__SCNetworkSet=}";
		"SCNetworkSetGetSetID" = "^{__CFString=}^{__SCNetworkSet=}";
		"SCNetworkSetGetTypeID" = "Q";
		"SCNetworkSetRemove" = "C^{__SCNetworkSet=}";
		"SCNetworkSetRemoveService" = "C^{__SCNetworkSet=}^{__SCNetworkService=}";
		"SCNetworkSetSetCurrent" = "C^{__SCNetworkSet=}";
		"SCNetworkSetSetName" = "C^{__SCNetworkSet=}^{__CFString=}";
		// decl for SCNetworkSetSetSelectedVPNService not found
		"SCNetworkSetSetServiceOrder" = "C^{__SCNetworkSet=}^{__CFArray=}";
		// decl for SCNetworkSignatureCopyActiveIdentifierForAddress not found
		// decl for SCNetworkSignatureCopyActiveIdentifiers not found
		// decl for SCNetworkSignatureCopyIdentifierForConnectedSocket not found
		"SCPreferencesAddValue" = "C^{__SCPreferences=}^{__CFString=}^v";
		"SCPreferencesApplyChanges" = "C^{__SCPreferences=}";
		"SCPreferencesCommitChanges" = "C^{__SCPreferences=}";
		"SCPreferencesCopyKeyList" = "^{__CFArray=}^{__SCPreferences=}";
		"SCPreferencesCreate" = "^{__SCPreferences=}^{__CFAllocator=}^{__CFString=}^{__CFString=}";
		"SCPreferencesCreateWithAuthorization" = "^{__SCPreferences=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{AuthorizationOpaqueRef=}";
		// decl for SCPreferencesCreateWithOptions not found
		// decl for SCPreferencesGetHostName not found
		"SCPreferencesGetSignature" = "^{__CFData=}^{__SCPreferences=}";
		"SCPreferencesGetTypeID" = "Q";
		"SCPreferencesGetValue" = "^v^{__SCPreferences=}^{__CFString=}";
		"SCPreferencesLock" = "C^{__SCPreferences=}C";
		"SCPreferencesPathCreateUniqueChild" = "^{__CFString=}^{__SCPreferences=}^{__CFString=}";
		"SCPreferencesPathGetLink" = "^{__CFString=}^{__SCPreferences=}^{__CFString=}";
		"SCPreferencesPathGetValue" = "^{__CFDictionary=}^{__SCPreferences=}^{__CFString=}";
		// decl for SCPreferencesPathKeyCreate not found
		// decl for SCPreferencesPathKeyCreateNetworkServiceEntity not found
		// decl for SCPreferencesPathKeyCreateNetworkServices not found
		// decl for SCPreferencesPathKeyCreateSet not found
		// decl for SCPreferencesPathKeyCreateSetNetworkGlobalEntity not found
		// decl for SCPreferencesPathKeyCreateSetNetworkInterfaceEntity not found
		// decl for SCPreferencesPathKeyCreateSetNetworkService not found
		// decl for SCPreferencesPathKeyCreateSetNetworkServiceEntity not found
		// decl for SCPreferencesPathKeyCreateSets not found
		"SCPreferencesPathRemoveValue" = "C^{__SCPreferences=}^{__CFString=}";
		"SCPreferencesPathSetLink" = "C^{__SCPreferences=}^{__CFString=}^{__CFString=}";
		"SCPreferencesPathSetValue" = "C^{__SCPreferences=}^{__CFString=}^{__CFDictionary=}";
		// decl for SCPreferencesRemoveAllValues not found
		"SCPreferencesRemoveValue" = "C^{__SCPreferences=}^{__CFString=}";
		"SCPreferencesScheduleWithRunLoop" = "C^{__SCPreferences=}^{__CFRunLoop=}^{__CFString=}";
		"SCPreferencesSetCallback" = "C^{__SCPreferences=}^?^{?=q^v^?^?^?}";
		"SCPreferencesSetComputerName" = "C^{__SCPreferences=}^{__CFString=}I";
		"SCPreferencesSetDispatchQueue" = "C^{__SCPreferences=}^{dispatch_queue_s=}";
		// decl for SCPreferencesSetHostName not found
		"SCPreferencesSetLocalHostName" = "C^{__SCPreferences=}^{__CFString=}";
		"SCPreferencesSetValue" = "C^{__SCPreferences=}^{__CFString=}^v";
		"SCPreferencesSynchronize" = "v^{__SCPreferences=}";
		"SCPreferencesUnlock" = "C^{__SCPreferences=}";
		"SCPreferencesUnscheduleFromRunLoop" = "C^{__SCPreferences=}^{__CFRunLoop=}^{__CFString=}";
		// decl for SCPrint not found
		// decl for SCUserPreferencesCheckInterfacePassword not found
		// decl for SCUserPreferencesCopyExtendedInterfaceConfiguration not found
		// decl for SCUserPreferencesCopyInterfaceConfiguration not found
		// decl for SCUserPreferencesCopyInterfacePassword not found
		// decl for SCUserPreferencesCopyName not found
		// decl for SCUserPreferencesGetTypeID not found
		// decl for SCUserPreferencesGetUniqueID not found
		// decl for SCUserPreferencesIsForced not found
		// decl for SCUserPreferencesRemove not found
		// decl for SCUserPreferencesRemoveInterfacePassword not found
		// decl for SCUserPreferencesSetCurrent not found
		// decl for SCUserPreferencesSetExtendedInterfaceConfiguration not found
		// decl for SCUserPreferencesSetInterfaceConfiguration not found
		// decl for SCUserPreferencesSetInterfacePassword not found
		// decl for SCUserPreferencesSetName not found
		"SCVLANInterfaceCopyAll" = "^{__CFArray=}^{__SCPreferences=}";
		"SCVLANInterfaceCopyAvailablePhysicalInterfaces" = "^{__CFArray=}";
		"SCVLANInterfaceCreate" = "^{__SCNetworkInterface=}^{__SCPreferences=}^{__SCNetworkInterface=}^{__CFNumber=}";
		"SCVLANInterfaceGetOptions" = "^{__CFDictionary=}^{__SCNetworkInterface=}";
		"SCVLANInterfaceGetPhysicalInterface" = "^{__SCNetworkInterface=}^{__SCNetworkInterface=}";
		"SCVLANInterfaceGetTag" = "^{__CFNumber=}^{__SCNetworkInterface=}";
		"SCVLANInterfaceRemove" = "C^{__SCNetworkInterface=}";
		"SCVLANInterfaceSetLocalizedDisplayName" = "C^{__SCNetworkInterface=}^{__CFString=}";
		"SCVLANInterfaceSetOptions" = "C^{__SCNetworkInterface=}^{__CFDictionary=}";
		"SCVLANInterfaceSetPhysicalInterfaceAndTag" = "C^{__SCNetworkInterface=}^{__SCNetworkInterface=}^{__CFNumber=}";
		// decl for SystemConfigurationVersionNumber not found
		// decl for SystemConfigurationVersionString not found
		// decl for VPNApplicationInstalled not found
		// decl for VPNApplicationRemoved not found
		// decl for VPNConfigurationConnectionStart not found
		// decl for VPNConfigurationConnectionStop not found
		// decl for VPNConfigurationCopy not found
		// decl for VPNConfigurationCopyAll not found
		// decl for VPNConfigurationCopyAppRule not found
		// decl for VPNConfigurationCopyAppRuleIDs not found
		// decl for VPNConfigurationCopyCertificate not found
		// decl for VPNConfigurationCopyIdentities not found
		// decl for VPNConfigurationCopyLastConnectionError not found
		// decl for VPNConfigurationCopyPersistentData not found
		// decl for VPNConfigurationCopyVendorData not found
		// decl for VPNConfigurationCreate not found
		// decl for VPNConfigurationCreateWithOptions not found
		// decl for VPNConfigurationEnableVPNType not found
		// decl for VPNConfigurationGetEnabled not found
		// decl for VPNConfigurationGetName not found
		// decl for VPNConfigurationGetStatus not found
		// decl for VPNConfigurationGetTunnelType not found
		// decl for VPNConfigurationIsVPNTypeEnabled not found
		// decl for VPNConfigurationRemove not found
		// decl for VPNConfigurationRemoveAppRule not found
		// decl for VPNConfigurationScheduleWithRunLoop not found
		// decl for VPNConfigurationSendMessage not found
		// decl for VPNConfigurationSet not found
		// decl for VPNConfigurationSetAppRule not found
		// decl for VPNConfigurationSetCallback not found
		// decl for VPNConfigurationSetEnabled not found
		// decl for VPNConfigurationSetMessageCallback not found
		// decl for VPNConfigurationSetName not found
		// decl for VPNConfigurationSetPersistentData not found
		// decl for VPNConfigurationSetVendorData not found
		// decl for VPNConfigurationUnscheduleFromRunLoop not found
		// decl for VPNConfigurationValidateCertificate not found
		// decl for VPNCopyLastError not found
		// decl for VPNFlowCanAcceptBytes not found
		// decl for VPNFlowCopyError not found
		// decl for VPNFlowCopyProperty not found
		// decl for VPNFlowDatagramCopyNext not found
		// decl for VPNFlowDatagramSend not found
		// decl for VPNFlowGetTypeID not found
		// decl for VPNFlowHasBytesAvailable not found
		// decl for VPNFlowOpen not found
		// decl for VPNFlowReadClose not found
		// decl for VPNFlowScheduleWithRunLoop not found
		// decl for VPNFlowSetDispatchQueue not found
		// decl for VPNFlowSetEventHandler not found
		// decl for VPNFlowSetProperty not found
		// decl for VPNFlowStreamRead not found
		// decl for VPNFlowStreamWrite not found
		// decl for VPNFlowUnscheduleFromRunLoop not found
		// decl for VPNFlowWriteClose not found
		// decl for VPNSerializeData not found
		// decl for VPNServiceCopyAll not found
		// decl for VPNServiceCopyAllMatchingExternalID not found
		// decl for VPNServiceCopyAppRule not found
		// decl for VPNServiceCopyAppRuleIDs not found
		// decl for VPNServiceIsManagedAppVPN not found
		// decl for VPNServiceRemoveAppRule not found
		// decl for VPNServiceSetAppRule not found
		// decl for VPNTunnelAuthenticate not found
		// decl for VPNTunnelClearConfiguration not found
		// decl for VPNTunnelCopyPersistentData not found
		// decl for VPNTunnelCopySavedConfiguration not found
		// decl for VPNTunnelCopySavedConfigurationName not found
		// decl for VPNTunnelCopySavedVendorData not found
		// decl for VPNTunnelCopySocketInfo not found
		// decl for VPNTunnelCryptoAddConfigurations not found
		// decl for VPNTunnelCryptoDisable not found
		// decl for VPNTunnelCryptoEnable not found
		// decl for VPNTunnelCryptoGenerateIndex not found
		// decl for VPNTunnelCryptoRemoveConfigurations not found
		// decl for VPNTunnelCryptoStartDataTraffic not found
		// decl for VPNTunnelCryptoStopDataTraffic not found
		// decl for VPNTunnelDisplayBanner not found
		// decl for VPNTunnelEnvironmentEventComplete not found
		// decl for VPNTunnelFetchCredentialComplete not found
		// decl for VPNTunnelIPCSendMessage not found
		// decl for VPNTunnelIncrementDataReceived not found
		// decl for VPNTunnelIncrementDataSent not found
		// decl for VPNTunnelLog not found
		// decl for VPNTunnelSetConfigurationEntities not found
		// decl for VPNTunnelSetPersistentData not found
		// decl for VPNTunnelSetStatus not found
		// decl for VPNTunnelSetTunnelSocket not found
		// decl for VPNTunnelUpdatePlugin not found
		// decl for VPNUnserializeData not found
		// decl for _SCBridgeInterfaceCopyActive not found
		// decl for _SCBridgeInterfaceUpdateConfiguration not found
		// decl for _SCCopyDescription not found
		// decl for _SCCreatePropertyListFromResource not found
		// decl for _SCDPluginExecCommand not found
		// decl for _SCDPluginExecCommand2 not found
		// decl for _SCDPluginExecInit not found
		// decl for _SCErrorSet not found
		// decl for _SCNetworkConfigurationCheckValidity not found
		// decl for _SCNetworkConfigurationCheckValidityWithPreferences not found
		// decl for _SCNetworkConfigurationCopyMigrationPaths not found
		// decl for _SCNetworkConfigurationCopyMigrationRemovePaths not found
		// decl for _SCNetworkConfigurationPerformMigration not found
		// decl for _SCNetworkInterfaceCompare not found
		// decl for _SCNetworkInterfaceCopyActive not found
		// decl for _SCNetworkInterfaceCopyAllWithPreferences not found
		// decl for _SCNetworkInterfaceCopyInterfaceInfo not found
		// decl for _SCNetworkInterfaceCopySlashDevPath not found
		// decl for _SCNetworkInterfaceCreateWithBSDName not found
		// decl for _SCNetworkInterfaceCreateWithEntity not found
		// decl for _SCNetworkInterfaceCreateWithIONetworkInterfaceObject not found
		// decl for _SCNetworkInterfaceForceConfigurationRefresh not found
		// decl for _SCNetworkInterfaceGetConfigurationAction not found
		// decl for _SCNetworkInterfaceGetFamilySubType not found
		// decl for _SCNetworkInterfaceGetFamilyType not found
		// decl for _SCNetworkInterfaceGetHardwareAddress not found
		// decl for _SCNetworkInterfaceGetIOInterfaceNamePrefix not found
		// decl for _SCNetworkInterfaceGetIOInterfaceType not found
		// decl for _SCNetworkInterfaceGetIOInterfaceUnit not found
		// decl for _SCNetworkInterfaceGetIOPath not found
		// decl for _SCNetworkInterfaceGetIORegistryEntryID not found
		// decl for _SCNetworkInterfaceIsApplePreconfigured not found
		// decl for _SCNetworkInterfaceIsBluetoothP2P not found
		// decl for _SCNetworkInterfaceIsBluetoothPAN not found
		// decl for _SCNetworkInterfaceIsBluetoothPAN_NAP not found
		// decl for _SCNetworkInterfaceIsBuiltin not found
		// decl for _SCNetworkInterfaceIsHiddenConfiguration not found
		// decl for _SCNetworkInterfaceIsPhysicalEthernet not found
		// decl for _SCNetworkInterfaceIsTethered not found
		// decl for _SCNetworkInterfaceIsThunderbolt not found
		// decl for _SCNetworkInterfaceIsTrustRequired not found
		// decl for _SCNetworkMigrationAreConfigurationsIdentical not found
		// decl for _SCNetworkProtocolCompare not found
		// decl for _SCNetworkServiceCompare not found
		// decl for _SCNetworkServiceCopyActive not found
		// decl for _SCNetworkServiceIsVPN not found
		// decl for _SCNetworkServiceSetServiceID not found
		// decl for _SCNetworkSetCompare not found
		// decl for _SCNetworkSetCreateDefault not found
		// decl for _SCNetworkSetSetSetID not found
		// decl for _SCPreferencesCopyComputerName not found
		// decl for _SCPreferencesCopyLocalHostName not found
		// decl for _SCPreferencesSystemKeychainPasswordItemCopy not found
		// decl for _SCPreferencesSystemKeychainPasswordItemExists not found
		// decl for _SCPreferencesSystemKeychainPasswordItemRemove not found
		// decl for _SCPreferencesSystemKeychainPasswordItemSet not found
		// decl for _SCSecKeychainCopySystemKeychain not found
		// decl for _SCSecKeychainPasswordItemCopy not found
		// decl for _SCSecKeychainPasswordItemExists not found
		// decl for _SCSecKeychainPasswordItemRemove not found
		// decl for _SCSecKeychainPasswordItemSet not found
		// decl for _SCSerialize not found
		// decl for _SCSerializeData not found
		// decl for _SCSerializeMultiple not found
		// decl for _SCSerializeString not found
		// decl for _SCUnserialize not found
		// decl for _SCUnserializeData not found
		// decl for _SCUnserializeMultiple not found
		// decl for _SCUnserializeString not found
		// decl for _SCVLANInterfaceCopyActive not found
		// decl for _SCVLANInterfaceUpdateConfiguration not found
		// decl for _SC_CFBundleCopyNonLocalizedString not found
		// decl for _SC_CFBundleGet not found
		// decl for _SC_CFMachPortCreateWithPort not found
		// decl for _SC_CFStringIsValidDNSName not found
		// decl for _SC_CFStringIsValidNetBIOSName not found
		// decl for _SC_LOG_DEFAULT not found
		// decl for _SC_cfstring_to_cstring not found
		// decl for _SC_checkResolverReachabilityByAddress not found
		// decl for _SC_copyBacktrace not found
		// decl for _SC_crash not found
		// decl for _SC_dlopen not found
		// decl for _SC_domainEndsWithDomain not found
		// decl for _SC_getconninfo not found
		// decl for _SC_hostMatchesDomain not found
		// decl for _SC_hw_model not found
		// decl for _SC_isInstallEnvironment not found
		// decl for _SC_logMachPortReferences not found
		// decl for _SC_logMachPortStatus not found
		// decl for _SC_sendMachMessage not found
		// decl for _SC_sockaddr_to_string not found
		// decl for _SC_stringIsValidDNSName not found
		// decl for _SC_string_to_sockaddr not found
		// decl for _SC_syslog_os_log_mapping not found
		// decl for _SC_trimDomain not found
		// decl for __SCDynamicStoreCreatePrivate not found
		// decl for __SCNetworkConnectionCopyOnDemandInfoWithName not found
		// decl for __SCNetworkInterfaceCreateCapabilities not found
		// decl for __SCNetworkInterfaceCreateMediaOptions not found
		// decl for __SCNetworkInterfaceSetDisableUntilNeededValue not found
		// decl for __SC_Log not found
		// decl for _sc_debug not found
		// decl for _sc_log not found
		// decl for _sc_verbose not found
		// decl for _scprefs_observer_cancel not found
		// decl for _scprefs_observer_watch not found
		// decl for isa_xpc_bool not found
		// decl for isa_xpc_connection not found
		// decl for isa_xpc_dictionary not found
		// decl for isa_xpc_error not found
		// decl for snhelper_flow_divert_uuid_policy_add not found
		// decl for snhelper_flow_divert_uuid_policy_clear not found
		// decl for snhelper_flow_divert_uuid_policy_remove not found
		// decl for snhelper_get_uuid_for_app not found
	};
}
